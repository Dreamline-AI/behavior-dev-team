{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/AnswerCard.js\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nvar AnswerCard = function AnswerCard(_ref) {\n  var question = _ref.question,\n    options = _ref.options,\n    correct_option = _ref.correct_option;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedOption = _useState2[0],\n    setSelectedOption = _useState2[1];\n  var translateY = useRef(new Animated.Value(0)).current;\n  var opacity = useRef(new Animated.Value(1)).current;\n  var _useState3 = useState('#808080'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    optionBorderColor = _useState4[0],\n    setOptionBorderColor = _useState4[1];\n  var handleOptionSelect = function handleOptionSelect(option) {\n    setSelectedOption(option);\n    setOptionBorderColor(option === correct_option ? 'green' : 'red');\n    animateSelectedOption();\n  };\n  var animateSelectedOption = function animateSelectedOption() {\n    Animated.parallel([Animated.timing(translateY, {\n      toValue: -100,\n      duration: 600,\n      useNativeDriver: true\n    }), Animated.timing(opacity, {\n      toValue: 0,\n      duration: 600,\n      useNativeDriver: true\n    })]).start();\n  };\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.Text, {\n    style: [styles.question, {\n      opacity: opacity\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, question), options.map(function (option, index) {\n    return React.createElement(Animated.View, {\n      key: index,\n      style: [styles.optionContainer, {\n        opacity: selectedOption === null || selectedOption === option ? 1 : 0,\n        transform: [{\n          translateY: selectedOption === option ? translateY : 0\n        }],\n        borderColor: selectedOption === option ? optionBorderColor : '#808080'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleOptionSelect(option);\n      },\n      style: styles.option,\n      disabled: selectedOption !== null,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.optionText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, option)));\n  }), selectedOption && React.createElement(Text, {\n    style: styles.resultText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, selectedOption === correct_option ? 'Correct!' : \"Wrong! Correct answer is \" + correct_option));\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 20\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  optionContainer: {\n    alignItems: 'center',\n    marginBottom: 10,\n    borderWidth: 1,\n    borderRadius: 6,\n    height: 150,\n    width: 200,\n    justifyContent: 'center'\n  },\n  option: {\n    backgroundColor: '#f4f4f4',\n    borderRadius: 6,\n    height: 150,\n    width: 200,\n    justifyContent: 'center'\n  },\n  optionText: {\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  resultText: {\n    fontSize: 18,\n    marginTop: 10,\n    textAlign: 'center'\n  }\n});\nexport default AnswerCard;","map":{"version":3,"names":["React","useState","useRef","View","Text","TouchableOpacity","StyleSheet","Animated","AnswerCard","_ref","question","options","correct_option","_useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","translateY","Value","current","opacity","_useState3","_useState4","optionBorderColor","setOptionBorderColor","handleOptionSelect","option","animateSelectedOption","parallel","timing","toValue","duration","useNativeDriver","start","createElement","style","styles","container","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","key","optionContainer","transform","borderColor","onPress","disabled","optionText","resultText","create","marginBottom","fontSize","fontWeight","textAlign","alignItems","borderWidth","borderRadius","height","width","justifyContent","backgroundColor","marginTop"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/AnswerCard.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Animated } from 'react-native';\n\nconst AnswerCard = ({ question, options, correct_option }) => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const translateY = useRef(new Animated.Value(0)).current;\n  const opacity = useRef(new Animated.Value(1)).current;\n  const [optionBorderColor, setOptionBorderColor] = useState('#808080'); // Default border color\n\n  const handleOptionSelect = (option) => {\n    setSelectedOption(option);\n    setOptionBorderColor(option === correct_option ? 'green' : 'red'); // Change border color based on correctness\n    animateSelectedOption();\n  };\n\n  const animateSelectedOption = () => {\n    Animated.parallel([\n      Animated.timing(translateY, {\n        toValue: -100,\n        duration: 600,\n        useNativeDriver: true,\n      }),\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 600,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  };\n\n  return (\n    <View style={styles.container}>\n      <Animated.Text style={[styles.question, { opacity: opacity }]}>{question}</Animated.Text>\n      {options.map((option, index) => (\n        <Animated.View\n          key={index}\n          style={[\n            styles.optionContainer,\n            {\n              opacity: selectedOption === null || selectedOption === option ? 1 : 0,\n              transform: [{ translateY: selectedOption === option ? translateY : 0 }],\n              borderColor: selectedOption === option ? optionBorderColor : '#808080', // Change border color of selected option\n            },\n          ]}\n        >\n          <TouchableOpacity\n            onPress={() => handleOptionSelect(option)}\n            style={styles.option}\n            disabled={selectedOption !== null}\n          >\n            <Text style={styles.optionText}>{option}</Text>\n          </TouchableOpacity>\n        </Animated.View>\n      ))}\n      {selectedOption && (\n        <Text style={styles.resultText}>\n          {selectedOption === correct_option ? 'Correct!' : `Wrong! Correct answer is ${correct_option}`}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 20,\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  optionContainer: {\n    alignItems: 'center',\n    marginBottom: 10,\n    borderWidth: 1,\n    borderRadius: 6,\n    height: 150,\n    width: 200,\n    justifyContent: 'center',\n  },\n  option: {\n    backgroundColor: '#f4f4f4',\n    borderRadius: 6,\n    height: 150,\n    width: 200,\n    justifyContent: 'center',\n  },\n  optionText: {\n    fontSize: 18,\n    textAlign: 'center',\n  },\n  resultText: {\n    fontSize: 18,\n    marginTop: 10,\n    textAlign: 'center',\n  },\n});\n\nexport default AnswerCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}