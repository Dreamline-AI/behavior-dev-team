{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Community Dreams frontend\\\\frontend\\\\src\\\\components\\\\Quiz.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"../components/Button\";\nimport * as Progress from 'react-native-progress';\nimport IncorrectQuiz from \"./IncorrectQuiz\";\nvar Quiz = function Quiz(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentQuestionIndex = _useState6[0],\n    setCurrentQuestionIndex = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isCorrect = _useState8[0],\n    setIsCorrect = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedOption = _useState10[0],\n    setSelectedOption = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    quizProgress = _useState12[0],\n    setQuizProgress = _useState12[1];\n  var translateY = useRef(new Animated.Value(0)).current;\n  var fadeAnim = useRef(new Animated.Value(1)).current;\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showMessage = _useState14[0],\n    setShowMessage = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    customMessage = _useState16[0],\n    setCustomMessage = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    incorrectIndices = _useState18[0],\n    setIncorrectIndices = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    incorrectQuestions = _useState20[0],\n    setIncorrectQuestions = _useState20[1];\n  useEffect(function () {\n    fetch(\"http://localhost:8080/api/questions?triviaId=1\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setData(data);\n      setQuizProgress(data.length);\n      setLoading(false);\n    }).catch(function (error) {\n      console.error('Error fetching quiz data:', error);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(function () {\n    if (route && route.params && route.params.incorrectIndices) {\n      var _incorrectIndices = route.params.incorrectIndices;\n      setIncorrectQuestions(data.filter(function (_, index) {\n        return _incorrectIndices.includes(index);\n      }));\n    }\n  }, [route, data]);\n  useEffect(function () {\n    if (selectedOption !== null) {\n      fadeOut();\n    }\n  }, [selectedOption]);\n  var progress = (currentQuestionIndex + 1) / quizProgress;\n  var handleNext = function handleNext() {\n    if (currentQuestionIndex === data.length - 1) {\n      if (incorrectIndices.length > 0) {\n        navigation.navigate('RedoQuestionsScreen', {\n          incorrectIndices: incorrectIndices,\n          progress: progress\n        });\n      } else {\n        navigation.navigate('QuizEndingScreen');\n      }\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(null);\n      setIsCorrect(null);\n      fadeAnim.setValue(1);\n      translateY.setValue(0);\n      setShowMessage(false);\n      setCustomMessage(\"\");\n    }\n  };\n  var fadeOut = function fadeOut() {\n    Animated.parallel([Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true\n    })]).start(function () {\n      return setShowMessage(true);\n    });\n  };\n  var moveCardUp = function moveCardUp(selectedOption) {\n    var currentQuestion = data[currentQuestionIndex];\n    var correctOption = currentQuestion.options[0];\n    var toValue = selectedOption === correctOption ? -80 : -280;\n    Animated.parallel([Animated.timing(translateY, {\n      toValue: toValue,\n      duration: 600,\n      useNativeDriver: true\n    })]).start();\n  };\n  var handlePressedOption = function handlePressedOption(pressedOption) {\n    var currentQuestion = data[currentQuestionIndex];\n    var isAnswerCorrect = currentQuestion.correctOption === pressedOption;\n    setIsCorrect(isAnswerCorrect);\n    setSelectedOption(pressedOption);\n    moveCardUp(pressedOption);\n    fadeOut();\n    if (!isAnswerCorrect) {\n      setIncorrectIndices([].concat(_toConsumableArray(incorrectIndices), [currentQuestionIndex]));\n      setCustomMessage(currentQuestion.wrongMessage);\n    } else {\n      setCustomMessage(currentQuestion.correctMessage);\n    }\n  };\n  if (loading) {\n    return React.createElement(View, {\n      style: styles.loadingContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }, \"Loading Quiz...\"));\n  }\n  if (incorrectQuestions.length > 0) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }, React.createElement(IncorrectQuiz, {\n      incorrectQuestions: incorrectQuestions,\n      navigation: navigation,\n      handleNext: handleNext,\n      handlePressedOption: handlePressedOption,\n      selectedOption: selectedOption,\n      isCorrect: isCorrect,\n      setIsCorrect: setIsCorrect,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }));\n  }\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.progressBarContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, React.createElement(Progress.Bar, {\n    progress: progress,\n    width: 350,\n    color: \"black\",\n    unfilledColor: \"rgba(217, 217, 217, 1)\",\n    borderWidth: 0,\n    height: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  })), React.createElement(Animated.View, {\n    style: [{\n      opacity: selectedOption !== null ? fadeAnim : 1\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.question,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }, data[currentQuestionIndex].question)), data[currentQuestionIndex].options.map(function (option) {\n    return React.createElement(Animated.View, {\n      key: option,\n      style: [{\n        opacity: selectedOption !== option ? fadeAnim : 1,\n        transform: selectedOption === option ? [{\n          translateY: translateY\n        }] : null\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: isCorrect ? styles.correctMessage : styles.wrongMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }\n    }, isCorrect !== null ? isCorrect ? \"Correct! \" : \"No\" : \"\"), React.createElement(Pressable, {\n      style: [styles.AnswerBox, selectedOption === option && (isCorrect ? styles.correctBox : styles.wrongBox)],\n      onPress: function onPress() {\n        return handlePressedOption(option);\n      },\n      disabled: !!selectedOption,\n      key: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.answerText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }\n    }, option)));\n  }), React.createElement(Text, {\n    style: styles.customMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  }, customMessage), React.createElement(Button, {\n    color: \"black\",\n    mode: \"contained\",\n    onPress: handleNext,\n    disabled: !selectedOption,\n    style: !selectedOption ? styles.disabledButton : null,\n    labelStyle: !selectedOption ? styles.disabledButtonText : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }, \"Continue\"));\n};\nexport default Quiz;\nvar styles = StyleSheet.create({\n  AnswerBox: {\n    width: 361,\n    height: 214,\n    borderWidth: 3,\n    borderRadius: 6,\n    borderColor: 'rgba(0, 0, 0, 0.05)',\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  answerText: {\n    textAlign: 'center',\n    fontSize: 24\n  },\n  question: {\n    marginBottom: 10,\n    fontSize: 18\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  correctBox: {\n    borderColor: 'rgba(19, 212, 2, 1)'\n  },\n  wrongBox: {\n    borderColor: 'rgba(241, 58, 0, 1)'\n  },\n  progressBarContainer: {\n    width: '100%',\n    height: 20,\n    marginBottom: 30\n  },\n  correctMessage: {\n    color: 'rgba(98, 218, 103, 1)',\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 30\n  },\n  wrongMessage: {\n    color: 'rgba(255, 72, 15, 1)',\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  customMessage: {\n    color: 'black',\n    fontSize: 16,\n    position: 'absolute',\n    top: 390,\n    width: '100%',\n    textAlign: 'left'\n  },\n  disabledButton: {\n    backgroundColor: 'black'\n  },\n  disabledButtonText: {\n    color: 'white'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","Text","View","StyleSheet","Animated","Pressable","ActivityIndicator","Button","Progress","IncorrectQuiz","Quiz","_ref","navigation","route","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","currentQuestionIndex","setCurrentQuestionIndex","_useState7","_useState8","isCorrect","setIsCorrect","_useState9","_useState10","selectedOption","setSelectedOption","_useState11","_useState12","quizProgress","setQuizProgress","translateY","Value","current","fadeAnim","_useState13","_useState14","showMessage","setShowMessage","_useState15","_useState16","customMessage","setCustomMessage","_useState17","_useState18","incorrectIndices","setIncorrectIndices","_useState19","_useState20","incorrectQuestions","setIncorrectQuestions","fetch","then","response","json","length","catch","error","console","params","filter","_","index","includes","fadeOut","progress","handleNext","navigate","setValue","parallel","timing","toValue","duration","useNativeDriver","start","moveCardUp","currentQuestion","correctOption","options","handlePressedOption","pressedOption","isAnswerCorrect","concat","_toConsumableArray","wrongMessage","correctMessage","createElement","style","styles","loadingContainer","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","size","color","container","progressBarContainer","Bar","width","unfilledColor","borderWidth","height","opacity","question","map","option","key","transform","AnswerBox","correctBox","wrongBox","onPress","disabled","answerText","mode","disabledButton","labelStyle","disabledButtonText","create","borderRadius","borderColor","backgroundColor","alignItems","justifyContent","textAlign","fontSize","marginBottom","flex","position","top"],"sources":["D:/Community Dreams frontend/frontend/src/components/Quiz.js"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect, useRef } from \"react\";\r\n// import { Text, View, StyleSheet, Animated, Pressable } from \"react-native\";\r\n// import data from \"../helpers/data\";\r\n// import Button from '../components/Button';\r\n// import * as Progress from 'react-native-progress';\r\n// import IncorrectQuiz from './IncorrectQuiz';\r\n\r\n// const Quiz = ({ navigation, route }) => {\r\n//     const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n//     const [isCorrect, setIsCorrect] = useState(null);\r\n//     const [selectedOption, setSelectedOption] = useState(null);\r\n//     const [quizProgress, setQuizProgress] = useState(data.length);\r\n//     const translateY = useRef(new Animated.Value(0)).current;\r\n//     const fadeAnim = useRef(new Animated.Value(1)).current;\r\n//     const [showMessage, setShowMessage] = useState(false);\r\n//     const [customMessage, setCustomMessage] = useState(\"\");\r\n//     const [incorrectIndices, setIncorrectIndices] = useState([]);\r\n//     const [incorrectQuestions, setIncorrectQuestions] = useState([]); \r\n\r\n\r\n\r\n//     useEffect(() => {\r\n//         if (route && route.params && route.params.incorrectIndices) {\r\n//             const { incorrectIndices } = route.params;\r\n//             setIncorrectQuestions(data.filter((_, index) => incorrectIndices.includes(index))); \r\n//         }\r\n//     }, [route]);\r\n\r\n//     useEffect(() => {\r\n//         if (selectedOption !== null) {\r\n//             fadeOut();\r\n//         }\r\n//     }, [selectedOption]);\r\n\r\n//     const progress = (currentQuestionIndex + 1) / quizProgress;\r\n\r\n//     const handleNext = () => {\r\n//         if (currentQuestionIndex === data.length - 1) {\r\n//             if (incorrectIndices.length > 0) {\r\n//                 navigation.navigate('RedoQuestionsScreen', { incorrectIndices: incorrectIndices, progress:progress });\r\n//             } else {\r\n//                 navigation.navigate('QuizEndingScreen');\r\n//             }\r\n//         } else {\r\n//             setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n//             setSelectedOption(null);\r\n//             setIsCorrect(null);\r\n//             fadeAnim.setValue(1);\r\n//             translateY.setValue(0);\r\n//             setShowMessage(false);\r\n//             setCustomMessage(\"\"); \r\n//         }\r\n//     };\r\n\r\n//     const fadeOut = () => {\r\n//         Animated.parallel([\r\n//             Animated.timing(fadeAnim, {\r\n//                 toValue: 0,\r\n//                 duration: 200,\r\n//                 useNativeDriver: true,\r\n//             })\r\n//         ]).start(() => setShowMessage(true));\r\n//     };\r\n\r\n//     const moveCardUp = (selectedOption) => {\r\n//         const currentQuestion = data[currentQuestionIndex];\r\n//         const correctOption = currentQuestion.options[0];\r\n//         let toValue = selectedOption === correctOption ? -80 : -280;\r\n\r\n//         Animated.parallel([\r\n//             Animated.timing(translateY, {\r\n//                 toValue: toValue,\r\n//                 duration: 600,\r\n//                 useNativeDriver: true,\r\n//             }),\r\n//         ]).start();\r\n//     };\r\n\r\n//     const handlePressedOption = (pressedOption) => {\r\n//         const currentQuestion = data[currentQuestionIndex];\r\n//         const isAnswerCorrect = currentQuestion.correct_option === pressedOption;\r\n//         setIsCorrect(isAnswerCorrect);\r\n//         setSelectedOption(pressedOption);\r\n//         moveCardUp(pressedOption);\r\n//         fadeOut();\r\n    \r\n//         if (!isAnswerCorrect) {\r\n//             setIncorrectIndices([...incorrectIndices, currentQuestionIndex]); \r\n//             console.log(\"Incorrect Indices:\", incorrectIndices); \r\n//             setCustomMessage(currentQuestion.wrong_message);\r\n//         } else {\r\n//             setCustomMessage(currentQuestion.correct_message);\r\n//         }\r\n//     };\r\n    \r\n//     if (incorrectQuestions.length > 0) {\r\n//         return (\r\n//             <View style={styles.container}>\r\n//                 <IncorrectQuiz\r\n//                     incorrectQuestions={incorrectQuestions}\r\n//                     navigation={navigation} \r\n//                     handleNext={handleNext}\r\n//                     handlePressedOption={handlePressedOption}\r\n//                     selectedOption={selectedOption}\r\n//                     isCorrect={isCorrect}\r\n//                     setIsCorrect={setIsCorrect}\r\n//                 />\r\n//             </View>\r\n//         );\r\n//     }\r\n\r\n//     return (\r\n//         <View style={styles.container}>\r\n\r\n//             <View style={styles.progressBarContainer}>\r\n//                 <Progress.Bar progress={progress} width={350} color='black' unfilledColor='rgba(217, 217, 217, 1)' borderWidth={0} height={8} />\r\n//             </View>\r\n\r\n//             <Animated.View\r\n//                 style={[{ opacity: selectedOption !== null ? fadeAnim : 1 },]}\r\n//             >\r\n//                 <Text style={styles.question}>{data[currentQuestionIndex].question}</Text>\r\n//             </Animated.View>\r\n\r\n//             {data[currentQuestionIndex].options.map((option) => (\r\n//                 <Animated.View\r\n//                     key={option}\r\n//                     style={[\r\n//                         {\r\n//                             opacity: selectedOption !== option ? fadeAnim : 1,\r\n//                             transform: selectedOption === option ? [{ translateY: translateY }] : null,\r\n//                         },\r\n//                     ]}\r\n//                 >\r\n//                     <Text style={isCorrect ? styles.correctMessage : styles.wrongMessage}>\r\n//                         {isCorrect !== null ? (isCorrect ? \"Correct! \" : \"No\") : \"\"}\r\n//                     </Text>\r\n//                     <Pressable\r\n//                         style={[\r\n//                             styles.AnswerBox,\r\n//                             selectedOption === option && (isCorrect ? styles.correctBox : styles.wrongBox),\r\n//                         ]}\r\n//                         onPress={() => handlePressedOption(option)}\r\n//                         disabled={selectedOption}\r\n//                         key={option}\r\n\r\n//                     >\r\n//                         <Text style={styles.answerText}>{option}</Text>\r\n\r\n//                     </Pressable>\r\n\r\n//                 </Animated.View>\r\n\r\n//             ))}\r\n\r\n//             <Text style={styles.customMessage}>{customMessage}</Text>\r\n\r\n//             <Button\r\n//                 color=\"black\"\r\n//                 mode=\"contained\"\r\n//                 onPress={handleNext}\r\n//                 disabled={!selectedOption} \r\n//                 style={!selectedOption ? styles.disabledButton : null} \r\n//                 labelStyle={!selectedOption ? styles.disabledButtonText : null} \r\n//             >\r\n//                 Continue\r\n//             </Button>\r\n//         </View>\r\n//     );\r\n// }\r\n\r\n// export default Quiz;\r\n\r\n// const styles = StyleSheet.create({\r\n//     AnswerBox: {\r\n//         width: 361,\r\n//         height: 214,\r\n//         borderWidth: 3,\r\n//         borderRadius: 6,\r\n//         borderColor: 'rgba(0, 0, 0, 0.05)',\r\n//         backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n//         alignItems: 'center',\r\n//         justifyContent: 'center', \r\n//     },\r\n\r\n//     answerText: {\r\n//         textAlign: 'center',\r\n//         fontSize: 24,\r\n//     },\r\n//     question: {\r\n//         marginBottom: 10,\r\n//         fontSize: 18,\r\n//     },\r\n//     container: {\r\n//         flex: 1,\r\n//         alignItems: 'center',\r\n//         justifyContent: 'center',\r\n//     },\r\n//     correctBox: {\r\n//         borderColor: 'rgba(19, 212, 2, 1)',\r\n//     },\r\n//     wrongBox: {\r\n//         borderColor: 'rgba(241, 58, 0, 1)',\r\n//     },\r\n//     progressBarContainer: {\r\n//         width: '100%',\r\n//         height: 20,\r\n//         marginBottom: 30,\r\n//     },\r\n\r\n//     correctMessage: {\r\n//         color: 'rgba(98, 218, 103, 1)',\r\n//         fontSize: 24,\r\n//         textAlign: 'center',\r\n//         marginBottom: 30,\r\n//     },\r\n//     wrongMessage: {\r\n//         color: 'rgba(255, 72, 15, 1)',\r\n//         fontSize: 24,\r\n//         textAlign: 'center',\r\n//         marginBottom: 20,\r\n//     },\r\n//     customMessage: {\r\n//         color: 'black',\r\n//         fontSize: 16,\r\n//         position: 'absolute',\r\n//         top: 390, \r\n//         width: '100%',\r\n//         textAlign: 'left', \r\n\r\n//     },\r\n//     disabledButton: {\r\n//         backgroundColor: 'black',\r\n//     },\r\n//     disabledButtonText: {\r\n//         color: 'white', \r\n//     },\r\n// });\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Text, View, StyleSheet, Animated, Pressable, ActivityIndicator } from \"react-native\";\r\nimport Button from '../components/Button';\r\nimport * as Progress from 'react-native-progress';\r\nimport IncorrectQuiz from './IncorrectQuiz';\r\n\r\nconst Quiz = ({ navigation, route }) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [isCorrect, setIsCorrect] = useState(null);\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [quizProgress, setQuizProgress] = useState(0);\r\n    const translateY = useRef(new Animated.Value(0)).current;\r\n    const fadeAnim = useRef(new Animated.Value(1)).current;\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [customMessage, setCustomMessage] = useState(\"\");\r\n    const [incorrectIndices, setIncorrectIndices] = useState([]);\r\n    const [incorrectQuestions, setIncorrectQuestions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/api/questions?triviaId=1\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setData(data);\r\n                setQuizProgress(data.length);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching quiz data:', error);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (route && route.params && route.params.incorrectIndices) {\r\n            const { incorrectIndices } = route.params;\r\n            setIncorrectQuestions(data.filter((_, index) => incorrectIndices.includes(index)));\r\n        }\r\n    }, [route, data]);\r\n\r\n    useEffect(() => {\r\n        if (selectedOption !== null) {\r\n            fadeOut();\r\n        }\r\n    }, [selectedOption]);\r\n\r\n    const progress = (currentQuestionIndex + 1) / quizProgress;\r\n\r\n    const handleNext = () => {\r\n        if (currentQuestionIndex === data.length - 1) {\r\n            if (incorrectIndices.length > 0) {\r\n                navigation.navigate('RedoQuestionsScreen', { incorrectIndices: incorrectIndices, progress: progress });\r\n            } else {\r\n                navigation.navigate('QuizEndingScreen');\r\n            }\r\n        } else {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n            setSelectedOption(null);\r\n            setIsCorrect(null);\r\n            fadeAnim.setValue(1);\r\n            translateY.setValue(0);\r\n            setShowMessage(false);\r\n            setCustomMessage(\"\");\r\n        }\r\n    };\r\n\r\n    const fadeOut = () => {\r\n        Animated.parallel([\r\n            Animated.timing(fadeAnim, {\r\n                toValue: 0,\r\n                duration: 200,\r\n                useNativeDriver: true,\r\n            })\r\n        ]).start(() => setShowMessage(true));\r\n    };\r\n\r\n    const moveCardUp = (selectedOption) => {\r\n        const currentQuestion = data[currentQuestionIndex];\r\n        const correctOption = currentQuestion.options[0];\r\n        let toValue = selectedOption === correctOption ? -80 : -280;\r\n\r\n        Animated.parallel([\r\n            Animated.timing(translateY, {\r\n                toValue: toValue,\r\n                duration: 600,\r\n                useNativeDriver: true,\r\n            }),\r\n        ]).start();\r\n    };\r\n\r\n    const handlePressedOption = (pressedOption) => {\r\n        const currentQuestion = data[currentQuestionIndex];\r\n        const isAnswerCorrect = currentQuestion.correctOption === pressedOption;\r\n        setIsCorrect(isAnswerCorrect);\r\n        setSelectedOption(pressedOption);\r\n        moveCardUp(pressedOption);\r\n        fadeOut();\r\n\r\n        if (!isAnswerCorrect) {\r\n            setIncorrectIndices([...incorrectIndices, currentQuestionIndex]);\r\n            setCustomMessage(currentQuestion.wrongMessage);\r\n        } else {\r\n            setCustomMessage(currentQuestion.correctMessage);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <View style={styles.loadingContainer}>\r\n                <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n                <Text>Loading Quiz...</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    if (incorrectQuestions.length > 0) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <IncorrectQuiz\r\n                    incorrectQuestions={incorrectQuestions}\r\n                    navigation={navigation}\r\n                    handleNext={handleNext}\r\n                    handlePressedOption={handlePressedOption}\r\n                    selectedOption={selectedOption}\r\n                    isCorrect={isCorrect}\r\n                    setIsCorrect={setIsCorrect}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n            <View style={styles.progressBarContainer}>\r\n                <Progress.Bar progress={progress} width={350} color='black' unfilledColor='rgba(217, 217, 217, 1)' borderWidth={0} height={8} />\r\n            </View>\r\n\r\n            <Animated.View\r\n                style={[{ opacity: selectedOption !== null ? fadeAnim : 1 },]}\r\n            >\r\n                <Text style={styles.question}>{data[currentQuestionIndex].question}</Text>\r\n            </Animated.View>\r\n\r\n            {data[currentQuestionIndex].options.map((option) => (\r\n                <Animated.View\r\n                    key={option}\r\n                    style={[\r\n                        {\r\n                            opacity: selectedOption !== option ? fadeAnim : 1,\r\n                            transform: selectedOption === option ? [{ translateY: translateY }] : null,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Text style={isCorrect ? styles.correctMessage : styles.wrongMessage}>\r\n                        {isCorrect !== null ? (isCorrect ? \"Correct! \" : \"No\") : \"\"}\r\n                    </Text>\r\n                    <Pressable\r\n                        style={[\r\n                            styles.AnswerBox,\r\n                            selectedOption === option && (isCorrect ? styles.correctBox : styles.wrongBox),\r\n                        ]}\r\n                        onPress={() => handlePressedOption(option)}\r\n                        disabled={!!selectedOption}\r\n                        key={option}\r\n\r\n                    >\r\n                        <Text style={styles.answerText}>{option}</Text>\r\n\r\n                    </Pressable>\r\n\r\n                </Animated.View>\r\n\r\n            ))}\r\n\r\n            <Text style={styles.customMessage}>{customMessage}</Text>\r\n\r\n            <Button\r\n                color=\"black\"\r\n                mode=\"contained\"\r\n                onPress={handleNext}\r\n                disabled={!selectedOption}\r\n                style={!selectedOption ? styles.disabledButton : null}\r\n                labelStyle={!selectedOption ? styles.disabledButtonText : null}\r\n            >\r\n                Continue\r\n            </Button>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n\r\nconst styles = StyleSheet.create({\r\n    AnswerBox: {\r\n        width: 361,\r\n        height: 214,\r\n        borderWidth: 3,\r\n        borderRadius: 6,\r\n        borderColor: 'rgba(0, 0, 0, 0.05)',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    answerText: {\r\n        textAlign: 'center',\r\n        fontSize: 24,\r\n    },\r\n    question: {\r\n        marginBottom: 10,\r\n        fontSize: 18,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    correctBox: {\r\n        borderColor: 'rgba(19, 212, 2, 1)',\r\n    },\r\n    wrongBox: {\r\n        borderColor: 'rgba(241, 58, 0, 1)',\r\n    },\r\n    progressBarContainer: {\r\n        width: '100%',\r\n        height: 20,\r\n        marginBottom: 30,\r\n    },\r\n\r\n    correctMessage: {\r\n        color: 'rgba(98, 218, 103, 1)',\r\n        fontSize: 24,\r\n        textAlign: 'center',\r\n        marginBottom: 30,\r\n    },\r\n    wrongMessage: {\r\n        color: 'rgba(255, 72, 15, 1)',\r\n        fontSize: 24,\r\n        textAlign: 'center',\r\n        marginBottom: 20,\r\n    },\r\n    customMessage: {\r\n        color: 'black',\r\n        fontSize: 16,\r\n        position: 'absolute',\r\n        top: 390,\r\n        width: '100%',\r\n        textAlign: 'left',\r\n\r\n    },\r\n    disabledButton: {\r\n        backgroundColor: 'black',\r\n    },\r\n    disabledButtonText: {\r\n        color: 'white',\r\n    },\r\n    loadingContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}