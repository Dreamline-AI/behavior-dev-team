{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/screens/QuizScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport data from \"../helpers/data\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport Background from \"../components/Background\";\nimport AnswerCard from \"../components/AnswerCard\";\nimport Quiz from \"../components/quiz\";\nvar QuizScreen = function QuizScreen(_ref) {\n  var navigation = _ref.navigation;\n  var allQuestions = data;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestionIndex = _useState2[0],\n    setCurrentQuestionIndex = _useState2[1];\n  var _useState3 = useState(new Animated.Value(1)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    progress = _useState4[0],\n    setProgress = _useState4[1];\n  var handleNext = function handleNext(navigation) {\n    if (currentQuestionIndex == allQuestions.length - 1) {\n      navigation.navigate(\"Result\", {\n        score: score\n      });\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentOptionSelected(null);\n      setCorrectOption(null);\n      setIsOptionsDisabled(false);\n    }\n    Animated.parallel([Animated.timing(progress, {\n      toValue: currentQuestionIndex + 2,\n      duration: 2000,\n      useNativeDriver: false\n    }), Animated.sequence([Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 100,\n      useNativeDriver: false\n    }), Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 1900,\n      useNativeDriver: false\n    })])]).start();\n  };\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(ProgressBar, {\n    progress: progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Quiz, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [styles.btnNext, {\n      backgroundColor: \"#ffffff\"\n    }],\n    onPress: handleNext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.btnNextText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"NEXT\")));\n};\nvar styles = StyleSheet.create({\n  answerCardContainer: {\n    marginBottom: 20\n  },\n  btnNext: {\n    borderRadius: 10,\n    paddingVertical: 13,\n    paddingHorizontal: 20,\n    backgroundColor: \"#ffffff\",\n    position: \"absolute\",\n    bottom: 20,\n    right: 20\n  },\n  btnNextText: {\n    color: \"#333\",\n    fontSize: 17,\n    letterSpacing: 1.1\n  }\n});\nexport default QuizScreen;","map":{"version":3,"names":["React","useState","View","Text","Animated","StyleSheet","TouchableOpacity","data","ProgressBar","Background","AnswerCard","Quiz","QuizScreen","_ref","navigation","allQuestions","_useState","_useState2","_slicedToArray","currentQuestionIndex","setCurrentQuestionIndex","_useState3","Value","_useState4","progress","setProgress","handleNext","length","navigate","score","setCurrentOptionSelected","setCorrectOption","setIsOptionsDisabled","parallel","timing","toValue","duration","useNativeDriver","sequence","fadeAnim","start","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","btnNext","backgroundColor","onPress","btnNextText","create","answerCardContainer","marginBottom","borderRadius","paddingVertical","paddingHorizontal","position","bottom","right","color","fontSize","letterSpacing"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/screens/QuizScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  Animated,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport data from \"../helpers/data\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport Background from \"../components/Background\";\nimport AnswerCard from \"../components/AnswerCard\";\nimport Quiz from \"../components/quiz\";\n\nconst QuizScreen = ({ navigation }) => {\n  const allQuestions = data;\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [progress, setProgress] = useState(new Animated.Value(1));\n\n\n  const handleNext = (navigation) => {\n    if (currentQuestionIndex == allQuestions.length - 1) {\n      navigation.navigate(\"Result\", { score: score });\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentOptionSelected(null);\n      setCorrectOption(null);\n      setIsOptionsDisabled(false);\n    }\n    Animated.parallel([\n      Animated.timing(progress, {\n        toValue: currentQuestionIndex + 2,\n        duration: 2000,\n        useNativeDriver: false,\n      }),\n      Animated.sequence([\n        Animated.timing(fadeAnim, {\n          toValue: 0,\n          duration: 100,\n          useNativeDriver: false,\n        }),\n        Animated.timing(fadeAnim, {\n          toValue: 1,\n          duration: 1900,\n          useNativeDriver: false,\n        }),\n      ]),\n    ]).start();\n  };\n\n  return (\n    <Background>\n      <ProgressBar progress={progress} />\n    <Quiz/>\n      <TouchableOpacity\n        style={[\n          styles.btnNext,\n          {\n            backgroundColor: \"#ffffff\",\n          },\n        ]}\n        onPress={handleNext}\n      >\n        <Text style={styles.btnNextText}>NEXT</Text>\n      </TouchableOpacity>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  answerCardContainer: {\n    marginBottom: 20, // Adjust the margin here\n  },\n  btnNext: {\n    borderRadius: 10,\n    paddingVertical: 13,\n    paddingHorizontal: 20,\n    backgroundColor: \"#ffffff\",\n    position: \"absolute\",\n    bottom: 20,\n    right: 20,\n  },\n  btnNextText: {\n    color: \"#333\",\n    fontSize: 17,\n    letterSpacing: 1.1,\n  },\n});\n\nexport default QuizScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}