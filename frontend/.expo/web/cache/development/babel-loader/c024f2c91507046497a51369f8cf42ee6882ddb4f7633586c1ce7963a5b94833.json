{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Community Dreams frontend\\\\frontend\\\\node_modules\\\\react-native-progress\\\\withAnimation.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nexport default function withAnimation(WrappedComponent, indeterminateProgress) {\n  var _AnimatedComponent;\n  var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  return _AnimatedComponent = function (_Component) {\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _callSuper(this, AnimatedComponent, [props]);\n      _this.progressValue = Math.min(Math.max(props.progress, 0), 1);\n      _this.rotationValue = 0;\n      _this.state = {\n        progress: new Animated.Value(_this.progressValue),\n        rotation: new Animated.Value(_this.rotationValue)\n      };\n      return _this;\n    }\n    _inherits(AnimatedComponent, _Component);\n    return _createClass(AnimatedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n        this.state.progress.addListener(function (event) {\n          _this2.progressValue = event.value;\n        });\n        this.state.rotation.addListener(function (event) {\n          _this2.rotationValue = event.value;\n        });\n        if (this.props.indeterminate) {\n          this.spin();\n          if (indeterminateProgress) {\n            Animated.spring(this.state.progress, {\n              toValue: indeterminateProgress,\n              useNativeDriver: false\n            }).start();\n          }\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var _this3 = this;\n        if (prevProps.indeterminate !== this.props.indeterminate) {\n          if (this.props.indeterminate) {\n            this.spin();\n          } else {\n            Animated.spring(this.state.rotation, {\n              toValue: this.rotationValue > 0.5 ? 1 : 0,\n              useNativeDriver: false\n            }).start(function (endState) {\n              if (endState.finished) {\n                _this3.state.rotation.setValue(0);\n              }\n            });\n          }\n        }\n        var progress = this.props.indeterminate ? indeterminateProgress || 0 : Math.min(Math.max(this.props.progress, 0), 1);\n        if (progress !== this.progressValue) {\n          if (this.props.animated) {\n            Animated.spring(this.state.progress, {\n              toValue: progress,\n              bounciness: 0,\n              useNativeDriver: false\n            }).start();\n          } else {\n            this.state.progress.setValue(progress);\n          }\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.state.progress.removeAllListeners();\n        this.state.rotation.removeAllListeners();\n      }\n    }, {\n      key: \"spin\",\n      value: function spin() {\n        var _this4 = this;\n        this.state.rotation.setValue(0);\n        Animated.timing(this.state.rotation, {\n          toValue: this.props.direction === 'counter-clockwise' ? -1 : 1,\n          duration: this.props.indeterminateAnimationDuration,\n          easing: Easing.linear,\n          isInteraction: false,\n          useNativeDriver: false\n        }).start(function (endState) {\n          if (endState.finished) {\n            _this4.spin();\n          }\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(WrappedComponent, _extends({}, this.props, {\n          progress: this.props.animated ? this.state.progress : this.props.progress,\n          rotation: this.state.rotation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n  }(Component), _AnimatedComponent.displayName = \"withAnimation(\" + wrappedComponentName + \")\", _AnimatedComponent.propTypes = {\n    animated: PropTypes.bool,\n    direction: PropTypes.oneOf(['clockwise', 'counter-clockwise']),\n    indeterminate: PropTypes.bool,\n    indeterminateAnimationDuration: PropTypes.number,\n    progress: PropTypes.number\n  }, _AnimatedComponent.defaultProps = {\n    animated: true,\n    indeterminateAnimationDuration: 1000,\n    indeterminate: false,\n    progress: 0\n  }, _AnimatedComponent;\n}","map":{"version":3,"names":["React","Component","PropTypes","Animated","Easing","withAnimation","WrappedComponent","indeterminateProgress","_AnimatedComponent","wrappedComponentName","displayName","name","_Component","AnimatedComponent","props","_this","_classCallCheck","_callSuper","progressValue","Math","min","max","progress","rotationValue","state","Value","rotation","_inherits","_createClass","key","value","componentDidMount","_this2","addListener","event","indeterminate","spin","spring","toValue","useNativeDriver","start","componentDidUpdate","prevProps","_this3","endState","finished","setValue","animated","bounciness","componentWillUnmount","removeAllListeners","_this4","timing","direction","duration","indeterminateAnimationDuration","easing","linear","isInteraction","render","createElement","_extends","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","bool","oneOf","number","defaultProps"],"sources":["D:/Community Dreams frontend/frontend/node_modules/react-native-progress/withAnimation.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Easing } from 'react-native';\n\nexport default function withAnimation(WrappedComponent, indeterminateProgress) {\n  const wrappedComponentName =\n    WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\n  return class AnimatedComponent extends Component {\n    static displayName = `withAnimation(${wrappedComponentName})`;\n\n    static propTypes = {\n      animated: PropTypes.bool,\n      direction: PropTypes.oneOf(['clockwise', 'counter-clockwise']),\n      indeterminate: PropTypes.bool,\n      indeterminateAnimationDuration: PropTypes.number,\n      progress: PropTypes.number,\n    };\n\n    static defaultProps = {\n      animated: true,\n      indeterminateAnimationDuration: 1000,\n      indeterminate: false,\n      progress: 0,\n    };\n\n    constructor(props) {\n      super(props);\n\n      this.progressValue = Math.min(Math.max(props.progress, 0), 1);\n      this.rotationValue = 0;\n      this.state = {\n        progress: new Animated.Value(this.progressValue),\n        rotation: new Animated.Value(this.rotationValue),\n      };\n    }\n\n    componentDidMount() {\n      this.state.progress.addListener(event => {\n        this.progressValue = event.value;\n      });\n      this.state.rotation.addListener(event => {\n        this.rotationValue = event.value;\n      });\n      if (this.props.indeterminate) {\n        this.spin();\n        if (indeterminateProgress) {\n          Animated.spring(this.state.progress, {\n            toValue: indeterminateProgress,\n            useNativeDriver: false\n          }).start();\n        }\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.indeterminate !== this.props.indeterminate) {\n        if (this.props.indeterminate) {\n          this.spin();\n        } else {\n          Animated.spring(this.state.rotation, {\n            toValue: this.rotationValue > 0.5 ? 1 : 0,\n            useNativeDriver: false\n          }).start(endState => {\n            if (endState.finished) {\n              this.state.rotation.setValue(0);\n            }\n          });\n        }\n      }\n      const progress = this.props.indeterminate\n        ? indeterminateProgress || 0\n        : Math.min(Math.max(this.props.progress, 0), 1);\n      if (progress !== this.progressValue) {\n        if (this.props.animated) {\n          Animated.spring(this.state.progress, {\n            toValue: progress,\n            bounciness: 0,\n            useNativeDriver: false\n          }).start();\n        } else {\n          this.state.progress.setValue(progress);\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      this.state.progress.removeAllListeners();\n      this.state.rotation.removeAllListeners();\n    }\n\n    spin() {\n      this.state.rotation.setValue(0);\n      Animated.timing(this.state.rotation, {\n        toValue: this.props.direction === 'counter-clockwise' ? -1 : 1,\n        duration: this.props.indeterminateAnimationDuration,\n        easing: Easing.linear,\n        isInteraction: false,\n        useNativeDriver: false\n      }).start(endState => {\n        if (endState.finished) {\n          this.spin();\n        }\n      });\n    }\n\n    render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          progress={\n            this.props.animated ? this.state.progress : this.props.progress\n          }\n          rotation={this.state.rotation}\n        />\n      );\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}