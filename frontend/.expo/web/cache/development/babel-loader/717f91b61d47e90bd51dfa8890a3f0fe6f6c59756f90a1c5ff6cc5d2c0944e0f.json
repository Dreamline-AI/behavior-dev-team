{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"icon\", \"children\", \"actions\", \"contentStyle\", \"style\", \"theme\", \"onShowAnimationFinished\", \"onHideAnimationFinished\"],\n  _excluded2 = [\"label\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport Button from \"./Button\";\nimport Icon from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\nimport shadow from \"../styles/shadow\";\nvar ELEVATION = 1;\nvar DEFAULT_MAX_WIDTH = 960;\nvar Banner = function Banner(_ref) {\n  var visible = _ref.visible,\n    icon = _ref.icon,\n    children = _ref.children,\n    actions = _ref.actions,\n    contentStyle = _ref.contentStyle,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$onShowAnimationF = _ref.onShowAnimationFinished,\n    onShowAnimationFinished = _ref$onShowAnimationF === void 0 ? function () {} : _ref$onShowAnimationF,\n    _ref$onHideAnimationF = _ref.onHideAnimationFinished,\n    onHideAnimationFinished = _ref$onHideAnimationF === void 0 ? function () {} : _ref$onHideAnimationF,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    position = _React$useRef.current;\n  var _React$useState = React.useState({\n      height: 0,\n      measured: false\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false\n      }).start(onShowAnimationFinished);\n    } else {\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n  var handleLayout = function handleLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var height = nativeEvent.layout.height;\n    setLayout({\n      height: height,\n      measured: true\n    });\n  };\n  var height = Animated.multiply(position, layout.height);\n  var translateY = Animated.multiply(Animated.add(position, -1), layout.height);\n  return React.createElement(Surface, _extends({}, rest, {\n    style: [styles.container, shadow(ELEVATION), style],\n    theme: theme\n  }), React.createElement(View, {\n    style: [styles.wrapper, contentStyle]\n  }, React.createElement(Animated.View, {\n    style: {\n      height: height\n    }\n  }), React.createElement(Animated.View, {\n    onLayout: handleLayout,\n    style: [layout.measured || !visible ? [styles.absolute, {\n      transform: [{\n        translateY: translateY\n      }]\n    }] : null, !layout.measured && !visible ? {\n      opacity: 0\n    } : null]\n  }, React.createElement(View, {\n    style: styles.content\n  }, icon ? React.createElement(View, {\n    style: styles.icon\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 40\n  })) : null, React.createElement(Text, {\n    style: [styles.message, {\n      color: theme.colors.text\n    }],\n    accessibilityLiveRegion: visible ? 'polite' : 'none',\n    accessibilityRole: \"alert\"\n  }, children)), React.createElement(View, {\n    style: styles.actions\n  }, actions.map(function (_ref3, i) {\n    var label = _ref3.label,\n      others = _objectWithoutProperties(_ref3, _excluded2);\n    return React.createElement(Button, _extends({\n      key: i,\n      compact: true,\n      mode: \"text\",\n      style: styles.button,\n      color: theme.colors.primary\n    }, others), label);\n  })))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0\n  },\n  icon: {\n    margin: 8\n  },\n  message: {\n    flex: 1,\n    margin: 8\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4\n  },\n  button: {\n    margin: 4\n  }\n});\nexport default withTheme(Banner);","map":{"version":3,"names":["React","View","StyleSheet","Animated","Surface","Text","Button","Icon","withTheme","shadow","ELEVATION","DEFAULT_MAX_WIDTH","Banner","_ref","visible","icon","children","actions","contentStyle","style","theme","_ref$onShowAnimationF","onShowAnimationFinished","_ref$onHideAnimationF","onHideAnimationFinished","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","position","current","_React$useState","useState","height","measured","_React$useState2","_slicedToArray","layout","setLayout","scale","animation","useEffect","timing","duration","toValue","useNativeDriver","start","handleLayout","_ref2","nativeEvent","multiply","translateY","add","createElement","_extends","styles","container","wrapper","onLayout","absolute","transform","opacity","content","source","size","message","color","colors","text","accessibilityLiveRegion","accessibilityRole","map","_ref3","i","label","others","_excluded2","key","compact","mode","button","primary","create","elevation","overflow","alignSelf","width","maxWidth","top","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","flex"],"sources":["C:\\volunteer\\react-native-login-template\\node_modules\\react-native-paper\\lib\\module\\components\\Banner.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp, Animated } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport Button from './Button';\nimport Icon, { IconSource } from './Icon';\nimport { withTheme } from '../core/theming';\nimport type { $RemoveChildren } from '../types';\nimport shadow from '../styles/shadow';\n\nconst ELEVATION = 1;\nconst DEFAULT_MAX_WIDTH = 960;\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: string;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions: Array<\n    {\n      label: string;\n    } & Omit<React.ComponentProps<typeof Button>, 'children'>\n  >;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * @optional\n   * Optional callback that will be called after the opening animation finished running normally\n   */\n  onShowAnimationFinished?: Animated.EndCallback;\n  /**\n   * @optional\n   * Optional callback that will be called after the closing animation finished running normally\n   */\n  onHideAnimationFinished?: Animated.EndCallback;\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(true);\n *\n *   return (\n *     <Banner\n *       visible={visible}\n *       actions={[\n *         {\n *           label: 'Fix it',\n *           onPress: () => setVisible(false),\n *         },\n *         {\n *           label: 'Learn more',\n *           onPress: () => setVisible(false),\n *         },\n *       ]}\n *       icon={({size}) => (\n *         <Image\n *           source={{\n *             uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4',\n *           }}\n *           style={{\n *             width: size,\n *             height: size,\n *           }}\n *         />\n *       )}>\n *       There was a problem processing a transaction on your credit card.\n *     </Banner>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Banner = ({\n  visible,\n  icon,\n  children,\n  actions,\n  contentStyle,\n  style,\n  theme,\n  onShowAnimationFinished = () => {},\n  onHideAnimationFinished = () => {},\n  ...rest\n}: Props) => {\n  const { current: position } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    measured: boolean;\n  }>({\n    height: 0,\n    measured: false,\n  });\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false,\n      }).start(onShowAnimationFinished);\n    } else {\n      // hide\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false,\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n\n  const handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n    setLayout({ height, measured: true });\n  };\n\n  // The banner animation has 2 parts:\n  // 1. Blank spacer element which animates its height to move the content\n  // 2. Actual banner which animates its translateY\n  // In initial render, we position everything normally and measure the height of the banner\n  // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n  // We need this because we need to move the content below as if banner's height was being animated\n  // However we can't animated banner's height directly as it'll also resize the content inside\n  const height = Animated.multiply(position, layout.height);\n\n  const translateY = Animated.multiply(\n    Animated.add(position, -1),\n    layout.height\n  );\n  return (\n    <Surface\n      {...rest}\n      style={[styles.container, shadow(ELEVATION) as ViewStyle, style]}\n      theme={theme}\n    >\n      <View style={[styles.wrapper, contentStyle]}>\n        <Animated.View style={{ height }} />\n        <Animated.View\n          onLayout={handleLayout}\n          style={[\n            layout.measured || !visible\n              ? // If we have measured banner's height or it's invisible,\n                // Position it absolutely, the layout will be taken care of the spacer\n                [styles.absolute, { transform: [{ translateY }] }]\n              : // Otherwise position it normally\n                null,\n            !layout.measured && !visible\n              ? // If we haven't measured banner's height yet and it's invisible,\n                // hide it with opacity: 0 so user doesn't see it\n                { opacity: 0 }\n              : null,\n          ]}\n        >\n          <View style={styles.content}>\n            {icon ? (\n              <View style={styles.icon}>\n                <Icon source={icon} size={40} />\n              </View>\n            ) : null}\n            <Text\n              style={[styles.message, { color: theme.colors.text }]}\n              accessibilityLiveRegion={visible ? 'polite' : 'none'}\n              accessibilityRole=\"alert\"\n            >\n              {children}\n            </Text>\n          </View>\n          <View style={styles.actions}>\n            {actions.map(({ label, ...others }, i) => (\n              <Button\n                key={/* eslint-disable-line react/no-array-index-key */ i}\n                compact\n                mode=\"text\"\n                style={styles.button}\n                color={theme.colors.primary}\n                {...others}\n              >\n                {label}\n              </Button>\n            ))}\n          </View>\n        </Animated.View>\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION,\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n});\n\nexport default withTheme(Banner);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}