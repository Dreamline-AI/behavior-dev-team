{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\sunvi\\\\Documents\\\\GitHub\\\\behavior-dev-team\\\\frontend\\\\src\\\\context\\\\AuthProvider.js\";\nimport React, { useState, useContext } from 'react';\nvar AuthContext = React.createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    loggedInUser = _useState2[0],\n    setLoggedInUser = _useState2[1];\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      loggedInUser: loggedInUser,\n      setLoggedInUser: setLoggedInUser\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport var useAuth = function useAuth() {\n  return useContext(AuthContext);\n};\nexport default AuthContext;","map":{"version":3,"names":["React","useState","useContext","AuthContext","createContext","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","loggedInUser","setLoggedInUser","createElement","Provider","value","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","useAuth"],"sources":["C:/Users/sunvi/Documents/GitHub/behavior-dev-team/frontend/src/context/AuthProvider.js"],"sourcesContent":["/**\r\n * Create a context to manage authentication state. \r\n * This allows different parts of the app to access and modify the authentication state.\r\n */\r\nimport React, { useState, useContext } from 'react';\r\n\r\n// Create the AuthContext\r\nconst AuthContext = React.createContext();\r\n\r\n// Create the AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n  // State to manage the logged-in user\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n\r\n  return (\r\n    // Provide the loggedInUser and setLoggedInUser to the rest of the app\r\n    <AuthContext.Provider value={{ loggedInUser, setLoggedInUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Create a custom hook to use the AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAGnD,IAAMC,WAAW,GAAGH,KAAK,CAACI,aAAa,CAAC,CAAC;AAGzC,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAErC,IAAAC,SAAA,GAAwCP,QAAQ,CAAC,IAAI,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpC,OAEET,KAAA,CAAAa,aAAA,CAACV,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEJ,YAAY,EAAZA,YAAY;MAAEC,eAAe,EAAfA;IAAgB,CAAE;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5Df,QACmB,CAAC;AAE3B,CAAC;AAGD,OAAO,IAAMgB,OAAO,GAAG,SAAVA,OAAOA,CAAA;EAAA,OAASrB,UAAU,CAACC,WAAW,CAAC;AAAA;AAEpD,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}