{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/AnswerCard.js\";\nvar AnswerCard = function AnswerCard(_ref) {\n  var question = _ref.question,\n    options = _ref.options,\n    correct_option = _ref.correct_option;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showOptions = _useState2[0],\n    setShowOptions = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedOption = _useState4[0],\n    setSelectedOption = _useState4[1];\n  var checkAnswer = function checkAnswer() {\n    if (selectedOption === correct_option) {\n      return React.createElement(Text, {\n        style: styles.correctAnswer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 14\n        }\n      }, \"Correct!\");\n    } else {\n      return React.createElement(Text, {\n        style: styles.wrongAnswer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }\n      }, \"Wrong! Correct answer is \", correct_option);\n    }\n  };\n  var cardMove = function cardMove() {};\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.question,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, question), React.createElement(Animated.View, {\n    style: [styles.card, showOptions && styles.cardExpanded],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      cardMove();\n      setShowOptions(!showOptions);\n    },\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, showOptions && React.createElement(View, {\n    style: styles.options,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, options.map(function (option, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      style: styles.option,\n      onPress: function onPress() {\n        return setSelectedOption(option);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, option));\n  }), selectedOption && checkAnswer())))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 20,\n    marginBottom: 20\n  },\n  cardExpanded: {\n    marginBottom: 0\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10\n  },\n  options: {\n    marginTop: 10\n  },\n  option: {\n    paddingVertical: 30,\n    paddingHorizontal: 20,\n    backgroundColor: '#f4f4f4',\n    borderRadius: 5,\n    marginBottom: 10,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: '#808080'\n  },\n  correctAnswer: {\n    color: 'green',\n    marginTop: 10\n  },\n  wrongAnswer: {\n    color: 'red',\n    marginTop: 10\n  }\n});\nexport default AnswerCard;","map":{"version":3,"names":["AnswerCard","_ref","question","options","correct_option","_useState","useState","_useState2","_slicedToArray","showOptions","setShowOptions","_useState3","_useState4","selectedOption","setSelectedOption","checkAnswer","React","createElement","Text","style","styles","correctAnswer","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","wrongAnswer","cardMove","Fragment","View","container","Animated","card","cardExpanded","TouchableOpacity","onPress","map","option","index","key","StyleSheet","create","alignItems","backgroundColor","borderRadius","padding","marginBottom","fontSize","fontWeight","marginTop","paddingVertical","paddingHorizontal","borderStyle","borderWidth","borderColor","color"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/AnswerCard.js"],"sourcesContent":["const AnswerCard = ({ question, options, correct_option }) => {\n  const [showOptions, setShowOptions] = useState(true);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const checkAnswer = () => {\n    if (selectedOption === correct_option) {\n      return <Text style={styles.correctAnswer}>Correct!</Text>;\n    } else {\n      return <Text style={styles.wrongAnswer}>Wrong! Correct answer is {correct_option}</Text>;\n    }\n  };\n\n  const cardMove = () => {\n    // Your animation logic here\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <Text style={styles.question}>{question}</Text>\n        <Animated.View style={[styles.card, showOptions && styles.cardExpanded]}>\n          <TouchableOpacity onPress={() => { cardMove(); setShowOptions(!showOptions); }} style={styles.card}>\n            {showOptions && (\n              <View style={styles.options}>\n                {options.map((option, index) => (\n                  <TouchableOpacity\n                    key={index}\n                    style={styles.option}\n                    onPress={() => setSelectedOption(option)}\n                  >\n                    <Text>{option}</Text>\n                  </TouchableOpacity>\n                ))}\n                {selectedOption && checkAnswer()}\n              </View>\n            )}\n          </TouchableOpacity>\n        </Animated.View>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 20,\n    marginBottom: 20,\n  },\n  cardExpanded: {\n    marginBottom: 0,\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10,\n  },\n  options: {\n    marginTop: 10,\n  },\n  option: {\n    paddingVertical: 30,\n    paddingHorizontal: 20,\n    backgroundColor: '#f4f4f4',\n    borderRadius: 5,\n    marginBottom: 10,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: '#808080',\n  },\n  correctAnswer: {\n    color: 'green',\n    marginTop: 10,\n  },\n  wrongAnswer: {\n    color: 'red',\n    marginTop: 10,\n  },\n});\n\nexport default AnswerCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}