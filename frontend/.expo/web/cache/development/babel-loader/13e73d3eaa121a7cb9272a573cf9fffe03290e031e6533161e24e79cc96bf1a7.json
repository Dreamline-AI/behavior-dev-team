{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessibilityLabel\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackIcon from \"./AppbarBackIcon\";\nvar AppbarBackAction = function AppbarBackAction(_ref) {\n  var _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Back' : _ref$accessibilityLab,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(AppbarAction, _extends({\n    accessibilityLabel: accessibilityLabel\n  }, rest, {\n    icon: AppbarBackIcon\n  }));\n};\nAppbarBackAction.displayName = 'Appbar.BackAction';\nexport default AppbarBackAction;\nexport { AppbarBackAction };","map":{"version":3,"sources":["C:\\Users\\ellen\\OneDrive\\Documents\\backup-folder-1\\CDreams\\behavior-dev-team\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\Appbar\\AppbarBackAction.tsx"],"names":["React","AppbarAction","AppbarBackIcon","AppbarBackAction","accessibilityLabel","rest","displayName"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,YAAP;AACA,OAAOC,cAAP;AA8DA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAG,IAAA,EAAA;EAAA,IAAA,qBAAA,GAAA,IAAA,CAAGC,kBAAkB;IAAlBA,kBAAkB,GAAA,qBAAA,cAAG,MAAvB,GAAA,qBAAA;IAAkCC,IAAAA,GAAAA,wBAAAA,CAAnC,IAAA,EAAA,SAAA;EAAA,OACvB,KAAA,CAAA,aAAA,CAAC,YAAD,EAAA,QAAA,CAAA;IACE,kBAAkB,EAAED;EADtB,CAAA,EAEMC,IAFN,EAAA;IAGE,IAAI,EAAEH;EAHR,CAAA,CAAA,CADuB;AAAA,CAAzB;AAQAC,gBAAgB,CAACG,WAAjBH,GAA+B,mBAA/BA;AAEA,eAAeA,gBAAf;AAGA,SAASA,gBAAT","sourcesContent":["import * as React from 'react';\nimport type { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackIcon from './AppbarBackIcon';\nimport type { StyleProp, ViewStyle } from 'react-native';\n\nexport type Props = $Omit<\n  React.ComponentPropsWithoutRef<typeof AppbarAction>,\n  'icon'\n> & {\n  /**\n   *  Custom color for back icon.\n   */\n  color?: string;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to display a back button in the appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n * </div>\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarBackAction = ({ accessibilityLabel = 'Back', ...rest }: Props) => (\n  <AppbarAction\n    accessibilityLabel={accessibilityLabel}\n    {...rest}\n    icon={AppbarBackIcon}\n  />\n);\n\nAppbarBackAction.displayName = 'Appbar.BackAction';\n\nexport default AppbarBackAction;\n\n// @component-docs ignore-next-line\nexport { AppbarBackAction };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}