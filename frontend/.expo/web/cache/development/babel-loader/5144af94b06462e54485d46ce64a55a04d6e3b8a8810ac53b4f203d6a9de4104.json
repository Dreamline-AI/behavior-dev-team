{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"title\", \"theme\", \"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport Divider from \"../Divider\";\nimport { withTheme } from \"../../core/theming\";\nvar DrawerSection = function DrawerSection(_ref) {\n  var children = _ref.children,\n    title = _ref.title,\n    theme = _ref.theme,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var colors = theme.colors,\n    fonts = theme.fonts;\n  var titleColor = color(colors.text).alpha(0.54).rgb().string();\n  var font = fonts.medium;\n  return React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest), title && React.createElement(View, {\n    style: styles.titleContainer\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: [_objectSpread({\n      color: titleColor\n    }, font), styles.title]\n  }, title)), children, React.createElement(Divider, {\n    style: styles.divider\n  }));\n};\nDrawerSection.displayName = 'Drawer.Section';\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  title: {\n    marginLeft: 16\n  },\n  divider: {\n    marginTop: 4\n  }\n});\nexport default withTheme(DrawerSection);","map":{"version":3,"sources":["D:\\Community Dreams frontend\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\Drawer\\DrawerSection.tsx"],"names":["color","React","Text","Divider","withTheme","DrawerSection","children","title","theme","style","rest","colors","fonts","titleColor","text","alpha","rgb","string","font","medium","styles","container","titleContainer","divider","displayName","create","marginBottom","height","justifyContent","marginLeft","marginTop"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAAA,OAAA,IAAA;AAAA,OAAA,UAAA;AAEA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,SAASC,SAAT;AAuDA,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAG,IAAA,EAAuD;EAAtD,IAAEC,QAAF,GAAsD,IAAA,CAApDA,QAAF;IAAYC,KAAZ,GAAsD,IAAA,CAA1CA,KAAZ;IAAmBC,KAAnB,GAAsD,IAAA,CAAnCA,KAAnB;IAA0BC,KAA1B,GAAsD,IAAA,CAA5BA,KAA1B;IAAoCC,IAAAA,GAAAA,wBAAAA,CAAkB,IAAA,EAAA,SAAA;EAC3E,IAAQC,MAAF,GAAoBH,KAA1B,CAAQG,MAAF;IAAUC,KAAAA,GAAUJ,KAA1B,CAAgBI,KAAAA;EAChB,IAAMC,UAAU,GAAGb,KAAK,CAACW,MAAM,CAACG,IAAR,CAALd,CAAmBe,KAAnBf,CAAyB,IAAzBA,CAAAA,CAA+BgB,GAA/BhB,CAAAA,CAAAA,CAAqCiB,MAArCjB,CAAAA,CAAnB;EACA,IAAMkB,IAAI,GAAGN,KAAK,CAACO,MAAnB;EAEA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA;IAAM,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBZ,KAAnB;EAAb,CAAA,EAA4CC,IAA5C,CAAA,EACGH,KAAK,IACJ,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAEa,MAAM,CAACE;EAApB,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IACE,aAAa,EAAE,CADjB;IAEE,KAAK,EAAE,CAAA,aAAA;MAAGtB,KAAK,EAAEa;IAAT,GAAwBK,IAAAA,GAAQE,MAAM,CAACb,KAAxC;EAFT,CAAA,EAIGA,KAJH,CADF,CAFJ,EAWGD,QAXH,EAYE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;IAAS,KAAK,EAAEc,MAAM,CAACG;EAAvB,CAAA,CAZF,CADF;AAgBD,CArBD;AAuBAlB,aAAa,CAACmB,WAAdnB,GAA4B,gBAA5BA;AAEA,IAAMe,MAAM,GAAG,UAAU,CAACK,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,YAAY,EAAE;EADL,CADoB;EAI/BJ,cAAc,EAAE;IACdK,MAAM,EAAE,EADM;IAEdC,cAAc,EAAE;EAFF,CAJe;EAQ/BrB,KAAK,EAAE;IACLsB,UAAU,EAAE;EADP,CARwB;EAW/BN,OAAO,EAAE;IACPO,SAAS,EAAE;EADJ;AAXsB,CAAlB,CAAf;AAgBA,eAAe1B,SAAS,CAACC,aAAD,CAAxB","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({ children, title, theme, style, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const titleColor = color(colors.text).alpha(0.54).rgb().string();\n  const font = fonts.medium;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={styles.titleContainer}>\n          <Text\n            numberOfLines={1}\n            style={[{ color: titleColor, ...font }, styles.title]}\n          >\n            {title}\n          </Text>\n        </View>\n      )}\n      {children}\n      <Divider style={styles.divider} />\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  title: {\n    marginLeft: 16,\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}