{"ast":null,"code":"export function addEventListener(Module) {\n  var _Module$addEventListe;\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n  var eventName = rest[0],\n    handler = rest[1];\n  var removed = false;\n  var subscription = (_Module$addEventListe = Module.addEventListener(eventName, handler)) !== null && _Module$addEventListe !== void 0 ? _Module$addEventListe : {\n    remove: function remove() {\n      if (removed) {\n        return;\n      }\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    }\n  };\n  return subscription;\n}\nexport function addListener(Module) {\n  var _Module$addListener;\n  for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    rest[_key2 - 1] = arguments[_key2];\n  }\n  var eventName = rest[0],\n    handler = rest[1];\n  var removed = false;\n  var subscription = (_Module$addListener = Module.addListener(eventName, handler)) !== null && _Module$addListener !== void 0 ? _Module$addListener : {\n    remove: function remove() {\n      if (removed) {\n        return;\n      }\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    }\n  };\n  return subscription;\n}","map":{"version":3,"names":["addEventListener","Module","_Module$addEventListe","_len","arguments","length","rest","Array","_key","eventName","handler","removed","subscription","remove","removeEventListener","addListener","_Module$addListener","_len2","_key2"],"sources":["C:\\volunteer\\behavior-dev-team\\frontend\\node_modules\\react-native-paper\\lib\\module\\utils\\addEventListener.tsx"],"sourcesContent":["import type {\n  NativeEventSubscription,\n  EmitterSubscription,\n} from 'react-native';\n\nexport function addEventListener<\n  T extends {\n    addEventListener: (\n      ...args: any\n    ) => NativeEventSubscription | EmitterSubscription;\n    removeEventListener: (...args: any) => void;\n  }\n>(Module: T, ...rest: Parameters<typeof Module.addEventListener>) {\n  const [eventName, handler] = rest;\n\n  let removed = false;\n\n  const subscription = Module.addEventListener(eventName, handler) ?? {\n    remove: () => {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    },\n  };\n\n  return subscription;\n}\n\nexport function addListener<\n  T extends {\n    addListener: (...args: any) => EmitterSubscription;\n    removeEventListener: (...args: any) => void;\n  }\n>(Module: T, ...rest: Parameters<typeof Module.addListener>) {\n  const [eventName, handler] = rest;\n\n  let removed = false;\n\n  const subscription = Module.addListener(eventName, handler) ?? {\n    remove: () => {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    },\n  };\n\n  return subscription;\n}\n"],"mappings":"AAKA,OAAO,SAASA,gBAATA,CAOLC,MAPK,EAO2D;EAAA,IAAAC,qBAAA;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAlDC,IAAkD,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAlDF,IAAkD,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAChE,IAAOC,SAAD,GAAuBH,IAA7B;IAAkBI,OAAZ,GAAuBJ,IAA7B;EAEA,IAAIK,OAAO,GAAG,KAAd;EAEA,IAAMC,YAAY,IAAAV,qBAAA,GAAGD,MAAM,CAACD,gBAAP,CAAwBS,SAAxB,EAAmCC,OAAnC,CAAH,cAAAR,qBAAA,cAAAA,qBAAA,GAAkD;IAClEW,MAAM,EAAE,SAAAA,OAAA,EAAM;MACZ,IAAIF,OAAJ,EAAa;QACX;MACD;MAEDV,MAAM,CAACa,mBAAP,CAA2BL,SAA3B,EAAsCC,OAAtC;MACAC,OAAO,GAAG,IAAV;IACD;EARiE,CAApE;EAWA,OAAOC,YAAP;AACD;AAED,OAAO,SAASG,WAATA,CAKLd,MALK,EAKsD;EAAA,IAAAe,mBAAA;EAAA,SAAAC,KAAA,GAAAb,SAAA,CAAAC,MAAA,EAA7CC,IAA6C,OAAAC,KAAA,CAAAU,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAA7CZ,IAA6C,CAAAY,KAAA,QAAAd,SAAA,CAAAc,KAAA;EAAA;EAC3D,IAAOT,SAAD,GAAuBH,IAA7B;IAAkBI,OAAZ,GAAuBJ,IAA7B;EAEA,IAAIK,OAAO,GAAG,KAAd;EAEA,IAAMC,YAAY,IAAAI,mBAAA,GAAGf,MAAM,CAACc,WAAP,CAAmBN,SAAnB,EAA8BC,OAA9B,CAAH,cAAAM,mBAAA,cAAAA,mBAAA,GAA6C;IAC7DH,MAAM,EAAE,SAAAA,OAAA,EAAM;MACZ,IAAIF,OAAJ,EAAa;QACX;MACD;MAEDV,MAAM,CAACa,mBAAP,CAA2BL,SAA3B,EAAsCC,OAAtC;MACAC,OAAO,GAAG,IAAV;IACD;EAR4D,CAA/D;EAWA,OAAOC,YAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}