{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"elevation\", \"onLongPress\", \"onPress\", \"mode\", \"children\", \"style\", \"theme\", \"testID\", \"accessible\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport { white, black } from \"../../styles/colors\";\nimport CardContent from \"./CardContent\";\nimport CardActions from \"./CardActions\";\nimport CardCover from \"./CardCover\";\nimport CardTitle from \"./CardTitle\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\nvar Card = function Card(_ref) {\n  var _ref$elevation = _ref.elevation,\n    cardElevation = _ref$elevation === void 0 ? 1 : _ref$elevation,\n    onLongPress = _ref.onLongPress,\n    onPress = _ref.onPress,\n    _ref$mode = _ref.mode,\n    cardMode = _ref$mode === void 0 ? 'elevated' : _ref$mode,\n    children = _ref.children,\n    style = _ref.style,\n    theme = _ref.theme,\n    testID = _ref.testID,\n    accessible = _ref.accessible,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(cardElevation)),\n    elevation = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new Animated.Value(cardElevation)),\n    elevationDarkAdaptive = _React$useRef2.current;\n  var animation = theme.animation,\n    dark = theme.dark,\n    mode = theme.mode,\n    roundness = theme.roundness;\n  var prevDarkRef = React.useRef(dark);\n  React.useEffect(function () {\n    prevDarkRef.current = dark;\n  });\n  var prevDark = prevDarkRef.current;\n  var isAdaptiveMode = mode === 'adaptive';\n  var animationDuration = 150 * animation.scale;\n  React.useEffect(function () {\n    if (dark && isAdaptiveMode && !prevDark) {\n      elevation.setValue(cardElevation);\n      elevationDarkAdaptive.setValue(cardElevation);\n    }\n  }, [prevDark, dark, isAdaptiveMode, cardElevation, elevation, elevationDarkAdaptive]);\n  var runElevationAnimation = function runElevationAnimation(pressType) {\n    var isPressTypeIn = pressType === 'in';\n    if (dark && isAdaptiveMode) {\n      Animated.timing(elevationDarkAdaptive, {\n        toValue: isPressTypeIn ? 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.timing(elevation, {\n        toValue: isPressTypeIn ? 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: Platform.OS === 'web' || Platform.constants.reactNativeVersion.minor <= 72\n      }).start();\n    }\n  };\n  var handlePressIn = function handlePressIn() {\n    runElevationAnimation('in');\n  };\n  var handlePressOut = function handlePressOut() {\n    runElevationAnimation('out');\n  };\n  var total = React.Children.count(children);\n  var siblings = React.Children.map(children, function (child) {\n    return React.isValidElement(child) && child.type ? child.type.displayName : null;\n  });\n  var borderColor = color(dark ? white : black).alpha(0.12).rgb().string();\n  var computedElevation = dark && isAdaptiveMode ? elevationDarkAdaptive : elevation;\n  return React.createElement(Surface, _extends({\n    style: [{\n      borderRadius: roundness,\n      elevation: computedElevation,\n      borderColor: borderColor\n    }, cardMode === 'outlined' ? styles.outlined : {}, style],\n    theme: theme\n  }, rest), React.createElement(TouchableWithoutFeedback, {\n    delayPressIn: 0,\n    disabled: !(onPress || onLongPress),\n    onLongPress: onLongPress,\n    onPress: onPress,\n    onPressIn: onPress || onLongPress ? handlePressIn : undefined,\n    onPressOut: onPress || onLongPress ? handlePressOut : undefined,\n    testID: testID,\n    accessible: accessible\n  }, React.createElement(View, {\n    style: styles.innerContainer\n  }, React.Children.map(children, function (child, index) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      index: index,\n      total: total,\n      siblings: siblings\n    }) : child;\n  }))));\n};\nCard.Content = CardContent;\nCard.Actions = CardActions;\nCard.Cover = CardCover;\nCard.Title = CardTitle;\nvar styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  outlined: {\n    elevation: 0,\n    borderWidth: 1\n  }\n});\nexport default withTheme(Card);","map":{"version":3,"names":["React","StyleSheet","Animated","TouchableWithoutFeedback","View","Platform","color","white","black","CardContent","CardActions","CardCover","CardTitle","Surface","withTheme","Card","_ref","_ref$elevation","elevation","cardElevation","onLongPress","onPress","_ref$mode","mode","cardMode","children","style","theme","testID","accessible","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","current","_React$useRef2","elevationDarkAdaptive","animation","dark","roundness","prevDarkRef","useEffect","prevDark","isAdaptiveMode","animationDuration","scale","setValue","runElevationAnimation","pressType","isPressTypeIn","timing","toValue","duration","useNativeDriver","start","OS","constants","reactNativeVersion","minor","handlePressIn","handlePressOut","total","Children","count","siblings","map","child","isValidElement","type","displayName","borderColor","alpha","rgb","string","computedElevation","createElement","_extends","borderRadius","styles","outlined","delayPressIn","disabled","onPressIn","undefined","onPressOut","innerContainer","index","cloneElement","Content","Actions","Cover","Title","create","flexGrow","flexShrink","borderWidth"],"sources":["C:\\volunteer\\behavior-dev-team\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\Card\\Card.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  Platform,\n} from 'react-native';\nimport color from 'color';\nimport { white, black } from '../../styles/colors';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover, { CardCover as _CardCover } from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle, { CardTitle as _CardTitle } from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\n\ntype OutlinedCardProps = {\n  mode: 'outlined';\n  elevation?: never;\n};\n\ntype ElevatedCardProps = {\n  mode?: 'elevated';\n  elevation?: number;\n};\n\ntype HandlePressType = 'in' | 'out';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Resting elevation of the card which controls the drop shadow.\n   */\n  elevation?: never | number;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Mode of the Card.\n   * - `elevated` - Card with elevation.\n   * - `outlined` - Card with an outline.\n   */\n  mode?: 'elevated' | 'outlined';\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Card = ({\n  elevation: cardElevation = 1,\n  onLongPress,\n  onPress,\n  mode: cardMode = 'elevated',\n  children,\n  style,\n  theme,\n  testID,\n  accessible,\n  ...rest\n}: (OutlinedCardProps | ElevatedCardProps) & Props) => {\n  // Default animated value\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n  // Dark adaptive animated value, used in case of toggling the theme,\n  // it prevents animating the background with native drivers inside Surface\n  const { current: elevationDarkAdaptive } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n  const { animation, dark, mode, roundness } = theme;\n\n  const prevDarkRef = React.useRef<boolean>(dark);\n  React.useEffect(() => {\n    prevDarkRef.current = dark;\n  });\n\n  const prevDark = prevDarkRef.current;\n  const isAdaptiveMode = mode === 'adaptive';\n  const animationDuration = 150 * animation.scale;\n\n  React.useEffect(() => {\n    /**\n     * Resets animations values if updating to dark adaptive mode,\n     * otherwise, any card that is in the middle of animation while\n     * toggling the theme will stay at that animated value until\n     * the next press-in\n     */\n    if (dark && isAdaptiveMode && !prevDark) {\n      elevation.setValue(cardElevation);\n      elevationDarkAdaptive.setValue(cardElevation);\n    }\n  }, [\n    prevDark,\n    dark,\n    isAdaptiveMode,\n    cardElevation,\n    elevation,\n    elevationDarkAdaptive,\n  ]);\n\n  const runElevationAnimation = (pressType: HandlePressType) => {\n    const isPressTypeIn = pressType === 'in';\n    if (dark && isAdaptiveMode) {\n      Animated.timing(elevationDarkAdaptive, {\n        toValue: isPressTypeIn ? 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(elevation, {\n        toValue: isPressTypeIn ? 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver:\n          Platform.OS === 'web' ||\n          Platform.constants.reactNativeVersion.minor <= 72,\n      }).start();\n    }\n  };\n\n  const handlePressIn = () => {\n    runElevationAnimation('in');\n  };\n\n  const handlePressOut = () => {\n    runElevationAnimation('out');\n  };\n\n  const total = React.Children.count(children);\n  const siblings = React.Children.map(children, (child) =>\n    React.isValidElement(child) && child.type\n      ? (child.type as any).displayName\n      : null\n  );\n  const borderColor = color(dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n  const computedElevation =\n    dark && isAdaptiveMode ? elevationDarkAdaptive : elevation;\n\n  return (\n    <Surface\n      style={[\n        { borderRadius: roundness, elevation: computedElevation, borderColor },\n        cardMode === 'outlined' ? styles.outlined : {},\n        style,\n      ]}\n      theme={theme}\n      {...rest}\n    >\n      <TouchableWithoutFeedback\n        delayPressIn={0}\n        disabled={!(onPress || onLongPress)}\n        onLongPress={onLongPress}\n        onPress={onPress}\n        onPressIn={onPress || onLongPress ? handlePressIn : undefined}\n        onPressOut={onPress || onLongPress ? handlePressOut : undefined}\n        testID={testID}\n        accessible={accessible}\n      >\n        <View style={styles.innerContainer}>\n          {React.Children.map(children, (child, index) =>\n            React.isValidElement(child)\n              ? React.cloneElement(child, {\n                  index,\n                  total,\n                  siblings,\n                })\n              : child\n          )}\n        </View>\n      </TouchableWithoutFeedback>\n    </Surface>\n  );\n};\n\n// @component ./CardContent.tsx\nCard.Content = CardContent;\n// @component ./CardActions.tsx\nCard.Actions = CardActions;\n// @component ./CardCover.tsx\nCard.Cover = CardCover;\n// @component ./CardTitle.tsx\nCard.Title = CardTitle;\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  outlined: {\n    elevation: 0,\n    borderWidth: 1,\n  },\n});\n\nexport default withTheme(Card);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}