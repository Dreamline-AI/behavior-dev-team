{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/Quiz.js\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport data from \"../helpers/data\";\nimport Button from \"../components/Button\";\nimport * as Progress from 'react-native-progress';\nvar Quiz = function Quiz(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestionIndex = _useState2[0],\n    setCurrentQuestionIndex = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isCorrect = _useState4[0],\n    setIsCorrect = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedOption = _useState6[0],\n    setSelectedOption = _useState6[1];\n  var translateY = useRef(new Animated.Value(0)).current;\n  var opacity = useRef(new Animated.Value(1)).current;\n  var progress = (currentQuestionIndex + 1) / data.length;\n  var handleNext = function handleNext() {\n    if (currentQuestionIndex === data.length - 1) {\n      navigation.navigate(\"QuizEndingScreen\");\n    } else {\n      animateQuestionText();\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(null);\n      setIsCorrect(null);\n    }\n  };\n  var handlePressedOption = function handlePressedOption(pressedOption) {\n    setSelectedOption(pressedOption);\n    var isAnswerCorrect = data[currentQuestionIndex].correct_option === pressedOption;\n    setIsCorrect(isAnswerCorrect);\n    animateSelectedOption();\n  };\n  var animateSelectedOption = function animateSelectedOption() {\n    translateY.setValue(0);\n    opacity.setValue(1);\n    Animated.parallel([Animated.timing(translateY, {\n      toValue: -100,\n      duration: 600,\n      useNativeDriver: true\n    }), Animated.timing(opacity, {\n      toValue: 0,\n      duration: 600,\n      useNativeDriver: true\n    })]).start();\n  };\n  var animateQuestionText = function animateQuestionText() {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 600,\n      useNativeDriver: true\n    }).start();\n  };\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.progressBarContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Progress.Bar, {\n    progress: progress,\n    width: 350,\n    color: \"black\",\n    unfilledColor: \"rgba(217, 217, 217, 1)\",\n    borderWidth: 0,\n    height: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), React.createElement(Animated.Text, {\n    style: [styles.question, {\n      opacity: opacity\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, data[currentQuestionIndex].question), data[currentQuestionIndex].options.map(function (option, index) {\n    return React.createElement(Animated.View, {\n      key: index,\n      style: [styles.optionContainer, {\n        opacity: selectedOption === null || selectedOption === option ? 1 : 0,\n        transform: [{\n          translateY: selectedOption === option ? translateY : 0\n        }]\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return handlePressedOption(option);\n      },\n      style: styles.option,\n      disabled: selectedOption !== null,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.optionText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, option)));\n  }), React.createElement(Button, {\n    color: \"black\",\n    mode: \"contained\",\n    onPress: handleNext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Continue\"));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  optionContainer: {\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  option: {\n    backgroundColor: '#f4f4f4',\n    borderRadius: 6,\n    height: 150,\n    width: 200,\n    justifyContent: 'center',\n    borderColor: 'rgba(0, 0, 0, 0.1)',\n    borderWidth: 1\n  },\n  optionText: {\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  progressBarContainer: {\n    width: '100%',\n    height: 20,\n    marginBottom: 30\n  }\n});\nexport default Quiz;","map":{"version":3,"names":["React","useState","useRef","View","Text","TouchableOpacity","StyleSheet","Animated","data","Button","Progress","Quiz","_ref","navigation","_useState","_useState2","_slicedToArray","currentQuestionIndex","setCurrentQuestionIndex","_useState3","_useState4","isCorrect","setIsCorrect","_useState5","_useState6","selectedOption","setSelectedOption","translateY","Value","current","opacity","progress","length","handleNext","navigate","animateQuestionText","handlePressedOption","pressedOption","isAnswerCorrect","correct_option","animateSelectedOption","setValue","parallel","timing","toValue","duration","useNativeDriver","start","createElement","style","styles","container","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","progressBarContainer","Bar","width","color","unfilledColor","borderWidth","height","question","options","map","option","index","key","optionContainer","transform","onPress","disabled","optionText","mode","create","flex","justifyContent","alignItems","marginBottom","fontSize","fontWeight","textAlign","backgroundColor","borderRadius","borderColor"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Animated } from 'react-native';\nimport data from \"../helpers/data\"; // Import your data\nimport Button from '../components/Button'; // Assuming you have a Button component\nimport * as Progress from 'react-native-progress'; // Assuming you're using Progress for the progress bar\n\nconst Quiz = ({ navigation }) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const translateY = useRef(new Animated.Value(0)).current;\n  const opacity = useRef(new Animated.Value(1)).current;\n\n  const progress = (currentQuestionIndex + 1) / data.length;\n\n  const handleNext = () => {\n    if (currentQuestionIndex === data.length - 1) {\n      navigation.navigate(\"QuizEndingScreen\");\n    } else {\n      animateQuestionText();\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(null);\n      setIsCorrect(null);\n    }\n  };\n\n  const handlePressedOption = (pressedOption) => {\n    setSelectedOption(pressedOption);\n    const isAnswerCorrect = data[currentQuestionIndex].correct_option === pressedOption;\n    setIsCorrect(isAnswerCorrect);\n    animateSelectedOption();\n  };\n\n  const animateSelectedOption = () => {\n    // Reset animation values\n    translateY.setValue(0);\n    opacity.setValue(1);\n\n    Animated.parallel([\n      Animated.timing(translateY, {\n        toValue: -100,\n        duration: 600,\n        useNativeDriver: true,\n      }),\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 600,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  };\n\n  const animateQuestionText = () => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 600,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.progressBarContainer}>\n        <Progress.Bar progress={progress} width={350} color='black' unfilledColor='rgba(217, 217, 217, 1)' borderWidth={0} height={8} />\n      </View>\n      <Animated.Text style={[styles.question, { opacity: opacity }]}>\n        {data[currentQuestionIndex].question}\n      </Animated.Text>\n      {data[currentQuestionIndex].options.map((option, index) => (\n        <Animated.View\n          key={index}\n          style={[\n            styles.optionContainer,\n            {\n              opacity: selectedOption === null || selectedOption === option ? 1 : 0,\n              transform: [{ translateY: selectedOption === option ? translateY : 0 }],\n            },\n          ]}\n        >\n          <TouchableOpacity\n            onPress={() => handlePressedOption(option)}\n            style={styles.option}\n            disabled={selectedOption !== null}\n          >\n            <Text style={styles.optionText}>{option}</Text>\n          </TouchableOpacity>\n        </Animated.View>\n      ))}\n      <Button\n        color=\"black\"\n        mode=\"contained\"\n        onPress={handleNext}\n      >\n        Continue\n      </Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  optionContainer: {\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  option: {\n    backgroundColor: '#f4f4f4',\n    borderRadius: 6,\n    height: 150,\n    width: 200,\n    justifyContent: 'center',\n    borderColor: 'rgba(0, 0, 0, 0.1)',\n    borderWidth: 1,\n  },\n  optionText: {\n    fontSize: 18,\n    textAlign: 'center',\n  },\n  progressBarContainer: {\n    width: '100%',\n    height: 20,\n    marginBottom: 30,\n  },\n});\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}