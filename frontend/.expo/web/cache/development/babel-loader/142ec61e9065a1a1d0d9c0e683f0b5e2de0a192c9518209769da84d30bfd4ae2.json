{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/Quiz.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport data from \"../helpers/data\";\nimport Button from \"../components/Button\";\nimport ProgressBar from \"./ProgressBar\";\nimport * as Progress from 'react-native-progress';\nvar Quiz = function Quiz(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestionIndex = _useState2[0],\n    setCurrentQuestionIndex = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isCorrect = _useState4[0],\n    setIsCorrect = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedOption = _useState6[0],\n    setSelectedOption = _useState6[1];\n  var handleNext = function handleNext() {\n    if (currentQuestionIndex === data.length - 1) {\n      console.log(\"irhohreoihofg\");\n      navigation.navigate(\"QuizEndingScreen\");\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(null);\n      setIsCorrect(null);\n    }\n  };\n  var handlePressedOption = function handlePressedOption(pressedOption) {\n    setSelectedOption(pressedOption);\n    var isAnswerCorrect = data[currentQuestionIndex].correct_option === pressedOption;\n    setIsCorrect(isAnswerCorrect);\n  };\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Progress.Bar, {\n    progress: 0.3,\n    width: 200,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.question,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, data[currentQuestionIndex].question), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handlePressedOption(data[currentQuestionIndex].options[0]);\n    },\n    disabled: selectedOption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.AnswerBox, isCorrect && selectedOption === data[currentQuestionIndex].options[0] ? styles.correctBox : null, !isCorrect && selectedOption === data[currentQuestionIndex].options[0] ? styles.wrongBox : null],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.answerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, data[currentQuestionIndex].options[0]))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handlePressedOption(data[currentQuestionIndex].options[1]);\n    },\n    disabled: selectedOption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.AnswerBox, styles.secondAnswerBox, isCorrect && selectedOption === data[currentQuestionIndex].options[1] ? styles.correctBox : null, !isCorrect && selectedOption === data[currentQuestionIndex].options[1] ? styles.wrongBox : null],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.answerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, data[currentQuestionIndex].options[1]))), React.createElement(Button, {\n    color: \"black\",\n    mode: \"contained\",\n    onPress: handleNext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Continue\"));\n};\nexport default Quiz;\nvar styles = StyleSheet.create({\n  AnswerBox: {\n    width: 361,\n    height: 214,\n    borderWidth: 3,\n    borderRadius: 6,\n    borderColor: 'rgba(0, 0, 0, 0.05)',\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  secondAnswerBox: {\n    marginBottom: 0\n  },\n  answerText: {\n    textAlign: 'center',\n    fontSize: 24\n  },\n  question: {\n    marginBottom: 10,\n    fontSize: 18\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  correctBox: {\n    borderColor: 'grgba(19, 212, 2, 1)'\n  },\n  wrongBox: {\n    borderColor: 'rgba(241, 58, 0, 1)'\n  }\n});","map":{"version":3,"names":["React","useState","Text","View","StyleSheet","TouchableOpacity","data","Button","ProgressBar","Progress","Quiz","_ref","navigation","_useState","_useState2","_slicedToArray","currentQuestionIndex","setCurrentQuestionIndex","_useState3","_useState4","isCorrect","setIsCorrect","_useState5","_useState6","selectedOption","setSelectedOption","handleNext","length","console","log","navigate","handlePressedOption","pressedOption","isAnswerCorrect","correct_option","createElement","style","styles","container","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Bar","progress","width","question","onPress","options","disabled","AnswerBox","correctBox","wrongBox","answerText","secondAnswerBox","color","mode","create","height","borderWidth","borderRadius","borderColor","backgroundColor","alignItems","justifyContent","marginBottom","textAlign","fontSize","flex"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Text, View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport data from \"../helpers/data\";\nimport Button from '../components/Button';\nimport ProgressBar from \"./ProgressBar\";\nimport * as Progress from 'react-native-progress';\n\n\nconst Quiz = ({navigation}) => {\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [isCorrect, setIsCorrect] = useState(null);\n    const [selectedOption, setSelectedOption] = useState(null);\n\n\n    const handleNext = () => {\n        if(currentQuestionIndex === data.length -1 ){\n            console.log(\"irhohreoihofg\")\n        navigation.navigate(\"QuizEndingScreen\");\n        }\n            else{\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedOption(null);\n        setIsCorrect(null);\n    }\n};\n\n    const handlePressedOption = (pressedOption) => {\n        setSelectedOption(pressedOption);\n        const isAnswerCorrect = data[currentQuestionIndex].correct_option === pressedOption;\n        setIsCorrect(isAnswerCorrect);\n    };\n\n    return(\n\n        <View style={styles.container}>\n            <Progress.Bar progress={0.3} width={200} />\n            <Text style={styles.question}>{data[currentQuestionIndex].question}</Text>\n            <TouchableOpacity onPress={() => handlePressedOption(data[currentQuestionIndex].options[0])} disabled={selectedOption}>\n                <View style={[styles.AnswerBox, isCorrect && selectedOption === data[currentQuestionIndex].options[0] ? styles.correctBox : null, !isCorrect && selectedOption === data[currentQuestionIndex].options[0] ? styles.wrongBox : null]}>\n                    <Text style={styles.answerText}>{data[currentQuestionIndex].options[0]}</Text>\n                </View>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => handlePressedOption(data[currentQuestionIndex].options[1])}\n            disabled={selectedOption}>\n                <View style={[styles.AnswerBox, styles.secondAnswerBox, isCorrect && selectedOption === data[currentQuestionIndex].options[1] ? styles.correctBox : null, !isCorrect && selectedOption === data[currentQuestionIndex].options[1] ? styles.wrongBox : null]}>\n                    <Text style={styles.answerText}>{data[currentQuestionIndex].options[1]}</Text>\n                </View>\n            </TouchableOpacity>\n            <Button\n                color=\"black\"\n                mode=\"contained\"\n                onPress={handleNext}\n            >\n                Continue\n            </Button>\n        </View>\n    );\n};\n\nexport default Quiz;\n\nconst styles = StyleSheet.create({\n    AnswerBox: {\n        width: 361,\n        height: 214,\n        borderWidth: 3,\n        borderRadius: 6,\n        borderColor: 'rgba(0, 0, 0, 0.05)',\n        backgroundColor: 'rgba(0, 0, 0, 0.05)', \n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 10, \n    },\n    secondAnswerBox: {\n        marginBottom: 0, \n    },\n    answerText: {\n        textAlign: 'center',\n        fontSize: 24,\n    },\n    question: {\n        marginBottom: 10,\n        fontSize: 18, \n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    correctBox: {\n        borderColor: 'grgba(19, 212, 2, 1)', \n    },\n    wrongBox: {\n        borderColor: 'rgba(241, 58, 0, 1)', \n    },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}