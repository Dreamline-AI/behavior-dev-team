{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends2 from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"background\", \"borderless\", \"disabled\", \"rippleColor\", \"underlayColor\", \"children\", \"theme\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport { withTheme } from \"../../core/theming\";\nvar TouchableRipple = function TouchableRipple(_ref) {\n  var style = _ref.style,\n    _background = _ref.background,\n    _ref$borderless = _ref.borderless,\n    borderless = _ref$borderless === void 0 ? false : _ref$borderless,\n    disabledProp = _ref.disabled,\n    rippleColor = _ref.rippleColor,\n    _underlayColor = _ref.underlayColor,\n    children = _ref.children,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var handlePressIn = function handlePressIn(e) {\n    var _touches$;\n    var centered = rest.centered,\n      onPressIn = rest.onPressIn;\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n    var dark = theme.dark,\n      colors = theme.colors;\n    var calculatedRippleColor = rippleColor || color(colors.text).alpha(dark ? 0.32 : 0.2).rgb().string();\n    var button = e.currentTarget;\n    var style = window.getComputedStyle(button);\n    var dimensions = button.getBoundingClientRect();\n    var touchX;\n    var touchY;\n    var _e$nativeEvent = e.nativeEvent,\n      changedTouches = _e$nativeEvent.changedTouches,\n      touches = _e$nativeEvent.touches;\n    var touch = (_touches$ = touches === null || touches === void 0 ? void 0 : touches[0]) !== null && _touches$ !== void 0 ? _touches$ : changedTouches === null || changedTouches === void 0 ? void 0 : changedTouches[0];\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      var _touch$locationX, _touch$locationY;\n      touchX = (_touch$locationX = touch.locationX) !== null && _touch$locationX !== void 0 ? _touch$locationX : e.pageX;\n      touchY = (_touch$locationY = touch.locationY) !== null && _touch$locationY !== void 0 ? _touch$locationY : e.pageY;\n    }\n    var size = centered ? Math.min(dimensions.width, dimensions.height) * 1.25 : Math.max(dimensions.width, dimensions.height) * 2;\n    var container = document.createElement('span');\n    container.setAttribute('data-paper-ripple', '');\n    _extends2(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden'\n    });\n    var ripple = document.createElement('span');\n    _extends2(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n      transitionProperty: 'transform opacity',\n      transitionDuration: Math.min(size * 1.5, 350) + \"ms\",\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n      left: touchX + \"px\",\n      top: touchY + \"px\",\n      width: size + \"px\",\n      height: size + \"px\"\n    });\n    container.appendChild(ripple);\n    button.appendChild(container);\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        _extends2(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1'\n        });\n      });\n    });\n  };\n  var handlePressOut = function handlePressOut(e) {\n    var _rest$onPressOut;\n    (_rest$onPressOut = rest.onPressOut) === null || _rest$onPressOut === void 0 ? void 0 : _rest$onPressOut.call(rest, e);\n    var containers = e.currentTarget.querySelectorAll('[data-paper-ripple]');\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        containers.forEach(function (container) {\n          var ripple = container.firstChild;\n          _extends2(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0\n          });\n          setTimeout(function () {\n            var parentNode = container.parentNode;\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n  var disabled = disabledProp || !rest.onPress;\n  return React.createElement(TouchableWithoutFeedback, _extends({}, rest, {\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    disabled: disabled\n  }), React.createElement(View, {\n    style: [styles.touchable, borderless && styles.borderless, style]\n  }, React.Children.only(children)));\n};\nTouchableRipple.supported = true;\nvar styles = StyleSheet.create({\n  touchable: _objectSpread({\n    position: 'relative'\n  }, Platform.OS === 'web' && {\n    cursor: 'pointer'\n  }),\n  borderless: {\n    overflow: 'hidden'\n  }\n});\nexport default withTheme(TouchableRipple);","map":{"version":3,"sources":["D:\\Community Dreams frontend\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\TouchableRipple\\TouchableRipple.tsx"],"names":["React","color","withTheme","TouchableRipple","style","background","_background","borderless","disabled","disabledProp","rippleColor","underlayColor","_underlayColor","children","theme","rest","handlePressIn","e","centered","onPressIn","dark","colors","calculatedRippleColor","text","alpha","rgb","string","button","currentTarget","window","getComputedStyle","dimensions","getBoundingClientRect","touchX","touchY","changedTouches","touches","nativeEvent","touch","width","height","locationX","pageX","locationY","pageY","size","Math","min","max","container","document","createElement","setAttribute","Object","position","pointerEvents","top","left","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","appendChild","requestAnimationFrame","handlePressOut","onPressOut","containers","querySelectorAll","forEach","firstChild","setTimeout","parentNode","removeChild","onPress","styles","touchable","Children","only","supported","create","Platform","OS","cursor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  GestureResponderEvent,\n  Platform,\n} from 'react-native';\nimport color from 'color';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<\n  typeof TouchableWithoutFeedback\n> & {\n  /**\n   * Whether to render the ripple outside the view bounds.\n   */\n  borderless?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/touchablenativefeedback#background\n   */\n  background?: Object;\n  /**\n   * Whether to start the ripple at the center (Web).\n   */\n  centered?: boolean;\n  /**\n   * Whether to prevent interaction with the touchable.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press. If not set, will cause the touchable to be disabled.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Color of the ripple effect (Android >= 5.0 and Web).\n   */\n  rippleColor?: string;\n  /**\n   * Color of the underlay for the highlight effect (Android < 5.0 and iOS).\n   */\n  underlayColor?: string;\n  /**\n   * Content of the `TouchableRipple`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A wrapper for views that should respond to touches.\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\n * On unsupported platforms, it falls back to a highlight effect.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/touchable-ripple.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Text, TouchableRipple } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <TouchableRipple\n *     onPress={() => console.log('Pressed')}\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\n *   >\n *     <Text>Press anywhere</Text>\n *   </TouchableRipple>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableWithoutFeedback props https://reactnative.dev/docs/touchablewithoutfeedback#props\n */\nconst TouchableRipple = ({\n  style,\n  background: _background,\n  borderless = false,\n  disabled: disabledProp,\n  rippleColor,\n  underlayColor: _underlayColor,\n  children,\n  theme,\n  ...rest\n}: Props) => {\n  const handlePressIn = (e: any) => {\n    const { centered, onPressIn } = rest;\n\n    onPressIn?.(e);\n\n    const { dark, colors } = theme;\n    const calculatedRippleColor =\n      rippleColor ||\n      color(colors.text)\n        .alpha(dark ? 0.32 : 0.2)\n        .rgb()\n        .string();\n\n    const button = e.currentTarget;\n    const style = window.getComputedStyle(button);\n    const dimensions = button.getBoundingClientRect();\n\n    let touchX;\n    let touchY;\n\n    const { changedTouches, touches } = e.nativeEvent;\n    const touch = touches?.[0] ?? changedTouches?.[0];\n\n    // If centered or it was pressed using keyboard - enter or space\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      touchX = touch.locationX ?? e.pageX;\n      touchY = touch.locationY ?? e.pageY;\n    }\n\n    // Get the size of the button to determine how big the ripple should be\n    const size = centered\n      ? // If ripple is always centered, we don't need to make it too big\n        Math.min(dimensions.width, dimensions.height) * 1.25\n      : // Otherwise make it twice as big so clicking on one end spreads ripple to other\n        Math.max(dimensions.width, dimensions.height) * 2;\n\n    // Create a container for our ripple effect so we don't need to change the parent's style\n    const container = document.createElement('span');\n\n    container.setAttribute('data-paper-ripple', '');\n\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden',\n    });\n\n    // Create span to show the ripple effect\n    const ripple = document.createElement('span');\n\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n\n      /* Transition configuration */\n      transitionProperty: 'transform opacity',\n      transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n\n      /* We'll animate these properties */\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n\n      // Position the ripple where cursor was\n      left: `${touchX}px`,\n      top: `${touchY}px`,\n      width: `${size}px`,\n      height: `${size}px`,\n    });\n\n    // Finally, append it to DOM\n    container.appendChild(ripple);\n    button.appendChild(container);\n\n    // rAF runs in the same frame as the event handler\n    // Use double rAF to ensure the transition class is added in next frame\n    // This will make sure that the transition animation is triggered\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1',\n        });\n      });\n    });\n  };\n\n  const handlePressOut = (e: any) => {\n    rest.onPressOut?.(e);\n\n    const containers = e.currentTarget.querySelectorAll(\n      '[data-paper-ripple]'\n    ) as HTMLElement[];\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        containers.forEach((container) => {\n          const ripple = container.firstChild as HTMLSpanElement;\n\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0,\n          });\n\n          // Finally remove the span after the transition\n          setTimeout(() => {\n            const { parentNode } = container;\n\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n\n  const disabled = disabledProp || !rest.onPress;\n\n  return (\n    <TouchableWithoutFeedback\n      {...rest}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      disabled={disabled}\n    >\n      <View style={[styles.touchable, borderless && styles.borderless, style]}>\n        {React.Children.only(children)}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\n/**\n * Whether ripple effect is supported.\n */\nTouchableRipple.supported = true;\n\nconst styles = StyleSheet.create({\n  touchable: {\n    position: 'relative',\n    ...(Platform.OS === 'web' && { cursor: 'pointer' }),\n  },\n  borderless: {\n    overflow: 'hidden',\n  },\n});\n\nexport default withTheme(TouchableRipple);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}