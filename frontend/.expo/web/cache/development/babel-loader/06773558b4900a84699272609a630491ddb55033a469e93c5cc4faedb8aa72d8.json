{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"statusBarHeight\", \"style\", \"dark\"],\n  _excluded2 = [\"height\", \"elevation\", \"backgroundColor\", \"zIndex\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport overlay from \"../../styles/overlay\";\nimport { DEFAULT_APPBAR_HEIGHT, Appbar } from \"./Appbar\";\nimport shadow from \"../../styles/shadow\";\nimport { withTheme } from \"../../core/theming\";\nimport { APPROX_STATUSBAR_HEIGHT } from \"../../constants\";\nvar AppbarHeader = function AppbarHeader(props) {\n  var _props$statusBarHeigh = props.statusBarHeight,\n    statusBarHeight = _props$statusBarHeigh === void 0 ? APPROX_STATUSBAR_HEIGHT : _props$statusBarHeigh,\n    style = props.style,\n    dark = props.dark,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _rest$theme = rest.theme,\n    isDarkTheme = _rest$theme.dark,\n    colors = _rest$theme.colors,\n    mode = _rest$theme.mode;\n  var _ref = StyleSheet.flatten(style) || {},\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? DEFAULT_APPBAR_HEIGHT : _ref$height,\n    _ref$elevation = _ref.elevation,\n    elevation = _ref$elevation === void 0 ? 4 : _ref$elevation,\n    customBackground = _ref.backgroundColor,\n    _ref$zIndex = _ref.zIndex,\n    zIndex = _ref$zIndex === void 0 ? 0 : _ref$zIndex,\n    restStyle = _objectWithoutProperties(_ref, _excluded2);\n  var backgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n  var Wrapper = typeof props.statusBarHeight === 'number' ? View : SafeAreaView;\n  return React.createElement(Wrapper, {\n    style: [{\n      backgroundColor: backgroundColor,\n      zIndex: zIndex,\n      elevation: elevation\n    }, shadow(elevation)]\n  }, React.createElement(Appbar, _extends({\n    style: [{\n      height: height,\n      backgroundColor: backgroundColor,\n      marginTop: statusBarHeight\n    }, styles.appbar, restStyle],\n    dark: dark\n  }, rest)));\n};\nAppbarHeader.displayName = 'Appbar.Header';\nvar styles = StyleSheet.create({\n  appbar: {\n    elevation: 0\n  }\n});\nexport default withTheme(AppbarHeader);\nvar AppbarHeaderWithTheme = withTheme(AppbarHeader);\nexport { AppbarHeaderWithTheme as AppbarHeader };","map":{"version":3,"names":["React","StyleSheet","View","SafeAreaView","overlay","DEFAULT_APPBAR_HEIGHT","Appbar","shadow","withTheme","APPROX_STATUSBAR_HEIGHT","AppbarHeader","props","_props$statusBarHeigh","statusBarHeight","style","dark","rest","_objectWithoutProperties","_excluded","_rest$theme","theme","isDarkTheme","colors","mode","_ref","flatten","_ref$height","height","_ref$elevation","elevation","customBackground","backgroundColor","_ref$zIndex","zIndex","restStyle","_excluded2","surface","primary","Wrapper","createElement","_extends","marginTop","styles","appbar","displayName","create","AppbarHeaderWithTheme"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/node_modules/react-native-paper/lib/module/components/Appbar/AppbarHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n} from 'react-native';\nimport overlay from '../../styles/overlay';\nimport { DEFAULT_APPBAR_HEIGHT, Appbar } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\nexport type Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" subtitle=\"Subtitle\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarHeader = (props: Props) => {\n  const {\n    // Don't use default props since we check it to know whether we should use SafeAreaView\n    statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n    style,\n    dark,\n    ...rest\n  } = props;\n\n  const { dark: isDarkTheme, colors, mode } = rest.theme;\n  const {\n    height = DEFAULT_APPBAR_HEIGHT,\n    elevation = 4,\n    backgroundColor: customBackground,\n    zIndex = 0,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n  // Let the user override the behaviour\n  const Wrapper =\n    typeof props.statusBarHeight === 'number' ? View : SafeAreaView;\n  return (\n    <Wrapper\n      style={\n        [\n          { backgroundColor, zIndex, elevation },\n          shadow(elevation),\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Appbar\n        style={[\n          { height, backgroundColor, marginTop: statusBarHeight },\n          styles.appbar,\n          restStyle,\n        ]}\n        dark={dark}\n        {...rest}\n      />\n    </Wrapper>\n  );\n};\n\nAppbarHeader.displayName = 'Appbar.Header';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nconst AppbarHeaderWithTheme = withTheme(AppbarHeader);\n// @component-docs ignore-next-line\nexport { AppbarHeaderWithTheme as AppbarHeader };\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAQA,OAAOC,OAAP;AACA,SAASC,qBAAT,EAAgCC,MAAhC;AACA,OAAOC,MAAP;AACA,SAASC,SAAT;AACA,SAASC,uBAAT;AAiEA,IAAMC,YAAY,GAAI,SAAhBA,YAAYA,CAAIC,KAAD,EAAkB;EACrC,IAAAC,qBAAA,GAMID,KANJ,CAEEE,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAGH,uBAFd,GAAAG,qBAAA;IAGJE,KAHI,GAMFH,KANJ,CAGEG,KAHI;IAIJC,IAJI,GAMFJ,KANJ,CAIEI,IAJI;IAKDC,IAAA,GAAAC,wBAAA,CACDN,KANJ,EAAAO,SAAA;EAQA,IAAAC,WAAA,GAA4CH,IAAI,CAACI,KAAjD;IAAcC,WAAR,GAAAF,WAAA,CAAEJ,IAAI;IAAeO,MAArB,GAAAH,WAAA,CAAqBG,MAArB;IAA6BC,IAAA,GAAAJ,WAAA,CAAAI,IAAA;EACnC,IAAAC,IAAA,GAMevB,UAAU,CAACwB,OAAX,CAAmBX,KAAnB,KAA6B,EAN5C;IAAAY,WAAA,GAAAF,IAAA,CACEG,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAGrB,qBADL,GAAAqB,WAAA;IAAAE,cAAA,GAAAJ,IAAA,CAEJK,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,CAFR,GAAAA,cAAA;IAGaE,gBAHb,GAAAN,IAAA,CAGJO,eAAe;IAAAC,WAAA,GAAAR,IAAA,CACfS,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,CAJL,GAAAA,WAAA;IAKDE,SAAA,GAAAjB,wBAAA,CAAAO,IAAA,EAAAW,UAAA;EAEL,IAAMJ,eAAe,GAAGD,gBAAgB,GACpCA,gBADoC,GAEpCT,WAAW,IAAIE,IAAI,KAAK,UAAxB,GACAnB,OAAO,CAACyB,SAAD,EAAYP,MAAM,CAACc,OAAnB,CADP,GAEAd,MAAM,CAACe,OAJX;EAMA,IAAMC,OAAO,GACX,OAAO3B,KAAK,CAACE,eAAb,KAAiC,QAAjC,GAA4CX,IAA5C,GAAmDC,YADrD;EAEA,OACEH,KAAA,CAAAuC,aAAA,CAACD,OAAD;IACExB,KAAK,EACH,CACE;MAAEiB,eAAF,EAAEA,eAAF;MAAmBE,MAAnB,EAAmBA,MAAnB;MAA2BJ,SAAA,EAAAA;IAA3B,CADF,EAEEtB,MAAM,CAACsB,SAAD,CAFR;EAFJ,GAQE7B,KAAA,CAAAuC,aAAA,CAACjC,MAAD,EAAAkC,QAAA;IACE1B,KAAK,EAAE,CACL;MAAEa,MAAF,EAAEA,MAAF;MAAUI,eAAV,EAAUA,eAAV;MAA2BU,SAAS,EAAE5B;IAAtC,CADK,EAEL6B,MAAM,CAACC,MAFF,EAGLT,SAHK,CADT;IAMEnB,IAAI,EAAEA;EANR,GAOMC,IAPN,EARF,CADF;AAoBD,CA7CD;AA+CAN,YAAY,CAACkC,WAAb,GAA2B,eAA3B;AAEA,IAAMF,MAAM,GAAGzC,UAAU,CAAC4C,MAAX,CAAkB;EAC/BF,MAAM,EAAE;IACNd,SAAS,EAAE;EADL;AADuB,CAAlB,CAAf;AAMA,eAAerB,SAAS,CAACE,YAAD,CAAxB;AAGA,IAAMoC,qBAAqB,GAAGtC,SAAS,CAACE,YAAD,CAAvC;AAEA,SAASoC,qBAAqB,IAAIpC,YAAlC"},"metadata":{},"sourceType":"module","externalDependencies":[]}