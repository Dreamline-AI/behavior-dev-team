{"ast":null,"code":"import AsyncStorage from \"./AsyncStorage\";\nexport function useAsyncStorage(key) {\n  return {\n    getItem: function getItem() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return AsyncStorage.getItem.apply(AsyncStorage, [key].concat(args));\n    },\n    setItem: function setItem() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return AsyncStorage.setItem.apply(AsyncStorage, [key].concat(args));\n    },\n    mergeItem: function mergeItem() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return AsyncStorage.mergeItem.apply(AsyncStorage, [key].concat(args));\n    },\n    removeItem: function removeItem() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return AsyncStorage.removeItem.apply(AsyncStorage, [key].concat(args));\n    }\n  };\n}","map":{"version":3,"sources":["C:\\Users\\sunvi\\Documents\\GitHub\\behavior-dev-team\\frontend\\node_modules\\@react-native-async-storage\\async-storage\\lib\\module\\hooks.ts"],"names":["AsyncStorage","useAsyncStorage","key","getItem","args","setItem","mergeItem","removeItem"],"mappings":"AAAA,OAAOA,YAAY;AAGnB,OAAO,SAASC,eAAeA,CAACC,GAAW,EAAoB;EAC7D,OAAO;IACLC,OAAO,EAAEA,SAAAA,QAAAA;MAAAA,SAAAA,IAAAA,GAAAA,SAAAA,CAAAA,MAAAA,EAAIC,IAAI,OAAA,KAAA,CAAA,IAAA,GAAA,IAAA,MAAA,IAAA,GAAA,IAAA,EAAA,IAAA;QAAJA,IAAI,CAAA,IAAA,IAAA,SAAA,CAAA,IAAA;MAAA;MAAA,OAAKJ,YAAY,CAACG,OAAO,CAAA,KAAA,CAApBH,YAAY,GAASE,GAAG,EAAA,MAAA,CAAKE,IAAI,EAAC;IAAA;IACxDC,OAAO,EAAEA,SAAAA,QAAAA;MAAAA,SAAAA,KAAAA,GAAAA,SAAAA,CAAAA,MAAAA,EAAID,IAAI,OAAA,KAAA,CAAA,KAAA,GAAA,KAAA,MAAA,KAAA,GAAA,KAAA,EAAA,KAAA;QAAJA,IAAI,CAAA,KAAA,IAAA,SAAA,CAAA,KAAA;MAAA;MAAA,OAAKJ,YAAY,CAACK,OAAO,CAAA,KAAA,CAApBL,YAAY,GAASE,GAAG,EAAA,MAAA,CAAKE,IAAI,EAAC;IAAA;IACxDE,SAAS,EAAEA,SAAAA,UAAAA;MAAAA,SAAAA,KAAAA,GAAAA,SAAAA,CAAAA,MAAAA,EAAIF,IAAI,OAAA,KAAA,CAAA,KAAA,GAAA,KAAA,MAAA,KAAA,GAAA,KAAA,EAAA,KAAA;QAAJA,IAAI,CAAA,KAAA,IAAA,SAAA,CAAA,KAAA;MAAA;MAAA,OAAKJ,YAAY,CAACM,SAAS,CAAA,KAAA,CAAtBN,YAAY,GAAWE,GAAG,EAAA,MAAA,CAAKE,IAAI,EAAC;IAAA;IAC5DG,UAAU,EAAEA,SAAAA,WAAAA;MAAAA,SAAAA,KAAAA,GAAAA,SAAAA,CAAAA,MAAAA,EAAIH,IAAI,OAAA,KAAA,CAAA,KAAA,GAAA,KAAA,MAAA,KAAA,GAAA,KAAA,EAAA,KAAA;QAAJA,IAAI,CAAA,KAAA,IAAA,SAAA,CAAA,KAAA;MAAA;MAAA,OAAKJ,YAAY,CAACO,UAAU,CAAA,KAAA,CAAvBP,YAAY,GAAYE,GAAG,EAAA,MAAA,CAAKE,IAAI,EAAA;IAAA;EAC/D,CAAC;AACH","sourcesContent":["import AsyncStorage from \"./AsyncStorage\";\nimport type { AsyncStorageHook } from \"./types\";\n\nexport function useAsyncStorage(key: string): AsyncStorageHook {\n  return {\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\n    mergeItem: (...args) => AsyncStorage.mergeItem(key, ...args),\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}