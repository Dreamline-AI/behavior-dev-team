{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon, { isValidIcon, isEqualIcon } from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\nvar CrossFadeIcon = function CrossFadeIcon(_ref) {\n  var color = _ref.color,\n    size = _ref.size,\n    source = _ref.source,\n    theme = _ref.theme;\n  var _React$useState = React.useState(function () {\n      return source;\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    currentIcon = _React$useState2[0],\n    setCurrentIcon = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    previousIcon = _React$useState4[0],\n    setPreviousIcon = _React$useState4[1];\n  var _React$useRef = React.useRef(new Animated.Value(1)),\n    fade = _React$useRef.current;\n  var scale = theme.animation.scale;\n  if (currentIcon !== source) {\n    setPreviousIcon(function () {\n      return currentIcon;\n    });\n    setCurrentIcon(function () {\n      return source;\n    });\n  }\n  React.useEffect(function () {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n  var opacityPrev = fade;\n  var opacityNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }) : 1;\n  var rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg']\n  });\n  var rotateNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  }) : '0deg';\n  return React.createElement(View, {\n    style: [styles.content, {\n      height: size,\n      width: size\n    }]\n  }, previousIcon ? React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityPrev,\n      transform: [{\n        rotate: rotatePrev\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: previousIcon,\n    size: size,\n    color: color\n  })) : null, React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityNext,\n      transform: [{\n        rotate: rotateNext\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: currentIcon,\n    size: size,\n    color: color\n  })));\n};\nexport default withTheme(CrossFadeIcon);\nvar styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["C:\\Users\\ellen\\OneDrive\\Documents\\backup-folder-1\\CDreams\\behavior-dev-team\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\CrossFadeIcon.tsx"],"names":["React","Icon","isValidIcon","isEqualIcon","withTheme","CrossFadeIcon","color","size","source","theme","currentIcon","setCurrentIcon","useState","previousIcon","setPreviousIcon","current","fade","useRef","Animated","Value","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","styles","content","height","width","icon","opacity","transform","rotate","create","alignItems","justifyContent","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, IconSource, isEqualIcon } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}