{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport { ThemeProvider } from \"./theming\";\nimport { Provider as SettingsProvider } from \"./settings\";\nimport MaterialCommunityIcon from \"../components/MaterialCommunityIcon\";\nimport PortalHost from \"../components/Portal/PortalHost\";\nimport DefaultTheme from \"../styles/DefaultTheme\";\nimport DarkTheme from \"../styles/DarkTheme\";\nimport { addEventListener } from \"../utils/addEventListener\";\nvar Provider = function Provider(_ref) {\n  var props = _extends({}, (_objectDestructuringEmpty(_ref), _ref));\n  var colorSchemeName = !props.theme && (Appearance === null || Appearance === void 0 ? void 0 : Appearance.getColorScheme()) || 'light';\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    reduceMotionEnabled = _React$useState2[0],\n    setReduceMotionEnabled = _React$useState2[1];\n  var _React$useState3 = React.useState(colorSchemeName),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    colorScheme = _React$useState4[0],\n    setColorScheme = _React$useState4[1];\n  var handleAppearanceChange = function handleAppearanceChange(preferences) {\n    var colorScheme = preferences.colorScheme;\n    setColorScheme(colorScheme);\n  };\n  React.useEffect(function () {\n    var subscription;\n    if (!props.theme) {\n      subscription = addEventListener(AccessibilityInfo, 'reduceMotionChanged', setReduceMotionEnabled);\n    }\n    return function () {\n      if (!props.theme) {\n        var _subscription;\n        (_subscription = subscription) === null || _subscription === void 0 ? void 0 : _subscription.remove();\n      }\n    };\n  }, [props.theme]);\n  React.useEffect(function () {\n    var appearanceSubscription;\n    if (!props.theme) {\n      appearanceSubscription = Appearance === null || Appearance === void 0 ? void 0 : Appearance.addChangeListener(handleAppearanceChange);\n    }\n    return function () {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance === null || Appearance === void 0 ? void 0 : Appearance.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n  var getTheme = function getTheme() {\n    var providedTheme = props.theme;\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      var theme = colorScheme === 'dark' ? DarkTheme : DefaultTheme;\n      return _objectSpread(_objectSpread({}, theme), {}, {\n        animation: _objectSpread(_objectSpread({}, theme.animation), {}, {\n          scale: reduceMotionEnabled ? 0 : 1\n        })\n      });\n    }\n  };\n  var children = props.children,\n    settings = props.settings;\n  return React.createElement(PortalHost, null, React.createElement(SettingsProvider, {\n    value: settings || {\n      icon: MaterialCommunityIcon\n    }\n  }, React.createElement(ThemeProvider, {\n    theme: getTheme()\n  }, children)));\n};\nexport default Provider;","map":{"version":3,"names":["React","AccessibilityInfo","Appearance","ThemeProvider","Provider","SettingsProvider","MaterialCommunityIcon","PortalHost","DefaultTheme","DarkTheme","addEventListener","_ref","props","_extends","_objectDestructuringEmpty","colorSchemeName","theme","getColorScheme","_React$useState","useState","_React$useState2","_slicedToArray","reduceMotionEnabled","setReduceMotionEnabled","_React$useState3","_React$useState4","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","_subscription","remove","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","providedTheme","_objectSpread","animation","scale","children","settings","createElement","value","icon"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/node_modules/react-native-paper/lib/module/core/Provider.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\nimport { addEventListener } from '../utils/addEventListener';\n\nexport type Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (\n        colorScheme === 'dark' ? DarkTheme : DefaultTheme\n      ) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}