{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar DialogScrollArea = function DialogScrollArea(props) {\n  return React.createElement(View, _extends({}, props, {\n    style: [styles.container, props.style]\n  }), props.children);\n};\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\nvar styles = StyleSheet.create({\n  container: {\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1\n  }\n});\nexport default DialogScrollArea;","map":{"version":3,"sources":["D:\\Community Dreams frontend\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\Dialog\\DialogScrollArea.tsx"],"names":["React","DialogScrollArea","props","styles","container","style","children","displayName","create","borderColor","borderTopWidth","StyleSheet","hairlineWidth","borderBottomWidth","paddingHorizontal","flexGrow","flexShrink"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAA,IAAA;AAAA,OAAA,UAAA;AAgDA,IAAMC,gBAAgB,GAAIC,SAApBD,gBAAgB,CAAIC,KAAD;EAAA,OACvB,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAUA,KAAV,EAAA;IAAiB,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBF,KAAK,CAACG,KAAzB;EAAxB,CAAA,CAAA,EACGH,KAAK,CAACI,QADT,CADF;AAAA;AAMAL,gBAAgB,CAACM,WAAjBN,GAA+B,mBAA/BA;AAEA,IAAME,MAAM,GAAG,UAAU,CAACK,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,WAAW,EAAE,oBADJ;IAETC,cAAc,EAAEC,UAAU,CAACC,aAFlB;IAGTC,iBAAiB,EAAEF,UAAU,CAACC,aAHrB;IAITE,iBAAiB,EAAE,EAJV;IAKTC,QAAQ,EAAE,CALD;IAMTC,UAAU,EAAE;EANH;AADoB,CAAlB,CAAf;AAWA,eAAef,gBAAf","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogScrollArea`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-scroll-area.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ScrollView } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.ScrollArea>\n *           <ScrollView contentContainerStyle={{paddingHorizontal: 24}}>\n *             <Text>This is a scrollable area</Text>\n *           </ScrollView>\n *         </Dialog.ScrollArea>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogScrollArea = (props: Props) => (\n  <View {...props} style={[styles.container, props.style]}>\n    {props.children}\n  </View>\n);\n\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n});\n\nexport default DialogScrollArea;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}