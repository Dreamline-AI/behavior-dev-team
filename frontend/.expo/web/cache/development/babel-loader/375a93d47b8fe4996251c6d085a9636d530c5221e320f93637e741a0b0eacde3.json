{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/screens/IncorrectQuestionScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"../components/Button\";\nimport Background from \"../components/Background\";\nimport IncorrectQuiz from \"../components/IncorrectQuiz\";\nimport data from \"../helpers/data\";\nexport default function IncorrectQuestionsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    incorrectQuestions = _useState2[0],\n    setIncorrectQuestions = _useState2[1];\n  useEffect(function () {\n    if (route.params && route.params.incorrectIndices) {\n      var incorrectIndices = route.params.incorrectIndices;\n      var filteredQuestions = data.filter(function (_, index) {\n        return incorrectIndices.includes(index);\n      });\n      setIncorrectQuestions(filteredQuestions);\n    }\n  }, [route.params]);\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, React.createElement(IncorrectQuiz, {\n    incorrectQuestions: incorrectQuestions,\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), \" \", React.createElement(Button, {\n    color: \"black\",\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.navigate('QuizEndingScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Continue\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Button","Background","IncorrectQuiz","data","IncorrectQuestionsScreen","_ref","navigation","route","_useState","_useState2","_slicedToArray","incorrectQuestions","setIncorrectQuestions","params","incorrectIndices","filteredQuestions","filter","_","index","includes","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","color","mode","onPress","navigate","create","flex","justifyContent","alignItems"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/screens/IncorrectQuestionScreen.js"],"sourcesContent":["// IncorrectQuestionsScreen.js\n\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Button from '../components/Button';\nimport Background from '../components/Background';\nimport IncorrectQuiz from '../components/IncorrectQuiz'; // Import the IncorrectQuiz component\nimport data from '../helpers/data'; // Assuming you have a data file with the questions\n\nexport default function IncorrectQuestionsScreen({ navigation, route }) {\n    const [incorrectQuestions, setIncorrectQuestions] = useState([]);\n\n    useEffect(() => {\n        if (route.params && route.params.incorrectIndices) {\n            const { incorrectIndices } = route.params;\n            const filteredQuestions = data.filter((_, index) => incorrectIndices.includes(index));\n            setIncorrectQuestions(filteredQuestions);\n        }\n    }, [route.params]);\n\n    return (\n        <Background>\n            <View style={styles.container}>\n                <IncorrectQuiz incorrectQuestions={incorrectQuestions} navigation={navigation} /> {/* Pass incorrectQuestions prop */}\n                <Button\n                    color=\"black\"\n                    mode=\"contained\"\n                    onPress={() => navigation.navigate('QuizEndingScreen')}\n                >\n                    Continue\n                </Button>\n            </View>\n        </Background>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n});\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAEnD,OAAOC,MAAM;AACb,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,IAAI;AAEX,eAAe,SAASC,wBAAwBA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAChE,IAAAC,SAAA,GAAoDX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzDG,kBAAkB,GAAAF,UAAA;IAAEG,qBAAqB,GAAAH,UAAA;EAEhDb,SAAS,CAAC,YAAM;IACZ,IAAIW,KAAK,CAACM,MAAM,IAAIN,KAAK,CAACM,MAAM,CAACC,gBAAgB,EAAE;MAC/C,IAAQA,gBAAgB,GAAKP,KAAK,CAACM,MAAM,CAAjCC,gBAAgB;MACxB,IAAMC,iBAAiB,GAAGZ,IAAI,CAACa,MAAM,CAAC,UAACC,CAAC,EAAEC,KAAK;QAAA,OAAKJ,gBAAgB,CAACK,QAAQ,CAACD,KAAK,CAAC;MAAA,EAAC;MACrFN,qBAAqB,CAACG,iBAAiB,CAAC;IAC5C;EACJ,CAAC,EAAE,CAACR,KAAK,CAACM,MAAM,CAAC,CAAC;EAElB,OACIlB,KAAA,CAAAyB,aAAA,CAACnB,UAAU;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACP/B,KAAA,CAAAyB,aAAA,CAACrB,IAAI;IAAC4B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1B/B,KAAA,CAAAyB,aAAA,CAAClB,aAAa;IAACS,kBAAkB,EAAEA,kBAAmB;IAACL,UAAU,EAAEA,UAAW;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,KAAC,EAClF/B,KAAA,CAAAyB,aAAA,CAACpB,MAAM;IACH8B,KAAK,EAAC,OAAO;IACbC,IAAI,EAAC,WAAW;IAChBC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAM1B,UAAU,CAAC2B,QAAQ,CAAC,kBAAkB,CAAC;IAAA,CAAC;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1D,UAEO,CACN,CACE,CAAC;AAErB;AAEA,IAAME,MAAM,GAAG9B,UAAU,CAACoC,MAAM,CAAC;EAC7BL,SAAS,EAAE;IACPM,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}