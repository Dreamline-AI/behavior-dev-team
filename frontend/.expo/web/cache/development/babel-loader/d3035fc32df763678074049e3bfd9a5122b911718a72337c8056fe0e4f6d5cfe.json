{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"indeterminate\", \"style\", \"progress\", \"visible\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport setColor from 'color';\nimport { withTheme } from \"../core/theming\";\nvar INDETERMINATE_DURATION = 2000;\nvar INDETERMINATE_MAX_WIDTH = 0.6;\nvar isRTL = I18nManager.isRTL;\nvar ProgressBar = function ProgressBar(_ref) {\n  var color = _ref.color,\n    indeterminate = _ref.indeterminate,\n    style = _ref.style,\n    _ref$progress = _ref.progress,\n    progress = _ref$progress === void 0 ? 0 : _ref$progress,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n    timer = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new Animated.Value(0)),\n    fade = _React$useRef2.current;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    width = _React$useState2[0],\n    setWidth = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    prevWidth = _React$useState4[0],\n    setPrevWidth = _React$useState4[1];\n  var indeterminateAnimation = React.useRef(null);\n  var scale = theme.animation.scale;\n  var startAnimation = React.useCallback(function () {\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false\n        });\n      }\n      timer.setValue(0);\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n    }\n  }, [scale, timer, progress, indeterminate, fade]);\n  var stopAnimation = React.useCallback(function () {\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n  }, [fade, scale]);\n  React.useEffect(function () {\n    if (visible) startAnimation();else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n  React.useEffect(function () {\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n  var onLayout = function onLayout(event) {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n  var tintColor = color || theme.colors.primary;\n  var trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n  return React.createElement(View, _extends({\n    onLayout: onLayout\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: visible\n    },\n    accessibilityValue: indeterminate ? {} : {\n      min: 0,\n      max: 100,\n      now: progress * 100\n    }\n  }), React.createElement(Animated.View, {\n    style: [styles.container, {\n      backgroundColor: trackTintColor,\n      opacity: fade\n    }, style]\n  }, width ? React.createElement(Animated.View, {\n    style: [styles.progressBar, {\n      width: width,\n      backgroundColor: tintColor,\n      transform: [{\n        translateX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, (isRTL ? 1 : -1) * 0.5 * INDETERMINATE_MAX_WIDTH * width, (isRTL ? -1 : 1) * 0.7 * width]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0]\n        })\n      }, {\n        scaleX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [0.0001, INDETERMINATE_MAX_WIDTH, 0.0001]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [0.0001, 1]\n        })\n      }]\n    }]\n  }) : null));\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    flex: 1\n  }\n});\nexport default withTheme(ProgressBar);","map":{"version":3,"sources":["C:\\Users\\ellen\\OneDrive\\Documents\\backup-folder-1\\CDreams\\behavior-dev-team\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\ProgressBar.tsx"],"names":["React","setColor","withTheme","INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","I18nManager","ProgressBar","color","indeterminate","style","progress","visible","theme","rest","current","timer","useRef","Animated","Value","fade","width","setWidth","useState","prevWidth","setPrevWidth","indeterminateAnimation","scale","animation","startAnimation","useCallback","timing","duration","toValue","useNativeDriver","isInteraction","start","Platform","OS","setValue","loop","stopAnimation","stop","useEffect","onLayout","event","nativeEvent","layout","tintColor","colors","primary","trackTintColor","alpha","rgb","string","busy","min","max","now","styles","container","backgroundColor","opacity","progressBar","transform","translateX","interpolate","inputRange","outputRange","scaleX","create","height","overflow","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n  I18nManager,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ProgressBar = ({\n  color,\n  indeterminate,\n  style,\n  progress = 0,\n  visible = true,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(0));\n  const [width, setWidth] = React.useState<number>(0);\n  const [prevWidth, setPrevWidth] = React.useState<number>(0);\n\n  const indeterminateAnimation =\n    React.useRef<Animated.CompositeAnimation | null>(null);\n\n  const { scale } = theme.animation;\n\n  const startAnimation = React.useCallback(() => {\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  }, [scale, timer, progress, indeterminate, fade]);\n\n  const stopAnimation = React.useCallback(() => {\n    // Stop indeterminate animation\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  }, [fade, scale]);\n\n  React.useEffect(() => {\n    if (visible) startAnimation();\n    else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n\n  React.useEffect(() => {\n    // Start animation the very first time when previously the width was unclear\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  const tintColor = color || theme.colors.primary;\n  const trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n\n  return (\n    <View\n      onLayout={onLayout}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: visible }}\n      accessibilityValue={\n        indeterminate ? {} : { min: 0, max: 100, now: progress * 100 }\n      }\n    >\n      <Animated.View\n        style={[\n          styles.container,\n          { backgroundColor: trackTintColor, opacity: fade },\n          style,\n        ]}\n      >\n        {width ? (\n          <Animated.View\n            style={[\n              styles.progressBar,\n              {\n                width,\n                backgroundColor: tintColor,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              (isRTL ? 1 : -1) * 0.5 * width,\n                              (isRTL ? 1 : -1) *\n                                0.5 *\n                                INDETERMINATE_MAX_WIDTH *\n                                width,\n                              (isRTL ? -1 : 1) * 0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n            ]}\n          />\n        ) : null}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}