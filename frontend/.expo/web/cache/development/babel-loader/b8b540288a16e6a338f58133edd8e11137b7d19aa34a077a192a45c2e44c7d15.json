{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"source\", \"style\", \"onError\", \"onLayout\", \"onLoad\", \"onLoadEnd\", \"onLoadStart\", \"onProgress\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../../core/theming\";\nvar defaultSize = 64;\nvar AvatarImage = function AvatarImage(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    source = _ref.source,\n    style = _ref.style,\n    onError = _ref.onError,\n    onLayout = _ref.onLayout,\n    onLoad = _ref.onLoad,\n    onLoadEnd = _ref.onLoadEnd,\n    onLoadStart = _ref.onLoadStart,\n    onProgress = _ref.onProgress,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var colors = theme.colors;\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? colors.primary : _ref2$backgroundColor;\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, style]\n  }, rest), typeof source === 'function' && source({\n    size: size\n  }), typeof source !== 'function' && React.createElement(Image, {\n    source: source,\n    style: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    },\n    onError: onError,\n    onLayout: onLayout,\n    onLoad: onLoad,\n    onLoadEnd: onLoadEnd,\n    onLoadStart: onLoadStart,\n    onProgress: onProgress\n  }));\n};\nAvatarImage.displayName = 'Avatar.Image';\nexport default withTheme(AvatarImage);","map":{"version":3,"names":["React","Image","StyleSheet","View","withTheme","defaultSize","AvatarImage","_ref","_ref$size","size","source","style","onError","onLayout","onLoad","onLoadEnd","onLoadStart","onProgress","theme","rest","_objectWithoutProperties","_excluded","colors","_ref2","flatten","_ref2$backgroundColor","backgroundColor","primary","createElement","_extends","width","height","borderRadius","displayName"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/node_modules/react-native-paper/lib/module/components/Avatar/AvatarImage.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  ImageSourcePropType,\n  ImageProps,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\nconst defaultSize = 64;\n\nexport type AvatarImageSource =\n  | ImageSourcePropType\n  | ((props: { size: number }) => React.ReactNode);\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Image to display for the `Avatar`.\n   * It accepts a standard React Native Image `source` prop\n   * Or a function that returns an `Image`.\n   */\n  source: AvatarImageSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Invoked on load error.\n   */\n  onError?: ImageProps['onError'];\n  /**\n   * Invoked on mount and on layout changes.\n   */\n  onLayout?: ImageProps['onLayout'];\n  /**\n   * Invoked when load completes successfully.\n   */\n  onLoad?: ImageProps['onLoad'];\n  /**\n   * Invoked when load either succeeds or fails.\n   */\n  onLoadEnd?: ImageProps['onLoadEnd'];\n  /**\n   * Invoked on load start.\n   */\n  onLoadStart?: ImageProps['onLoadStart'];\n  /**\n   * Invoked on download progress.\n   */\n  onProgress?: ImageProps['onProgress'];\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * export default MyComponent\n * ```\n */\nconst AvatarImage = ({\n  size = defaultSize,\n  source,\n  style,\n  onError,\n  onLayout,\n  onLoad,\n  onLoadEnd,\n  onLoadStart,\n  onProgress,\n  theme,\n  ...rest\n}: Props) => {\n  const { colors } = theme;\n\n  const { backgroundColor = colors.primary } = StyleSheet.flatten(style) || {};\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        style,\n      ]}\n      {...rest}\n    >\n      {typeof source === 'function' && source({ size })}\n      {typeof source !== 'function' && (\n        <Image\n          source={source}\n          style={{ width: size, height: size, borderRadius: size / 2 }}\n          onError={onError}\n          onLayout={onLayout}\n          onLoad={onLoad}\n          onLoadEnd={onLoadEnd}\n          onLoadStart={onLoadStart}\n          onProgress={onProgress}\n        />\n      )}\n    </View>\n  );\n};\n\nAvatarImage.displayName = 'Avatar.Image';\n\nexport default withTheme(AvatarImage);\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAUA,SAASC,SAAT;AAEA,IAAMC,WAAW,GAAG,EAApB;AAoEA,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAGC,IAAA,EAYP;EAAA,IAAAC,SAAA,GAAAD,IAAA,CAXXE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAGH,WADY,GAAAG,SAAA;IAEnBE,MAFmB,GAYRH,IAAA,CAVXG,MAFmB;IAGnBC,KAHmB,GAYRJ,IAAA,CATXI,KAHmB;IAInBC,OAJmB,GAYRL,IAAA,CARXK,OAJmB;IAKnBC,QALmB,GAYRN,IAAA,CAPXM,QALmB;IAMnBC,MANmB,GAYRP,IAAA,CANXO,MANmB;IAOnBC,SAPmB,GAYRR,IAAA,CALXQ,SAPmB;IAQnBC,WARmB,GAYRT,IAAA,CAJXS,WARmB;IASnBC,UATmB,GAYRV,IAAA,CAHXU,UATmB;IAUnBC,KAVmB,GAYRX,IAAA,CAFXW,KAVmB;IAWhBC,IAAA,GAAAC,wBAAA,CACQb,IAAA,EAAAc,SAAA;EACX,IAAQC,MAAA,GAAWJ,KAAnB,CAAQI,MAAA;EAER,IAAAC,KAAA,GAA6CrB,UAAU,CAACsB,OAAX,CAAmBb,KAAnB,KAA6B,EAA1E;IAAAc,qBAAA,GAAAF,KAAA,CAAQG,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAGH,MAAM,CAACK,OAAA,GAAAF,qBAAA;EAEjC,OACEzB,KAAA,CAAA4B,aAAA,CAACzB,IAAD,EAAA0B,QAAA;IACElB,KAAK,EAAE,CACL;MACEmB,KAAK,EAAErB,IADT;MAEEsB,MAAM,EAAEtB,IAFV;MAGEuB,YAAY,EAAEvB,IAAI,GAAG,CAHvB;MAIEiB,eAAA,EAAAA;IAJF,CADK,EAOLf,KAPK;EADT,GAUMQ,IAVN,GAYG,OAAOT,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAAC;IAAED,IAAA,EAAAA;EAAF,CAAD,CAZzC,EAaG,OAAOC,MAAP,KAAkB,UAAlB,IACCV,KAAA,CAAA4B,aAAA,CAAC3B,KAAD;IACES,MAAM,EAAEA,MADV;IAEEC,KAAK,EAAE;MAAEmB,KAAK,EAAErB,IAAT;MAAesB,MAAM,EAAEtB,IAAvB;MAA6BuB,YAAY,EAAEvB,IAAI,GAAG;IAAlD,CAFT;IAGEG,OAAO,EAAEA,OAHX;IAIEC,QAAQ,EAAEA,QAJZ;IAKEC,MAAM,EAAEA,MALV;IAMEC,SAAS,EAAEA,SANb;IAOEC,WAAW,EAAEA,WAPf;IAQEC,UAAU,EAAEA;EARd,EAdJ,CADF;AA4BD,CA7CD;AA+CAX,WAAW,CAAC2B,WAAZ,GAA0B,cAA1B;AAEA,eAAe7B,SAAS,CAACE,WAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}