{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport color from 'color';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\nvar DataTableHeader = function DataTableHeader(_ref) {\n  var children = _ref.children,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.header, {\n      borderBottomColor: borderBottomColor\n    }, style]\n  }), children);\n};\nDataTableHeader.displayName = 'DataTable.Header';\nvar styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2\n  }\n});\nexport default withTheme(DataTableHeader);\nexport { DataTableHeader };","map":{"version":3,"sources":["C:\\Users\\ellen\\OneDrive\\Documents\\backup-folder-1\\CDreams\\behavior-dev-team\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\DataTable\\DataTableHeader.tsx"],"names":["React","color","black","white","withTheme","DataTableHeader","children","style","theme","rest","borderBottomColor","dark","alpha","rgb","string","styles","header","displayName","create","flexDirection","height","paddingHorizontal","borderBottomWidth","StyleSheet","hairlineWidth"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAAA,OAAA,UAAA;AAAA,OAAA,IAAA;AAEA,SAASC,KAAT,EAAgBC,KAAhB;AACA,SAASC,SAAT;AA+CA,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAG,IAAA,EAAgD;EAA/C,IAAEC,QAAF,GAA+C,IAAA,CAA7CA,QAAF;IAAYC,KAAZ,GAA+C,IAAA,CAAnCA,KAAZ;IAAmBC,KAAnB,GAA+C,IAAA,CAA5BA,KAAnB;IAA6BC,IAAAA,GAAAA,wBAAAA,CAAkB,IAAA,EAAA,SAAA;EACtE,IAAMC,iBAAiB,GAAGT,KAAK,CAACO,KAAK,CAACG,IAANH,GAAaL,KAAbK,GAAqBN,KAAtB,CAALD,CACvBW,KADuBX,CACjB,IADiBA,CAAAA,CAEvBY,GAFuBZ,CAAAA,CAAAA,CAGvBa,MAHuBb,CAAAA,CAA1B;EAKA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAUQ,IAAV,EAAA;IAAgB,KAAK,EAAE,CAACM,MAAM,CAACC,MAAR,EAAgB;MAAEN,iBAAAA,EAAAA;IAAF,CAAhB,EAAuCH,KAAvC;EAAvB,CAAA,CAAA,EACGD,QADH,CADF;AAKD,CAXD;AAaAD,eAAe,CAACY,WAAhBZ,GAA8B,kBAA9BA;AAEA,IAAMU,MAAM,GAAG,UAAU,CAACG,MAAX,CAAkB;EAC/BF,MAAM,EAAE;IACNG,aAAa,EAAE,KADT;IAENC,MAAM,EAAE,EAFF;IAGNC,iBAAiB,EAAE,EAHb;IAINC,iBAAiB,EAAEC,UAAU,CAACC,aAAXD,GAA2B;EAJxC;AADuB,CAAlB,CAAf;AASA,eAAenB,SAAS,CAACC,eAAD,CAAxB;AAGA,SAASA,eAAT","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableHeader = ({ children, style, theme, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n      {children}\n    </View>\n  );\n};\n\nDataTableHeader.displayName = 'DataTable.Header';\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default withTheme(DataTableHeader);\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}