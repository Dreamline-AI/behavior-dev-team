{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"type\", \"visible\", \"theme\", \"onLayout\", \"padding\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport color from 'color';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AnimatedText from \"./Typography/AnimatedText\";\nimport { withTheme } from \"../core/theming\";\nvar HelperText = function HelperText(_ref) {\n  var style = _ref.style,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'info' : _ref$type,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    theme = _ref.theme,\n    onLayout = _ref.onLayout,\n    _ref$padding = _ref.padding,\n    padding = _ref$padding === void 0 ? 'normal' : _ref$padding,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    shown = _React$useRef.current;\n  var _React$useRef2 = React.useRef(0),\n    textHeight = _React$useRef2.current;\n  var scale = theme.animation.scale;\n  var _rest$maxFontSizeMult = rest.maxFontSizeMultiplier,\n    maxFontSizeMultiplier = _rest$maxFontSizeMult === void 0 ? 1.5 : _rest$maxFontSizeMult;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, shown]);\n  var handleTextLayout = function handleTextLayout(e) {\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n  var colors = theme.colors,\n    dark = theme.dark;\n  var textColor = type === 'error' ? colors.error : color(colors.text).alpha(dark ? 0.7 : 0.54).rgb().string();\n  return React.createElement(AnimatedText, _extends({\n    onLayout: handleTextLayout,\n    style: [styles.text, padding !== 'none' ? styles.padding : {}, {\n      color: textColor,\n      opacity: shown,\n      transform: visible && type === 'error' ? [{\n        translateY: shown.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-textHeight / 2, 0]\n        })\n      }] : []\n    }, style],\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, rest), rest.children);\n};\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4\n  },\n  padding: {\n    paddingHorizontal: 12\n  }\n});\nexport default withTheme(HelperText);","map":{"version":3,"names":["React","color","Animated","StyleSheet","AnimatedText","withTheme","HelperText","_ref","style","_ref$type","type","_ref$visible","visible","theme","onLayout","_ref$padding","padding","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","shown","current","_React$useRef2","textHeight","scale","animation","_rest$maxFontSizeMult","maxFontSizeMultiplier","useEffect","timing","toValue","duration","useNativeDriver","start","handleTextLayout","e","nativeEvent","layout","height","colors","dark","textColor","error","text","alpha","rgb","string","createElement","_extends","styles","opacity","transform","translateY","interpolate","inputRange","outputRange","children","create","fontSize","paddingVertical","paddingHorizontal"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/node_modules/react-native-paper/lib/module/components/HelperText.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  Animated,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport AnimatedText from './Typography/AnimatedText';\nimport { withTheme } from '../core/theming';\nimport type { $Omit } from '../types';\n\nexport type Props = $Omit<\n  $Omit<React.ComponentPropsWithRef<typeof AnimatedText>, 'padding'>,\n  'type'\n> & {\n  /**\n   * Type of the helper text.\n   */\n  type: 'error' | 'info';\n  /**\n   * Whether to display the helper text.\n   */\n  visible?: boolean;\n  /**\n   * Whether to apply padding to the helper text.\n   */\n  padding?: 'none' | 'normal';\n  /**\n   * Text content of the HelperText.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\n/**\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/helper-text.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { HelperText, TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *    const onChangeText = text => setText(text);\n *\n *   const hasErrors = () => {\n *     return !text.includes('@');\n *   };\n *\n *  return (\n *     <View>\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n *       <HelperText type=\"error\" visible={hasErrors()}>\n *         Email address is invalid!\n *       </HelperText>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst HelperText = ({\n  style,\n  type = 'info',\n  visible = true,\n  theme,\n  onLayout,\n  padding = 'normal',\n  ...rest\n}: Props) => {\n  const { current: shown } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n\n  let { current: textHeight } = React.useRef<number>(0);\n\n  const { scale } = theme.animation;\n\n  const { maxFontSizeMultiplier = 1.5 } = rest;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show text\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      // hide text\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, shown]);\n\n  const handleTextLayout = (e: LayoutChangeEvent) => {\n    onLayout?.(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n\n  const { colors, dark } = theme;\n\n  const textColor =\n    type === 'error'\n      ? colors.error\n      : color(colors.text)\n          .alpha(dark ? 0.7 : 0.54)\n          .rgb()\n          .string();\n\n  return (\n    <AnimatedText\n      onLayout={handleTextLayout}\n      style={[\n        styles.text,\n        padding !== 'none' ? styles.padding : {},\n        {\n          color: textColor,\n          opacity: shown,\n          transform:\n            visible && type === 'error'\n              ? [\n                  {\n                    translateY: shown.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [-textHeight / 2, 0],\n                    }),\n                  },\n                ]\n              : [],\n        },\n        style,\n      ]}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      {...rest}\n    >\n      {rest.children}\n    </AnimatedText>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4,\n  },\n  padding: {\n    paddingHorizontal: 12,\n  },\n});\n\nexport default withTheme(HelperText);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}