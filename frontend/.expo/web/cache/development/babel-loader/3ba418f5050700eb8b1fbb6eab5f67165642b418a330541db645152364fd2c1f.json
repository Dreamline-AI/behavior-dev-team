{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"small\", \"icon\", \"label\", \"accessibilityLabel\", \"accessibilityState\", \"animated\", \"color\", \"disabled\", \"onPress\", \"onLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"loading\", \"testID\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"../ActivityIndicator\";\nimport Surface from \"../Surface\";\nimport CrossFadeIcon from \"../CrossFadeIcon\";\nimport Icon from \"../Icon\";\nimport Text from \"../Typography/Text\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\nimport getContrastingColor from \"../../utils/getContrastingColor\";\ngetContrastingColor;\nvar FAB = function FAB(_ref) {\n  var small = _ref.small,\n    icon = _ref.icon,\n    label = _ref.label,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n    accessibilityState = _ref.accessibilityState,\n    _ref$animated = _ref.animated,\n    animated = _ref$animated === void 0 ? true : _ref$animated,\n    customColor = _ref.color,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    theme = _ref.theme,\n    style = _ref.style,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    _ref$uppercase = _ref.uppercase,\n    uppercase = _ref$uppercase === void 0 ? true : _ref$uppercase,\n    loading = _ref.loading,\n    testID = _ref.testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    visibility = _React$useRef.current;\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var IconComponent = animated ? CrossFadeIcon : Icon;\n  var disabledColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? disabled ? disabledColor : theme.colors.accent : _ref2$backgroundColor;\n  var foregroundColor;\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n  } else {\n    foregroundColor = getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  }\n  var rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n  return React.createElement(Surface, _extends({}, rest, {\n    style: [{\n      backgroundColor: backgroundColor,\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }]\n    }, styles.container, disabled && styles.disabled, style],\n    pointerEvents: visible ? 'auto' : 'none'\n  }), React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: _objectSpread(_objectSpread({}, accessibilityState), {}, {\n      disabled: disabled\n    }),\n    style: styles.touchable,\n    testID: testID\n  }, React.createElement(View, {\n    style: [styles.content, label ? styles.extended : small ? styles.small : styles.standard],\n    pointerEvents: \"none\"\n  }, icon && loading !== true ? React.createElement(IconComponent, {\n    source: icon,\n    size: 24,\n    color: foregroundColor\n  }) : null, loading ? React.createElement(ActivityIndicator, {\n    size: 18,\n    color: foregroundColor\n  }) : null, label ? React.createElement(Text, {\n    selectable: false,\n    style: [styles.label, uppercase && styles.uppercaseLabel, _objectSpread({\n      color: foregroundColor\n    }, theme.fonts.medium)]\n  }, label) : null)));\n};\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6\n  },\n  touchable: {\n    borderRadius: 28\n  },\n  standard: {\n    height: 56,\n    width: 56\n  },\n  small: {\n    height: 40,\n    width: 40\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  disabled: {\n    elevation: 0\n  }\n});\nexport default withTheme(FAB);\nvar FABWithTheme = withTheme(FAB);\nexport { FABWithTheme as FAB };","map":{"version":3,"sources":["C:\\Users\\ellen\\OneDrive\\Documents\\backup-folder-1\\CDreams\\behavior-dev-team\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\FAB\\FAB.tsx"],"names":["color","React","ActivityIndicator","Surface","CrossFadeIcon","Icon","Text","TouchableRipple","black","white","withTheme","getContrastingColor","FAB","small","icon","label","accessibilityLabel","accessibilityState","animated","customColor","disabled","onPress","onLongPress","theme","style","visible","uppercase","loading","testID","rest","current","visibility","useRef","Animated","Value","scale","animation","useEffect","timing","toValue","duration","useNativeDriver","start","IconComponent","disabledColor","dark","alpha","rgb","string","backgroundColor","colors","accent","StyleSheet","flatten","foregroundColor","rippleColor","opacity","transform","styles","container","touchable","content","extended","standard","uppercaseLabel","fonts","medium","create","borderRadius","elevation","height","width","paddingHorizontal","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform","FABWithTheme"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  AccessibilityState,\n} from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport type { $RemoveChildren } from '../../types';\n\ngetContrastingColor;\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = ({\n  small,\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  animated = true,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  loading,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const IconComponent = animated ? CrossFadeIcon : Icon;\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n    (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  let foregroundColor;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = getContrastingColor(\n      backgroundColor,\n      white,\n      'rgba(0, 0, 0, .54)'\n    );\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            backgroundColor,\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        rippleColor={rippleColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ ...accessibilityState, disabled }}\n        style={styles.touchable}\n        testID={testID}\n      >\n        <View\n          style={[\n            styles.content,\n            label ? styles.extended : small ? styles.small : styles.standard,\n          ]}\n          pointerEvents=\"none\"\n        >\n          {icon && loading !== true ? (\n            <IconComponent source={icon} size={24} color={foregroundColor} />\n          ) : null}\n          {loading ? (\n            <ActivityIndicator size={18} color={foregroundColor} />\n          ) : null}\n          {label ? (\n            <Text\n              selectable={false}\n              style={[\n                styles.label,\n                uppercase && styles.uppercaseLabel,\n                { color: foregroundColor, ...theme.fonts.medium },\n              ]}\n            >\n              {label}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n\n// @component-docs ignore-next-line\nconst FABWithTheme = withTheme(FAB);\n// @component-docs ignore-next-line\nexport { FABWithTheme as FAB };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}