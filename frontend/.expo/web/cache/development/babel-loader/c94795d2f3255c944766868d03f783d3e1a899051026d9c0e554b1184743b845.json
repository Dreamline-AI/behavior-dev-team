{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getRecoveryPropsToSave } from \"./ErroRecoveryStore\";\nimport ExpoErrorRecovery from \"./ExpoErrorRecovery\";\nif (Platform.OS !== 'web') {\n  var globalHandler = ErrorUtils.getGlobalHandler();\n  ErrorUtils.setGlobalHandler(function _callee(error, isFatal) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!ExpoErrorRecovery.saveRecoveryProps) {\n            _context.next = 3;\n            break;\n          }\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave()));\n        case 3:\n          globalHandler(error, isFatal);\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  });\n} else if (Platform.OS === 'web' && canUseDOM) {\n  window.addEventListener('error', function () {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}","map":{"version":3,"sources":["C:\\Users\\ellen\\OneDrive\\Documents\\backup-folder-1\\CDreams\\behavior-dev-team\\frontend\\node_modules\\expo-error-recovery\\src\\ErrorRecovery.fx.ts"],"names":[],"mappings":";AAAA,SAAS,SAAS,QAAQ,+BAA+B;AAAC,OAAA,QAAA;AAG1D,SAAS,sBAAsB;AAC/B,OAAO,iBAAiB;AAExB,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;EACzB,IAAM,aAAa,GAAG,UAAU,CAAC,gBAAgB,CAAA,CAAE;EAGnD,UAAU,CAAC,gBAAgB,CAAC,SAAA,QAAO,KAAK,EAAE,OAAO;IAAA,OAAA,mBAAA,CAAA,KAAA,UAAA,SAAA,QAAA;MAAA,kBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;QAAA;UAAA,KAC3C,iBAAiB,CAAC,iBAAiB;YAAA,QAAA,CAAA,IAAA;YAAA;UAAA;UAAA,QAAA,CAAA,IAAA;UAAA,OAAA,mBAAA,CAAA,KAAA,CAC/B,iBAAiB,CAAC,iBAAiB,CAAC,sBAAsB,CAAA,CAAE,CAAC;QAAA;UAErE,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC;QAAC;QAAA;UAAA,OAAA,QAAA,CAAA,IAAA;MAAA;IAAA,qBAAA,OAAA;EAAA,CAC/B,CAAC;CACH,MAAM,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,SAAS,EAAE;EAC7C,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAK;IACpC,iBAAiB,CAAC,iBAAiB,CAAC,sBAAsB,CAAA,CAAE,CAAC;EAC/D,CAAC,CAAC;AACH","sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Platform } from 'react-native';\n\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else if (Platform.OS === 'web' && canUseDOM) {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}