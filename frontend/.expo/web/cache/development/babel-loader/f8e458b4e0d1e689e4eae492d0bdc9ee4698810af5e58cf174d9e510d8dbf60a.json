{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"size\", \"style\", \"theme\"],\n  _excluded2 = [\"backgroundColor\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"../Icon\";\nimport { withTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/colors\";\nimport getContrastingColor from \"../../utils/getContrastingColor\";\nvar defaultSize = 64;\nvar Avatar = function Avatar(_ref) {\n  var _rest$color;\n  var icon = _ref.icon,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? theme.colors.primary : _ref2$backgroundColor,\n    restStyle = _objectWithoutProperties(_ref2, _excluded2);\n  var textColor = (_rest$color = rest.color) !== null && _rest$color !== void 0 ? _rest$color : getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, styles.container, restStyle]\n  }, rest), React.createElement(Icon, {\n    source: icon,\n    color: textColor,\n    size: size * 0.6\n  }));\n};\nAvatar.displayName = 'Avatar.Icon';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default withTheme(Avatar);","map":{"version":3,"names":["React","View","StyleSheet","Icon","withTheme","white","getContrastingColor","defaultSize","Avatar","_ref","_rest$color","icon","_ref$size","size","style","theme","rest","_objectWithoutProperties","_excluded","_ref2","flatten","_ref2$backgroundColor","backgroundColor","colors","primary","restStyle","_excluded2","textColor","color","createElement","_extends","width","height","borderRadius","styles","container","source","displayName","create","justifyContent","alignItems"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/node_modules/react-native-paper/lib/module/components/Avatar/AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Icon, { IconSource } from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(Avatar);\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEA,OAAOC,IAAP;AACA,SAASC,SAAT;AACA,SAASC,KAAT;AACA,OAAOC,mBAAP;AAEA,IAAMC,WAAW,GAAG,EAApB;AAyCA,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAGC,IAAA,EAAgE;EAAA,IAAAC,WAAA;EAAA,IAA7DC,IAAF,GAA+DF,IAAA,CAA7DE,IAAF;IAAAC,SAAA,GAA+DH,IAAA,CAAvDI,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAGL,WAAf,GAAAK,SAAA;IAA4BE,KAA5B,GAA+DL,IAAA,CAAnCK,KAA5B;IAAmCC,KAAnC,GAA+DN,IAAA,CAA5BM,KAAnC;IAA6CC,IAAA,GAAAC,wBAAA,CAAkBR,IAAA,EAAAS,SAAA;EAC7E,IAAAC,KAAA,GACEjB,UAAU,CAACkB,OAAX,CAAmBN,KAAnB,KAA6B,EAD/B;IAAAO,qBAAA,GAAAF,KAAA,CAAQG,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAGN,KAAK,CAACQ,MAAN,CAAaC,OAAjC,GAAAH,qBAAA;IAA6CI,SAAA,GAAAR,wBAAA,CAAAE,KAAA,EAAAO,UAAA;EAEnD,IAAMC,SAAS,IAAAjB,WAAA,GACbM,IAAI,CAACY,KADQ,cAAAlB,WAAA,cAAAA,WAAA,GAEbJ,mBAAmB,CAACgB,eAAD,EAAkBjB,KAAlB,EAAyB,oBAAzB,CAFrB;EAIA,OACEL,KAAA,CAAA6B,aAAA,CAAC5B,IAAD,EAAA6B,QAAA;IACEhB,KAAK,EAAE,CACL;MACEiB,KAAK,EAAElB,IADT;MAEEmB,MAAM,EAAEnB,IAFV;MAGEoB,YAAY,EAAEpB,IAAI,GAAG,CAHvB;MAIES,eAAA,EAAAA;IAJF,CADK,EAOLY,MAAM,CAACC,SAPF,EAQLV,SARK;EADT,GAWMT,IAXN,GAaEhB,KAAA,CAAA6B,aAAA,CAAC1B,IAAD;IAAMiC,MAAM,EAAEzB,IAAd;IAAoBiB,KAAK,EAAED,SAA3B;IAAsCd,IAAI,EAAEA,IAAI,GAAG;EAAnD,EAbF,CADF;AAiBD,CAxBD;AA0BAL,MAAM,CAAC6B,WAAP,GAAqB,aAArB;AAEA,IAAMH,MAAM,GAAGhC,UAAU,CAACoC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,cAAc,EAAE,QADP;IAETC,UAAU,EAAE;EAFH;AADoB,CAAlB,CAAf;AAOA,eAAepC,SAAS,CAACI,MAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}