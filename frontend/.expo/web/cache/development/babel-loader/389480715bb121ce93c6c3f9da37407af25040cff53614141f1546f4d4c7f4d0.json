{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport { NavigationHelpersContext, getPathFromState } from '@react-navigation/core';\nimport LinkingContext from \"./LinkingContext\";\nvar getRootStateForNavigate = function getRootStateForNavigate(navigation, state) {\n  var parent = navigation.getParent();\n  if (parent) {\n    var parentState = parent.getState();\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [_objectSpread(_objectSpread({}, parentState.routes[parentState.index]), {}, {\n        state: state\n      })]\n    });\n  }\n  return state;\n};\nexport default function useLinkBuilder() {\n  var navigation = React.useContext(NavigationHelpersContext);\n  var linking = React.useContext(LinkingContext);\n  var buildLink = React.useCallback(function (name, params) {\n    var options = linking.options;\n    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n    var state = navigation ? getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    }) : {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    };\n    var path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : getPathFromState(state, options === null || options === void 0 ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  return buildLink;\n}","map":{"version":3,"sources":["C:\\Users\\ellen\\OneDrive\\Documents\\backup-folder-1\\CDreams\\behavior-dev-team\\frontend\\node_modules\\@react-navigation\\native\\lib\\module\\useLinkBuilder.tsx"],"names":["React","NavigationHelpersContext","getPathFromState","LinkingContext","getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","useLinkBuilder","useContext","linking","buildLink","useCallback","name","params","options","enabled","undefined","path","config"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAEEC,wBAFF,EAKEC,gBALF,QAMO,wBANP;AAOA,OAAOC,cAAP;AAWA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuB,CAC3BC,UAD8B,EAE9BC,KAF8B,EAGb;EACjB,IAAMC,MAAM,GAAGF,UAAU,CAACG,SAAXH,CAAAA,CAAf;EAEA,IAAIE,MAAJ,EAAY;IACV,IAAME,WAAW,GAAGF,MAAM,CAACG,QAAPH,CAAAA,CAApB;IAEA,OAAOH,uBAAuB,CAACG,MAAD,EAAS;MACrCI,KAAK,EAAE,CAD8B;MAErCC,MAAM,EAAE,CAAA,aAAA,CAAA,aAAA,KAEDH,WAAW,CAACG,MAAZH,CAAmBA,WAAW,CAACE,KAA/BF,CADL;QAEEH,KAAK,EAAEA;MAAAA;IAL0B,CAAT,CAA9B;EASD;EAED,OAAOA,KAAP;AACD,CArBD;AA2BA,eAAe,SAASO,cAAT,CAAA,EAA0B;EACvC,IAAMR,UAAU,GAAGL,KAAK,CAACc,UAANd,CAAiBC,wBAAjBD,CAAnB;EACA,IAAMe,OAAO,GAAGf,KAAK,CAACc,UAANd,CAAiBG,cAAjBH,CAAhB;EAEA,IAAMgB,SAAS,GAAG,KAAK,CAACC,WAAN,CAChB,UAACC,IAAD,EAAeC,MAAf,EAAmC;IACjC,IAAQC,OAAAA,GAAYL,OAApB,CAAQK,OAAAA;IAER,IAAI,CAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAA,KAAA,CAAA,GAAA,OAAO,CAAEC,OAAT,MAAqB,KAAzB,EAAgC;MAC9B,OAAOC,SAAP;IACD;IAED,IAAMhB,KAAK,GAAGD,UAAU,GACpBD,uBAAuB,CAACC,UAAD,EAAa;MAClCM,KAAK,EAAE,CAD2B;MAElCC,MAAM,EAAE,CAAC;QAAEM,IAAF,EAAEA,IAAF;QAAQC,MAAAA,EAAAA;MAAR,CAAD;IAF0B,CAAb,CADH,GAOpB;MACER,KAAK,EAAE,CADT;MAEEC,MAAM,EAAE,CAAC;QAAEM,IAAF,EAAEA,IAAF;QAAQC,MAAAA,EAAAA;MAAR,CAAD;IAFV,CAPJ;IAYA,IAAMI,IAAI,GAAGH,OAAO,KAAA,IAAPA,IAAAA,OAAO,KAAA,KAAA,CAAPA,IAAAA,OAAO,CAAElB,gBAATkB,GACTA,OAAO,CAAClB,gBAARkB,CAAyBd,KAAzBc,EAAgCA,OAAhCA,KAAAA,IAAAA,IAAgCA,OAAhCA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAgCA,OAAO,CAAEI,MAAzCJ,CADSA,GAETlB,gBAAgB,CAACI,KAAD,EAAQc,OAAR,KAAA,IAAA,IAAQA,OAAR,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAQA,OAAO,CAAEI,MAAjB,CAFpB;IAIA,OAAOD,IAAP;EACD,CAzBe,EA0BhB,CAACR,OAAD,EAAUV,UAAV,CA1BgB,CAAlB;EA6BA,OAAOW,SAAP;AACD","sourcesContent":["import * as React from 'react';\nimport {\n  NavigationHelpers,\n  NavigationHelpersContext,\n  NavigationProp,\n  ParamListBase,\n  getPathFromState,\n} from '@react-navigation/core';\nimport LinkingContext from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildLink = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  return buildLink;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}