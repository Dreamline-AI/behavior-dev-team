{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"status\", \"theme\", \"disabled\", \"onPress\", \"testID\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../../core/theming\";\nvar ANIMATION_DURATION = 100;\nvar CheckboxAndroid = function CheckboxAndroid(_ref) {\n  var status = _ref.status,\n    theme = _ref.theme,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    testID = _ref.testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(1)),\n    scaleAnim = _React$useRef.current;\n  var isFirstRendering = React.useRef(true);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n    var checked = status === 'checked';\n    Animated.sequence([Animated.timing(scaleAnim, {\n      toValue: 0.85,\n      duration: checked ? ANIMATION_DURATION * scale : 0,\n      useNativeDriver: false\n    }), Animated.timing(scaleAnim, {\n      toValue: 1,\n      duration: checked ? ANIMATION_DURATION * scale : ANIMATION_DURATION * scale * 1.75,\n      useNativeDriver: false\n    })]).start();\n  }, [status, scaleAnim, scale]);\n  var checked = status === 'checked';\n  var indeterminate = status === 'indeterminate';\n  var checkedColor = rest.color || theme.colors.accent;\n  var uncheckedColor = rest.uncheckedColor || color(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n  var rippleColor, checkboxColor;\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n    checkboxColor = theme.colors.disabled;\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n    checkboxColor = checked ? checkedColor : uncheckedColor;\n  }\n  var borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0]\n  });\n  var icon = indeterminate ? 'minus-box' : checked ? 'checkbox-marked' : 'checkbox-blank-outline';\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onPress,\n    disabled: disabled,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      disabled: disabled,\n      checked: checked\n    },\n    accessibilityLiveRegion: \"polite\",\n    style: styles.container,\n    testID: testID\n  }), React.createElement(Animated.View, {\n    style: {\n      transform: [{\n        scale: scaleAnim\n      }]\n    }\n  }, React.createElement(MaterialCommunityIcon, {\n    allowFontScaling: false,\n    name: icon,\n    size: 24,\n    color: checkboxColor,\n    direction: \"ltr\"\n  }), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.fillContainer]\n  }, React.createElement(Animated.View, {\n    style: [styles.fill, {\n      borderColor: checkboxColor\n    }, {\n      borderWidth: borderWidth\n    }]\n  }))));\n};\nCheckboxAndroid.displayName = 'Checkbox.Android';\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fill: {\n    height: 14,\n    width: 14\n  }\n});\nexport default withTheme(CheckboxAndroid);\nvar CheckboxAndroidWithTheme = withTheme(CheckboxAndroid);\nexport { CheckboxAndroidWithTheme as CheckboxAndroid };","map":{"version":3,"names":["React","Animated","View","StyleSheet","color","MaterialCommunityIcon","TouchableRipple","withTheme","ANIMATION_DURATION","CheckboxAndroid","_ref","status","theme","disabled","onPress","testID","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","scaleAnim","current","isFirstRendering","scale","animation","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","checkedColor","colors","accent","uncheckedColor","text","alpha","dark","rgb","string","rippleColor","checkboxColor","fade","borderWidth","interpolate","inputRange","outputRange","icon","createElement","_extends","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","transform","allowFontScaling","name","size","direction","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","CheckboxAndroidWithTheme"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/node_modules/react-native-paper/lib/module/components/Checkbox/CheckboxAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxAndroid = ({\n  status,\n  theme,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n  const checkedColor = rest.color || theme.colors.accent;\n  const uncheckedColor =\n    rest.uncheckedColor ||\n    color(theme.colors.text)\n      .alpha(theme.dark ? 0.7 : 0.54)\n      .rgb()\n      .string();\n\n  let rippleColor, checkboxColor;\n\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n    checkboxColor = theme.colors.disabled;\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n    checkboxColor = checked ? checkedColor : uncheckedColor;\n  }\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n      accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n      accessibilityComponentType=\"button\"\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={checkboxColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: checkboxColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default withTheme(CheckboxAndroid);\n\n// @component-docs ignore-next-line\nconst CheckboxAndroidWithTheme = withTheme(CheckboxAndroid);\n// @component-docs ignore-next-line\nexport { CheckboxAndroidWithTheme as CheckboxAndroid };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}