{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/screens/QuizScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport data from \"../helpers/QuizData\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport Background from \"../components/Background\";\nimport AnswerCard from \"../components/AnswerCard\";\nvar QuizScreen = function QuizScreen(_ref) {\n  var _allQuestions$current, _allQuestions$current2, _allQuestions$current3;\n  var navigation = _ref.navigation;\n  var allQuestions = data;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestionIndex = _useState2[0],\n    setCurrentQuestionIndex = _useState2[1];\n  var _useState3 = useState(new Animated.Value(1)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    progress = _useState4[0],\n    setProgress = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isOptionsDisabled = _useState6[0],\n    setIsOptionsDisabled = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isCorrectOptionSelected = _useState8[0],\n    setIsCorrectOptionSelected = _useState8[1];\n  var validateAnswer = function validateAnswer(selectedOption) {\n    if (!isOptionsDisabled) {\n      var correctOption = allQuestions[currentQuestionIndex][\"correct_option\"];\n      setIsOptionsDisabled(true);\n      if (selectedOption === correctOption) {\n        setIsCorrectOptionSelected(true);\n        Animated.timing(progress, {\n          toValue: currentQuestionIndex + 2,\n          duration: 2000,\n          useNativeDriver: false\n        }).start();\n      }\n    }\n  };\n  var handleNext = function handleNext() {\n    if (currentQuestionIndex === allQuestions.length - 1) {\n      navigation.navigate(\"Result\", {\n        score: score\n      });\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setIsOptionsDisabled(false);\n      setIsCorrectOptionSelected(false);\n    }\n  };\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(ProgressBar, {\n    progress: progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), !isCorrectOptionSelected ? React.createElement(AnswerCard, {\n    question: (_allQuestions$current = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current.question,\n    options: (_allQuestions$current2 = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current2.options,\n    correct_option: (_allQuestions$current3 = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current3.correct_option,\n    validateAnswer: validateAnswer,\n    isOptionsDisabled: isOptionsDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }) : React.createElement(Animated.View, {\n    style: {\n      position: \"absolute\",\n      top: 300,\n      left: 0,\n      right: 0,\n      alignItems: \"center\",\n      opacity: fadeAnim\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.correctAnswer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Correct!\"), React.createElement(TouchableOpacity, {\n    style: [styles.btnNext, {\n      marginTop: 20\n    }],\n    onPress: handleNext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.btnNextText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"NEXT\"))));\n};\nvar styles = StyleSheet.create({\n  correctAnswer: {\n    color: 'green',\n    marginTop: 10\n  },\n  btnNext: {\n    borderRadius: 10,\n    paddingVertical: 13,\n    paddingHorizontal: 20,\n    backgroundColor: \"#ffffff\"\n  },\n  btnNextText: {\n    color: \"#333\",\n    fontSize: 17,\n    letterSpacing: 1.1\n  }\n});\nexport default QuizScreen;","map":{"version":3,"names":["React","useState","View","Text","Animated","StyleSheet","TouchableOpacity","data","ProgressBar","Background","AnswerCard","QuizScreen","_ref","_allQuestions$current","_allQuestions$current2","_allQuestions$current3","navigation","allQuestions","_useState","_useState2","_slicedToArray","currentQuestionIndex","setCurrentQuestionIndex","_useState3","Value","_useState4","progress","setProgress","_useState5","_useState6","isOptionsDisabled","setIsOptionsDisabled","_useState7","_useState8","isCorrectOptionSelected","setIsCorrectOptionSelected","validateAnswer","selectedOption","correctOption","timing","toValue","duration","useNativeDriver","start","handleNext","length","navigate","score","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","question","options","correct_option","style","position","top","left","right","alignItems","opacity","fadeAnim","styles","correctAnswer","btnNext","marginTop","onPress","btnNextText","create","color","borderRadius","paddingVertical","paddingHorizontal","backgroundColor","fontSize","letterSpacing"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/screens/QuizScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, Animated, StyleSheet, TouchableOpacity } from \"react-native\";\nimport data from '../helpers/QuizData';\nimport ProgressBar from \"../components/ProgressBar\";\nimport Background from '../components/Background'\nimport AnswerCard from \"../components/AnswerCard\";\n\nconst QuizScreen = ({ navigation }) => {\n  const allQuestions = data;\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [progress, setProgress] = useState(new Animated.Value(1));\n  const [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\n  const [isCorrectOptionSelected, setIsCorrectOptionSelected] = useState(false);\n\n  const validateAnswer = (selectedOption) => {\n    if (!isOptionsDisabled) {\n      const correctOption = allQuestions[currentQuestionIndex][\"correct_option\"];\n      setIsOptionsDisabled(true);\n      if (selectedOption === correctOption) {\n        setIsCorrectOptionSelected(true);\n        // Animate the progress bar\n        Animated.timing(progress, {\n          toValue: currentQuestionIndex + 2,\n          duration: 2000,\n          useNativeDriver: false,\n        }).start();\n      }\n    }\n  };\n\n  const handleNext = () => {\n    if (currentQuestionIndex === allQuestions.length - 1) {\n      navigation.navigate(\"Result\", { score: score });\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setIsOptionsDisabled(false);\n      setIsCorrectOptionSelected(false);\n    }\n  };\n\n  return (\n    <Background>\n      <ProgressBar progress={progress} />\n      {!isCorrectOptionSelected ? (\n        <AnswerCard\n          question={allQuestions[currentQuestionIndex]?.question}\n          options={allQuestions[currentQuestionIndex]?.options}\n          correct_option={allQuestions[currentQuestionIndex]?.correct_option}\n          validateAnswer={validateAnswer}\n          isOptionsDisabled={isOptionsDisabled}\n        />\n      ) : (\n        <Animated.View\n          style={{\n            position: \"absolute\",\n            top: 300, // Adjust this value as per your design\n            left: 0,\n            right: 0,\n            alignItems: \"center\",\n            opacity: fadeAnim,\n          }}\n        >\n          <Text style={styles.correctAnswer}>Correct!</Text>\n          <TouchableOpacity\n            style={[styles.btnNext, { marginTop: 20 }]}\n            onPress={handleNext}\n          >\n            <Text style={styles.btnNextText}>NEXT</Text>\n          </TouchableOpacity>\n        </Animated.View>\n      )}\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  correctAnswer: {\n    color: 'green',\n    marginTop: 10,\n  },\n  btnNext: {\n    borderRadius: 10,\n    paddingVertical: 13,\n    paddingHorizontal: 20,\n    backgroundColor: \"#ffffff\",\n  },\n  btnNextText: {\n    color: \"#333\",\n    fontSize: 17,\n    letterSpacing: 1.1,\n  },\n});\n\nexport default QuizScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}