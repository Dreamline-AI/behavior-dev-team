{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/AnswerCard.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Questions from \"../helpers/Questions\";\nimport data from \"../helpers/QuizData\";\nimport { useRef } from 'react';\nvar AnswerCard = function AnswerCard(_ref) {\n  var question = _ref.question,\n    options = _ref.options,\n    correct_option = _ref.correct_option;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showOptions = _useState2[0],\n    setShowOptions = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedOption = _useState4[0],\n    setSelectedOption = _useState4[1];\n  var checkAnswer = function checkAnswer() {\n    if (selectedOption === correct_option) {\n      return React.createElement(Text, {\n        style: styles.correctAnswer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }\n      }, \"Correct!\");\n    } else {\n      return React.createElement(Text, {\n        style: styles.wrongAnswer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      }, \"Wrong! Correct answer is \", correct_option);\n    }\n  };\n  var animatedValue = useRef(new Animated.Value(0)).current;\n  var scaleAnimation = function scaleAnimation() {\n    Animated.timing(animatedValue, {\n      toValue: -100,\n      duration: 10000,\n      useNativeDriver: true\n    }).start();\n  };\n  useEffect(function () {\n    if (showOptions) {\n      scaleAnimation();\n    } else {\n      animatedValue.setValue(0);\n    }\n  }, [showOptions]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.question,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, question), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setSelectedOption(option);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, option)), \"))\", selectedOption && checkAnswer());\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 20\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10\n  },\n  option: {\n    backgroundColor: '#f4f4f4',\n    borderRadius: 6,\n    marginBottom: 10,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: '#808080',\n    height: 214,\n    width: '100%',\n    justifyContent: 'center'\n  },\n  optionText: {\n    fontSize: 24,\n    textAlign: 'center'\n  },\n  correctAnswer: {\n    color: 'green',\n    marginTop: 10\n  },\n  wrongAnswer: {\n    color: 'red',\n    marginTop: 10\n  }\n});\nexport default AnswerCard;","map":{"version":3,"names":["React","useEffect","useState","View","Text","TouchableOpacity","StyleSheet","Animated","Questions","data","useRef","AnswerCard","_ref","question","options","correct_option","_useState","_useState2","_slicedToArray","showOptions","setShowOptions","_useState3","_useState4","selectedOption","setSelectedOption","checkAnswer","createElement","style","styles","correctAnswer","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","wrongAnswer","animatedValue","Value","current","scaleAnimation","timing","toValue","duration","useNativeDriver","start","setValue","container","onPress","option","optionText","create","marginBottom","fontSize","fontWeight","backgroundColor","borderRadius","borderStyle","borderWidth","borderColor","height","width","justifyContent","textAlign","color","marginTop"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/AnswerCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Animated } from 'react-native'; // Import Animated\nimport Questions from '../helpers/Questions';\nimport data from '../helpers/QuizData';\nimport { useRef } from 'react';\n\nconst AnswerCard = ({ question, options, correct_option }) => {\n  const [showOptions, setShowOptions] = useState(true);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const checkAnswer = () => {\n    if (selectedOption === correct_option) {\n      return <Text style={styles.correctAnswer}>Correct!</Text>;\n    } else {\n      return <Text style={styles.wrongAnswer}>Wrong! Correct answer is {correct_option}</Text>;\n    }\n  };\n\n  const animatedValue = useRef(new Animated.Value(0)).current;\n\n  const scaleAnimation = () => {\n    Animated.timing(animatedValue, {\n      toValue: -100,\n      duration: 10000,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  useEffect(() => {\n    if (showOptions) {\n      scaleAnimation();\n    } else {\n      animatedValue.setValue(0);\n    }\n  }, [showOptions]);\n\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.question}>{question}</Text>\n      \n                <TouchableOpacity\n                  onPress={() => setSelectedOption(option)}\n                >\n                  <Text style={styles.optionText}>{option}</Text>\n                </TouchableOpacity>\n             \n            ))\n            {selectedOption && checkAnswer()}\n          </View>\n        )}\n     \n  \nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 20,\n  },\n\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10,\n    \n  },\n\n  option: {\n   \n    backgroundColor: '#f4f4f4',\n    borderRadius: 6,\n    marginBottom: 10,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: '#808080',\n    height: 214, // Fixed height\n    width: '100%',\n    justifyContent: 'center',\n  },\n  optionText: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  correctAnswer: {\n    color: 'green',\n    marginTop: 10,\n  },\n  wrongAnswer: {\n    color: 'red',\n    marginTop: 10,\n  },\n});\n\nexport default AnswerCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}