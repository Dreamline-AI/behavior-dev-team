{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/screens/QuizScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport data from \"../helpers/QuizData\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport Background from \"../components/Background\";\nimport AnswerCard from \"../components/AnswerCard\";\nvar QuizScreen = function QuizScreen(_ref) {\n  var _allQuestions$current, _allQuestions$current2, _allQuestions$current3;\n  var navigation = _ref.navigation;\n  var allQuestions = data;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestionIndex = _useState2[0],\n    setCurrentQuestionIndex = _useState2[1];\n  var _useState3 = useState(new Animated.Value(1)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    progress = _useState4[0],\n    setProgress = _useState4[1];\n  var handleNext = function handleNext() {\n    var nextQuestionIndex = currentQuestionIndex + 1;\n    var totalQuestions = allQuestions.length;\n    var nextProgress = nextQuestionIndex / totalQuestions * 100;\n    if (nextQuestionIndex < totalQuestions) {\n      setCurrentQuestionIndex(nextQuestionIndex);\n      Animated.timing(progress, {\n        toValue: nextProgress,\n        duration: 2000,\n        useNativeDriver: false\n      }).start();\n    } else {\n      navigation.navigate(\"Dashboard\");\n    }\n  };\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(ProgressBar, {\n    progress: progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.answerCardContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(AnswerCard, {\n    question: (_allQuestions$current = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current.question,\n    options: (_allQuestions$current2 = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current2.options,\n    correct_option: (_allQuestions$current3 = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current3.correct_option,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.btnNext, {\n      backgroundColor: \"#ffffff\"\n    }],\n    onPress: handleNext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.btnNextText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"NEXT\")));\n};\nvar styles = StyleSheet.create({\n  answerCardContainer: {\n    marginBottom: 20\n  },\n  btnNext: {\n    borderRadius: 10,\n    paddingVertical: 13,\n    paddingHorizontal: 20,\n    backgroundColor: \"#ffffff\",\n    position: \"absolute\",\n    bottom: 20,\n    right: 20\n  },\n  btnNextText: {\n    color: \"#333\",\n    fontSize: 17,\n    letterSpacing: 1.1\n  }\n});\nexport default QuizScreen;","map":{"version":3,"names":["React","useState","View","Text","Animated","StyleSheet","TouchableOpacity","data","ProgressBar","Background","AnswerCard","QuizScreen","_ref","_allQuestions$current","_allQuestions$current2","_allQuestions$current3","navigation","allQuestions","_useState","_useState2","_slicedToArray","currentQuestionIndex","setCurrentQuestionIndex","_useState3","Value","_useState4","progress","setProgress","handleNext","nextQuestionIndex","totalQuestions","length","nextProgress","timing","toValue","duration","useNativeDriver","start","navigate","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","answerCardContainer","question","options","correct_option","btnNext","backgroundColor","onPress","btnNextText","create","marginBottom","borderRadius","paddingVertical","paddingHorizontal","position","bottom","right","color","fontSize","letterSpacing"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/screens/QuizScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  Animated,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport data from \"../helpers/QuizData\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport Background from \"../components/Background\";\nimport AnswerCard from \"../components/AnswerCard\";\n\nconst QuizScreen = ({ navigation }) => {\n  const allQuestions = data;\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [progress, setProgress] = useState(new Animated.Value(1));\n\n\n  const handleNext = () => {\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    const totalQuestions = allQuestions.length;\n    const nextProgress = (nextQuestionIndex / totalQuestions) * 100;\n  \n    if (nextQuestionIndex < totalQuestions) {\n      setCurrentQuestionIndex(nextQuestionIndex);\n      Animated.timing(progress, {\n        toValue: nextProgress,\n        duration: 2000,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      navigation.navigate(\"Dashboard\");\n    }\n  };\n\n  return (\n    <Background>\n      <ProgressBar progress={progress} />\n      <View style={styles.answerCardContainer}>\n        <AnswerCard\n          question={allQuestions[currentQuestionIndex]?.question}\n          options={allQuestions[currentQuestionIndex]?.options}\n          correct_option={allQuestions[currentQuestionIndex]?.correct_option}\n        />\n      </View>\n      <TouchableOpacity\n        style={[\n          styles.btnNext,\n          {\n            backgroundColor: \"#ffffff\",\n          },\n        ]}\n        onPress={handleNext}\n      >\n        <Text style={styles.btnNextText}>NEXT</Text>\n      </TouchableOpacity>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  answerCardContainer: {\n    marginBottom: 20, // Adjust the margin here\n  },\n  btnNext: {\n    borderRadius: 10,\n    paddingVertical: 13,\n    paddingHorizontal: 20,\n    backgroundColor: \"#ffffff\",\n    position: \"absolute\",\n    bottom: 20,\n    right: 20,\n  },\n  btnNextText: {\n    color: \"#333\",\n    fontSize: 17,\n    letterSpacing: 1.1,\n  },\n});\n\nexport default QuizScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}