{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"accessibilityLabel\", \"accessibilityState\", \"color\", \"disabled\", \"onPress\", \"onLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"testID\", \"animateFrom\", \"extended\", \"iconMode\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport color from 'color';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Surface from \"../../Surface\";\nimport Icon from \"../../Icon\";\nimport TouchableRipple from \"../../TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../../../core/theming\";\nimport { white, black } from \"../../../styles/colors\";\nimport AnimatedText from \"../../Typography/AnimatedText\";\nimport { getCombinedStyles } from \"./utils\";\nvar SIZE = 56;\nvar BORDER_RADIUS = SIZE / 2;\nvar SCALE = 0.9;\nvar AnimatedFAB = function AnimatedFAB(_ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n    accessibilityState = _ref.accessibilityState,\n    customColor = _ref.color,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    theme = _ref.theme,\n    style = _ref.style,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    _ref$uppercase = _ref.uppercase,\n    uppercase = _ref$uppercase === void 0 ? true : _ref$uppercase,\n    testID = _ref.testID,\n    _ref$animateFrom = _ref.animateFrom,\n    animateFrom = _ref$animateFrom === void 0 ? 'right' : _ref$animateFrom,\n    _ref$extended = _ref.extended,\n    extended = _ref$extended === void 0 ? false : _ref$extended,\n    _ref$iconMode = _ref.iconMode,\n    iconMode = _ref$iconMode === void 0 ? 'dynamic' : _ref$iconMode,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var isIOS = Platform.OS === 'ios';\n  var isAnimatedFromRight = animateFrom === 'right';\n  var isIconStatic = iconMode === 'static';\n  var isRTL = I18nManager.isRTL;\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    visibility = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new Animated.Value(0)),\n    animFAB = _React$useRef2.current;\n  var scale = theme.animation.scale;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    textWidth = _React$useState2[0],\n    setTextWidth = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    textHeight = _React$useState4[0],\n    setTextHeight = _React$useState4[1];\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var disabledColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  var _ref3 = StyleSheet.flatten(style) || {},\n    _ref3$backgroundColor = _ref3.backgroundColor,\n    backgroundColor = _ref3$backgroundColor === void 0 ? disabled ? disabledColor : theme.colors.accent : _ref3$backgroundColor;\n  var foregroundColor;\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n  } else {\n    foregroundColor = !color(backgroundColor).isLight() ? white : 'rgba(0, 0, 0, .54)';\n  }\n  var rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n  var extendedWidth = textWidth + 1.5 * SIZE;\n  var distance = isAnimatedFromRight ? -textWidth - BORDER_RADIUS : textWidth + BORDER_RADIUS;\n  React.useEffect(function () {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n  var onTextLayout = function onTextLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    var currentHeight = Math.ceil(nativeEvent.lines[0].height);\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n      setTextWidth(currentWidth);\n    }\n  };\n  var propForDirection = function propForDirection(right) {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n    return right.reverse();\n  };\n  var combinedStyles = getCombinedStyles({\n    isAnimatedFromRight: isAnimatedFromRight,\n    isIconStatic: isIconStatic,\n    distance: distance,\n    animFAB: animFAB\n  });\n  return React.createElement(Surface, _extends({}, rest, {\n    style: [{\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }],\n      elevation: isIOS ? 6 : 0\n    }, styles.container, disabled && styles.disabled, style]\n  }), React.createElement(Animated.View, {\n    style: [{\n      transform: [{\n        scaleY: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([SCALE, 1])\n        })\n      }]\n    }, styles.standard]\n  }, React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.shadowWrapper]\n  }, React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.shadow, {\n      width: extendedWidth,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([1, 0.15, 0])\n      })\n    }]\n  }), React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.shadow, {\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([0, 0.85, 1])\n      }),\n      width: SIZE,\n      borderRadius: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0]),\n        outputRange: propForDirection([SIZE / (extendedWidth / SIZE), BORDER_RADIUS])\n      })\n    }, combinedStyles.absoluteFill]\n  })), React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.innerWrapper]\n  }, React.createElement(Animated.View, {\n    style: [styles.standard, {\n      width: extendedWidth,\n      backgroundColor: backgroundColor\n    }, combinedStyles.innerWrapper]\n  }, React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: _objectSpread(_objectSpread({}, accessibilityState), {}, {\n      disabled: disabled\n    }),\n    testID: testID,\n    style: styles.touchable\n  }, React.createElement(View, {\n    style: [styles.standard, {\n      width: extendedWidth\n    }]\n  }))))), React.createElement(Animated.View, {\n    style: [styles.iconWrapper, combinedStyles.iconWrapper],\n    pointerEvents: \"none\"\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: foregroundColor\n  })), React.createElement(View, {\n    pointerEvents: \"none\"\n  }, React.createElement(AnimatedText, {\n    numberOfLines: 1,\n    onTextLayout: isIOS ? onTextLayout : undefined,\n    ellipsizeMode: 'tail',\n    style: [_defineProperty({}, isAnimatedFromRight || isRTL ? 'right' : 'left', isIconStatic ? isIOS ? SIZE - 10 : SIZE - 12 : BORDER_RADIUS), {\n      minWidth: textWidth,\n      top: -BORDER_RADIUS - textHeight / 2,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.7 * distance, 0]),\n        outputRange: propForDirection([1, 0, 0])\n      }),\n      transform: [{\n        translateX: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([0, SIZE])\n        })\n      }]\n    }, styles.label, uppercase && styles.uppercaseLabel, _objectSpread({\n      color: foregroundColor\n    }, theme.fonts.medium)]\n  }, label)), !isIOS && React.createElement(ScrollView, {\n    style: styles.textPlaceholderContainer\n  }, React.createElement(Text, {\n    onTextLayout: onTextLayout\n  }, label)));\n};\nvar styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n    borderRadius: BORDER_RADIUS\n  },\n  disabled: {\n    elevation: 0\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: BORDER_RADIUS\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    borderRadius: BORDER_RADIUS\n  },\n  shadowWrapper: {\n    elevation: 0\n  },\n  shadow: {\n    elevation: 6,\n    borderRadius: BORDER_RADIUS\n  },\n  touchable: {\n    borderRadius: BORDER_RADIUS\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE\n  },\n  label: {\n    position: 'absolute'\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute'\n  }\n});\nexport default withTheme(AnimatedFAB);","map":{"version":3,"names":["React","color","Animated","View","StyleSheet","Easing","ScrollView","Text","Platform","I18nManager","Surface","Icon","TouchableRipple","withTheme","white","black","AnimatedText","getCombinedStyles","SIZE","BORDER_RADIUS","SCALE","AnimatedFAB","_ref","icon","label","_ref$accessibilityLab","accessibilityLabel","accessibilityState","customColor","disabled","onPress","onLongPress","theme","style","_ref$visible","visible","_ref$uppercase","uppercase","testID","_ref$animateFrom","animateFrom","_ref$extended","extended","_ref$iconMode","iconMode","rest","_objectWithoutProperties","_excluded","isIOS","OS","isAnimatedFromRight","isIconStatic","isRTL","_React$useRef","useRef","Value","visibility","current","_React$useRef2","animFAB","scale","animation","_React$useState","useState","_React$useState2","_slicedToArray","textWidth","setTextWidth","_React$useState3","_React$useState4","textHeight","setTextHeight","useEffect","timing","toValue","duration","useNativeDriver","start","disabledColor","dark","alpha","rgb","string","_ref3","flatten","_ref3$backgroundColor","backgroundColor","colors","accent","foregroundColor","isLight","rippleColor","extendedWidth","distance","easing","linear","onTextLayout","_ref2","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","createElement","_extends","opacity","transform","elevation","styles","container","scaleY","interpolate","inputRange","outputRange","standard","absoluteFill","shadowWrapper","pointerEvents","shadow","borderRadius","innerWrapper","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","_objectSpread","touchable","iconWrapper","source","size","numberOfLines","undefined","ellipsizeMode","_defineProperty","minWidth","top","translateX","uppercaseLabel","fonts","medium","textPlaceholderContainer","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/node_modules/react-native-paper/lib/module/components/FAB/AnimatedFAB/AnimatedFAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  Easing,\n  ScrollView,\n  Text,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport Surface from '../../Surface';\nimport Icon from '../../Icon';\nimport TouchableRipple from '../../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport { withTheme } from '../../../core/theming';\nimport type {\n  AccessibilityState,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport { white, black } from '../../../styles/colors';\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getCombinedStyles } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst BORDER_RADIUS = SIZE / 2;\nconst SCALE = 0.9;\n\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  testID,\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  ...rest\n}: Props) => {\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { scale } = theme.animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n    StyleSheet.flatten<ViewStyle>(style) || {};\n\n  let foregroundColor: string;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = !color(backgroundColor as string).isLight()\n      ? white\n      : 'rgba(0, 0, 0, .54)';\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  const extendedWidth = textWidth + 1.5 * SIZE;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - BORDER_RADIUS\n    : textWidth + BORDER_RADIUS;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n            elevation: isIOS ? 6 : 0,\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Animated.View\n        style={[\n          {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n              },\n            ]}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    BORDER_RADIUS,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n          />\n        </View>\n        <Animated.View pointerEvents=\"box-none\" style={[styles.innerWrapper]}>\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n              accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n              accessibilityComponentType=\"button\"\n              accessibilityRole=\"button\"\n              accessibilityState={{ ...accessibilityState, disabled }}\n              testID={testID}\n              style={styles.touchable}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? isIOS\n                  ? SIZE - 10\n                  : SIZE - 12\n                : BORDER_RADIUS,\n            },\n            {\n              minWidth: textWidth,\n              top: -BORDER_RADIUS - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }),\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            {\n              color: foregroundColor,\n              ...theme.fonts.medium,\n            },\n          ]}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <Text onTextLayout={onTextLayout}>{label}</Text>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n    borderRadius: BORDER_RADIUS,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: BORDER_RADIUS,\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    borderRadius: BORDER_RADIUS,\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n    borderRadius: BORDER_RADIUS,\n  },\n  touchable: {\n    borderRadius: BORDER_RADIUS,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default withTheme(AnimatedFAB);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}