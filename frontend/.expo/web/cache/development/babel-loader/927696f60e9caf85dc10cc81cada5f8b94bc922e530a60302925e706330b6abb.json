{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar PortalManager = function (_React$PureComponent) {\n  function PortalManager() {\n    var _this;\n    _classCallCheck(this, PortalManager);\n    _this = _callSuper(this, PortalManager, arguments);\n    _defineProperty(_this, \"state\", {\n      portals: []\n    });\n    _defineProperty(_this, \"mount\", function (key, children) {\n      _this.setState(function (state) {\n        return {\n          portals: [].concat(_toConsumableArray(state.portals), [{\n            key: key,\n            children: children\n          }])\n        };\n      });\n    });\n    _defineProperty(_this, \"update\", function (key, children) {\n      return _this.setState(function (state) {\n        return {\n          portals: state.portals.map(function (item) {\n            if (item.key === key) {\n              return _objectSpread(_objectSpread({}, item), {}, {\n                children: children\n              });\n            }\n            return item;\n          })\n        };\n      });\n    });\n    _defineProperty(_this, \"unmount\", function (key) {\n      return _this.setState(function (state) {\n        return {\n          portals: state.portals.filter(function (item) {\n            return item.key !== key;\n          })\n        };\n      });\n    });\n    return _this;\n  }\n  _inherits(PortalManager, _React$PureComponent);\n  return _createClass(PortalManager, [{\n    key: \"render\",\n    value: function render() {\n      return this.state.portals.map(function (_ref) {\n        var key = _ref.key,\n          children = _ref.children;\n        return React.createElement(View, {\n          key: key,\n          collapsable: false,\n          pointerEvents: \"box-none\",\n          style: StyleSheet.absoluteFill\n        }, children);\n      });\n    }\n  }]);\n}(React.PureComponent);\nexport { PortalManager as default };","map":{"version":3,"sources":["D:\\Community Dreams frontend\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\Portal\\PortalManager.tsx"],"names":["React","PortalManager","PureComponent","portals","key","children","setState","state","map","item","filter","render","StyleSheet","absoluteFill"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAA,IAAA;AAAA,OAAA,UAAA;AAAA,IAaqBC,aAAN,aAAA,oBAAA;EAA2D,SAAA,cAAA,EAAA;IAAA,IAAA,KAAA;IAAA,eAAA,OAAA,aAAA;IAAA,KAAA,GAAA,UAAA,OAAA,aAAA,EAAA,SAAA;IAAA,eAAA,CAAA,KAAA,EAAA,OAAA,EACzD;MACbE,OAAO,EAAE;IADI,CADyD,CAAA;IAAA,eAAA,CAAA,KAAA,EAAA,OAAA,EAKhE,UAACC,GAAD,EAAcC,QAAd,EAA4C;MAClD,KAAA,CAAKC,QAAL,CAAeC,UAAAA,KAAD;QAAA,OAAY;UACxBJ,OAAO,KAAA,MAAA,CAAA,kBAAA,CAAMI,KAAK,CAACJ,OAAV,IAAmB;YAAEC,GAAF,EAAEA,GAAF;YAAOC,QAAAA,EAAAA;UAAP,CAAnB;QADe,CAAZ;MAAA,CAAd,CAAA;IAGD,CATuE,CAAA;IAAA,eAAA,CAAA,KAAA,EAAA,QAAA,EAW/D,UAACD,GAAD,EAAcC,QAAd;MAAA,OACP,KAAA,CAAKC,QAAL,CAAeC,UAAAA,KAAD;QAAA,OAAY;UACxBJ,OAAO,EAAE,KAAK,CAACA,OAAN,CAAcK,GAAd,CAAmBC,UAAAA,IAAD,EAAU;YACnC,IAAIA,IAAI,CAACL,GAALK,KAAaL,GAAjB,EAAsB;cACpB,OAAA,aAAA,CAAA,aAAA,KAAYK,IAAL;gBAAWJ,QAAAA,EAAAA;cAAAA;YACnB;YACD,OAAOI,IAAP;UACD,CALQ;QADe,CAAZ;MAAA,CAAd,CAZsE;IAAA,EAAA;IAAA,eAAA,CAAA,KAAA,EAAA,SAAA,EAqB7DL,UAAAA,GAAD;MAAA,OACR,KAAA,CAAKE,QAAL,CAAeC,UAAAA,KAAD;QAAA,OAAY;UACxBJ,OAAO,EAAEI,KAAK,CAACJ,OAANI,CAAcG,MAAdH,CAAsBE,UAAAA,IAAD;YAAA,OAAUA,IAAI,CAACL,GAALK,KAAaL,GAA5CG;UAAAA;QADe,CAAZ;MAAA,CAAd,CAtBsE;IAAA,EAAA;IAAA,OAAA,KAAA;EAAA;EAAA,SAAA,CAAA,aAAA,EAAA,oBAAA;EAAA,OAAA,YAAA,CAAA,aAAA;IAAA,GAAA;IAAA,KAAA,EA0BxEI,SAAAA,OAAAA,EAAS;MACP,OAAO,IAAA,CAAKJ,KAAL,CAAWJ,OAAX,CAAmBK,GAAnB,CAAuB,UAAA,IAAA,EAAA;QAAA,IAAGJ,GAAF,GAAD,IAAA,CAAGA,GAAF;UAAOC,QAAAA,GAAR,IAAA,CAAQA,QAAAA;QAAR,OAC5B,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;UACE,GAAG,EAAED,GADP;UAEE,WAAW,EACT,KAAA;UAEF,aAAa,EAAC,UALhB;UAME,KAAK,EAAEQ,UAAU,CAACC;QANpB,CAAA,EAQGR,QARH,CAD4B;MAAA,CAAvB,CAAP;IAYD;EAAA;AAAA,EAvCwCL,KAAK,CAACE,aAAlC;AAAA,SAAMD,aAAN,IAAA,OAAA","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\ntype State = {\n  portals: Array<{\n    key: number;\n    children: React.ReactNode;\n  }>;\n};\n\n/**\n * Portal host is the component which actually renders all Portals.\n */\nexport default class PortalManager extends React.PureComponent<{}, State> {\n  state: State = {\n    portals: [],\n  };\n\n  mount = (key: number, children: React.ReactNode) => {\n    this.setState((state) => ({\n      portals: [...state.portals, { key, children }],\n    }));\n  };\n\n  update = (key: number, children: React.ReactNode) =>\n    this.setState((state) => ({\n      portals: state.portals.map((item) => {\n        if (item.key === key) {\n          return { ...item, children };\n        }\n        return item;\n      }),\n    }));\n\n  unmount = (key: number) =>\n    this.setState((state) => ({\n      portals: state.portals.filter((item) => item.key !== key),\n    }));\n\n  render() {\n    return this.state.portals.map(({ key, children }) => (\n      <View\n        key={key}\n        collapsable={\n          false /* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */\n        }\n        pointerEvents=\"box-none\"\n        style={StyleSheet.absoluteFill}\n      >\n        {children}\n      </View>\n    ));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}