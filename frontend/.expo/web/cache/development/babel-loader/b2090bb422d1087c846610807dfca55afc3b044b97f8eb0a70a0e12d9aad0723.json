{"ast":null,"code":"import * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function useIsKeyboardShown(_ref) {\n  var onShow = _ref.onShow,\n    onHide = _ref.onHide;\n  React.useEffect(function () {\n    var willShowSubscription;\n    var willHideSubscription;\n    var didShowSubscription;\n    var didHideSubscription;\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n    return function () {\n      if (Platform.OS === 'ios') {\n        var _willShowSubscription, _willHideSubscription;\n        if ((_willShowSubscription = willShowSubscription) !== null && _willShowSubscription !== void 0 && _willShowSubscription.remove) {\n          willShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n        if ((_willHideSubscription = willHideSubscription) !== null && _willHideSubscription !== void 0 && _willHideSubscription.remove) {\n          willHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        var _didShowSubscription, _didHideSubscription;\n        if ((_didShowSubscription = didShowSubscription) !== null && _didShowSubscription !== void 0 && _didShowSubscription.remove) {\n          didShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n        if ((_didHideSubscription = didHideSubscription) !== null && _didHideSubscription !== void 0 && _didHideSubscription.remove) {\n          didHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}","map":{"version":3,"names":["React","Keyboard","Platform","useIsKeyboardShown","_ref","onShow","onHide","useEffect","willShowSubscription","willHideSubscription","didShowSubscription","didHideSubscription","OS","addListener","_willShowSubscription","_willHideSubscription","remove","removeListener","_didShowSubscription","_didHideSubscription"],"sources":["C:\\voluteer project\\behavior-dev-team\\frontend\\node_modules\\react-native-paper\\lib\\module\\utils\\useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n  onShow: () => void;\n  onHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n  React.useEffect(() => {\n    let willShowSubscription: NativeEventSubscription | undefined;\n    let willHideSubscription: NativeEventSubscription | undefined;\n    let didShowSubscription: NativeEventSubscription | undefined;\n    let didHideSubscription: NativeEventSubscription | undefined;\n\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        if (willShowSubscription?.remove) {\n          willShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if (willHideSubscription?.remove) {\n          willHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        if (didShowSubscription?.remove) {\n          didShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if (didHideSubscription?.remove) {\n          didHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,QAAA;AAAA,OAAAC,QAAA;AAOA,eAAe,SAASC,kBAATA,CAAAC,IAAA,EAAuD;EAAA,IAAzBC,MAAF,GAA2BD,IAAA,CAAzBC,MAAF;IAAUC,MAAA,GAAiBF,IAAA,CAAjBE,MAAA;EACnDN,KAAK,CAACO,SAAN,CAAgB,YAAM;IACpB,IAAIC,oBAAJ;IACA,IAAIC,oBAAJ;IACA,IAAIC,mBAAJ;IACA,IAAIC,mBAAJ;IAEA,IAAIT,QAAQ,CAACU,EAAT,KAAgB,KAApB,EAA2B;MACzBJ,oBAAoB,GAAGP,QAAQ,CAACY,WAAT,CAAqB,kBAArB,EAAyCR,MAAzC,CAAvB;MACAI,oBAAoB,GAAGR,QAAQ,CAACY,WAAT,CAAqB,kBAArB,EAAyCP,MAAzC,CAAvB;IACD,CAHD,MAGO;MACLI,mBAAmB,GAAGT,QAAQ,CAACY,WAAT,CAAqB,iBAArB,EAAwCR,MAAxC,CAAtB;MACAM,mBAAmB,GAAGV,QAAQ,CAACY,WAAT,CAAqB,iBAArB,EAAwCP,MAAxC,CAAtB;IACD;IAED,OAAO,YAAM;MACX,IAAIJ,QAAQ,CAACU,EAAT,KAAgB,KAApB,EAA2B;QAAA,IAAAE,qBAAA,EAAAC,qBAAA;QACzB,KAAAD,qBAAA,GAAIN,oBAAJ,cAAAM,qBAAA,eAAIA,qBAAA,CAAsBE,MAA1B,EAAkC;UAChCR,oBAAoB,CAACQ,MAArB;QACD,CAFD,MAEO;UACLf,QAAQ,CAACgB,cAAT,CAAwB,kBAAxB,EAA4CZ,MAA5C;QACD;QAED,KAAAU,qBAAA,GAAIN,oBAAJ,cAAAM,qBAAA,eAAIA,qBAAA,CAAsBC,MAA1B,EAAkC;UAChCP,oBAAoB,CAACO,MAArB;QACD,CAFD,MAEO;UACLf,QAAQ,CAACgB,cAAT,CAAwB,kBAAxB,EAA4CX,MAA5C;QACD;MACF,CAZD,MAYO;QAAA,IAAAY,oBAAA,EAAAC,oBAAA;QACL,KAAAD,oBAAA,GAAIR,mBAAJ,cAAAQ,oBAAA,eAAIA,oBAAA,CAAqBF,MAAzB,EAAiC;UAC/BN,mBAAmB,CAACM,MAApB;QACD,CAFD,MAEO;UACLf,QAAQ,CAACgB,cAAT,CAAwB,iBAAxB,EAA2CZ,MAA3C;QACD;QAED,KAAAc,oBAAA,GAAIR,mBAAJ,cAAAQ,oBAAA,eAAIA,oBAAA,CAAqBH,MAAzB,EAAiC;UAC/BL,mBAAmB,CAACK,MAApB;QACD,CAFD,MAEO;UACLf,QAAQ,CAACgB,cAAT,CAAwB,iBAAxB,EAA2CX,MAA3C;QACD;MACF;IACF,CA1BD;EA2BD,CAzCD,EAyCG,CAACA,MAAD,EAASD,MAAT,CAzCH;AA0CD"},"metadata":{},"sourceType":"module","externalDependencies":[]}