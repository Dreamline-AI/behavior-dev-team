{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"style\", \"index\", \"children\", \"visibility\"];\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nvar BottomNavigationRouteScreen = function (_React$Component) {\n  function BottomNavigationRouteScreen() {\n    _classCallCheck(this, BottomNavigationRouteScreen);\n    return _callSuper(this, BottomNavigationRouteScreen, arguments);\n  }\n  _inherits(BottomNavigationRouteScreen, _React$Component);\n  return _createClass(BottomNavigationRouteScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        style = _this$props.style,\n        index = _this$props.index,\n        children = _this$props.children,\n        visibility = _this$props.visibility,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n      var display = Platform.OS === 'web' ? visibility === 0 ? 'none' : 'flex' : undefined;\n      return React.createElement(View, _extends({\n        testID: \"RouteScreen: \" + index,\n        style: [style, {\n          display: display\n        }]\n      }, rest), children);\n    }\n  }]);\n}(React.Component);\nexport default Animated.createAnimatedComponent(BottomNavigationRouteScreen);","map":{"version":3,"sources":["C:\\Users\\ellen\\OneDrive\\Documents\\backup-folder-1\\CDreams\\behavior-dev-team\\frontend\\node_modules\\react-native-paper\\lib\\module\\components\\BottomNavigation\\BottomNavigationRouteScreen.tsx"],"names":["React","BottomNavigationRouteScreen","Component","render","style","index","children","visibility","rest","props","display","Platform","OS","undefined","Animated","createAnimatedComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA,OAAA,QAAA;AAAA,OAAA,QAAA;AAAA,OAAA,IAAA;AAAA,IAQMC,2BAAN,aAAA,gBAAA;EAAA,SAAA,4BAAA;IAAA,eAAA,OAAA,2BAAA;IAAA,OAAA,UAAA,OAAA,2BAAA,EAAA,SAAA;EAAA;EAAA,SAAA,CAAA,2BAAA,EAAA,gBAAA;EAAA,OAAA,YAAA,CAAA,2BAAA;IAAA,GAAA;IAAA,KAAA,EACEE,SAAAA,OAAAA,EAAsB;MACpB,IAAA,WAAA,GAAwD,IAAA,CAAKM,KADzC;QACZL,KAAF,GAAA,WAAA,CAAEA,KAAF;QAASC,KAAT,GAAA,WAAA,CAASA,KAAT;QAAgBC,QAAhB,GAAA,WAAA,CAAgBA,QAAhB;QAA0BC,UAA1B,GAAA,WAAA,CAA0BA,UAA1B;QAAyCC,IAAAA,GAAAA,wBAAAA,CAAAA,WAAAA,EAAAA,SAAAA;MAK/C,IAAME,OAAO,GACXC,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAyBJ,UAAU,KAAK,CAAfA,GAAmB,MAAnBA,GAA4B,MAArDI,GAA+DE,SADjE;MAGA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA;QACE,MAAM,oBAAkBR,KAD1B;QAEE,KAAK,EAAE,CAACD,KAAD,EAAQ;UAAEM,OAAAA,EAAAA;QAAF,CAAR;MAFT,CAAA,EAGMF,IAHN,CAAA,EAKGF,QALH,CADF;IASD;EAAA;AAAA,EAnBuCN,KAAK,CAACE,SAAhD;AAsBA,eAAeY,QAAQ,CAACC,uBAATD,CAAiCb,2BAAjCa,CAAf","sourcesContent":["import React from 'react';\nimport { Animated, Platform, View, ViewProps } from 'react-native';\n\ninterface Props extends ViewProps {\n  visibility?: 0 | 1 | Animated.AnimatedInterpolation;\n  index: number;\n}\n\nclass BottomNavigationRouteScreen extends React.Component<Props> {\n  render(): JSX.Element {\n    const { style, index, children, visibility, ...rest } = this.props;\n\n    // On Web, the unfocused tab screens can still be clicked since they are transparent, but still there\n    // Hiding them with `display: none` makes sure that they won't receive clicks\n    // We only set it on Web since on native, react-native-pager-view's breaks due to layout changing\n    const display =\n      Platform.OS === 'web' ? (visibility === 0 ? 'none' : 'flex') : undefined;\n\n    return (\n      <View\n        testID={`RouteScreen: ${index}`}\n        style={[style, { display }]}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n}\n\nexport default Animated.createAnimatedComponent(BottomNavigationRouteScreen);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}