{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/AnswerCard.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Questions from \"../helpers/Questions\";\nimport data from \"../helpers/QuizData\";\nimport { useRef } from 'react';\nvar AnswerCard = function AnswerCard(_ref) {\n  var question = _ref.question,\n    options = _ref.options,\n    correct_option = _ref.correct_option;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showOptions = _useState2[0],\n    setShowOptions = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedOption = _useState4[0],\n    setSelectedOption = _useState4[1];\n  var checkAnswer = function checkAnswer() {\n    if (selectedOption === correct_option) {\n      return React.createElement(Text, {\n        style: styles.correctAnswer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }\n      }, \"Correct!\");\n    } else {\n      return React.createElement(Text, {\n        style: styles.wrongAnswer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      }, \"Wrong! Correct answer is \", correct_option);\n    }\n  };\n  var cardMove = function cardMove() {\n    var animatedValue = useRef(new Animated.Value(0)).current;\n    Animated.timing(animatedValue, {\n      toValue: 4000,\n      duration: 4000,\n      useNativeDriver: false\n    }).start();\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.question,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, question), React.createElement(Animated.View, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      cardMove();\n      setShowOptions(!showOptions);\n    },\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, showOptions && React.createElement(View, {\n    style: styles.options,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, options.map(function (option, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      style: styles.option,\n      onPress: function onPress() {\n        return setSelectedOption(option);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, option));\n  }), selectedOption && checkAnswer()))));\n};\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    marginBottom: 20,\n    display: 'flex'\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10\n  },\n  options: {\n    marginTop: 10\n  },\n  option: {\n    paddingVertical: 30,\n    paddingHorizontal: 20,\n    backgroundColor: '#f4f4f4',\n    borderRadius: 5,\n    marginBottom: 10,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: '#808080'\n  },\n  correctAnswer: {\n    color: 'green',\n    marginTop: 10\n  },\n  wrongAnswer: {\n    color: 'red',\n    marginTop: 10\n  }\n});\nexport default AnswerCard;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Animated","Questions","data","useRef","AnswerCard","_ref","question","options","correct_option","_useState","_useState2","_slicedToArray","showOptions","setShowOptions","_useState3","_useState4","selectedOption","setSelectedOption","checkAnswer","createElement","style","styles","correctAnswer","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","wrongAnswer","cardMove","animatedValue","Value","current","timing","toValue","duration","useNativeDriver","start","Fragment","card","onPress","map","option","index","key","create","backgroundColor","borderRadius","marginBottom","display","fontSize","fontWeight","marginTop","paddingVertical","paddingHorizontal","borderStyle","borderWidth","borderColor","color"],"sources":["/Users/saeb_97/Desktop/behavior-dev-team/frontend/src/components/AnswerCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Animated } from 'react-native'; // Import Animated\nimport Questions from '../helpers/Questions';\nimport data from '../helpers/QuizData';\nimport { useRef } from 'react';\n\nconst AnswerCard = ({ question, options, correct_option }) => {\n  const [showOptions, setShowOptions] = useState(true);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const checkAnswer = () => {\n    if (selectedOption === correct_option) {\n      return <Text style={styles.correctAnswer}>Correct!</Text>;\n    } else {\n      return <Text style={styles.wrongAnswer}>Wrong! Correct answer is {correct_option}</Text>;\n    }\n  };\n\n  const cardMove = () => {\n    const animatedValue = useRef(new Animated.Value(0)).current;\n\n    Animated.timing(animatedValue, {\n    \n    toValue: 4000,\n    \n    duration: 4000,\n    \n    useNativeDriver: false,\n    \n    }).start();\n    \n    };\n  return (\n    <>\n      <Text style={styles.question}>{question}</Text>\n      <Animated.View style={styles.card }>\n        <TouchableOpacity onPress={() => { cardMove(); setShowOptions(!showOptions); }} style={styles.card}>\n          {showOptions && (\n            <View style={styles.options}>\n              {options.map((option, index) => (\n                <TouchableOpacity\n                  key={index}\n                  style={styles.option}\n                  onPress={() => setSelectedOption(option)}\n                >\n                  <Text>{option}</Text>\n                </TouchableOpacity>\n              ))}\n              {selectedOption && checkAnswer()}\n            </View>\n          )}\n        </TouchableOpacity>\n      </Animated.View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    marginBottom: 20,\n    display: 'flex',\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 10,\n  },\n  options: {\n    marginTop: 10,\n  },\n  option: {\n    paddingVertical: 30,\n    paddingHorizontal: 20,\n    backgroundColor: '#f4f4f4',\n    borderRadius: 5,\n    marginBottom: 10,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: '#808080',\n  },\n  correctAnswer: {\n    color: 'green',\n    marginTop: 10,\n  },\n  wrongAnswer: {\n    color: 'red',\n    marginTop: 10,\n  },\n});\n\nexport default AnswerCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}